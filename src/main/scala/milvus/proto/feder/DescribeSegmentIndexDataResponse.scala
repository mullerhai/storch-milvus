// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package milvus.proto.feder

import milvus.proto.feder

/** @param indexData
  *   segmentID =&gt; segmentIndexData
  */
@SerialVersionUID(0L)
final case class DescribeSegmentIndexDataResponse(
                                                   status: _root_.scala.Option[io.milvus.grpc.common.Status] = _root_.scala.None,
                                                   indexData: _root_.scala.collection.immutable.Map[_root_.scala.Long, SegmentIndexData] = _root_.scala.collection.immutable.Map.empty,
                                                   indexParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair] = _root_.scala.Seq.empty,
                                                   unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DescribeSegmentIndexDataResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (status.isDefined) {
        val __value = status.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      indexData.foreach { __item =>
        val __value = feder.DescribeSegmentIndexDataResponse._typemapper_indexData.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      indexParams.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      status.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      indexData.foreach { __v =>
        val __m = feder.DescribeSegmentIndexDataResponse._typemapper_indexData.toBase(__v)
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      indexParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getStatus: io.milvus.grpc.common.Status = status.getOrElse(io.milvus.grpc.common.Status.defaultInstance)
    def clearStatus: DescribeSegmentIndexDataResponse = copy(status = _root_.scala.None)
    def withStatus(__v: io.milvus.grpc.common.Status): DescribeSegmentIndexDataResponse = copy(status = Option(__v))
    def clearIndexData = copy(indexData = _root_.scala.collection.immutable.Map.empty)
    def addIndexData(__vs: (_root_.scala.Long, SegmentIndexData) *): DescribeSegmentIndexDataResponse = addAllIndexData(__vs)
    def addAllIndexData(__vs: Iterable[(_root_.scala.Long, SegmentIndexData)]): DescribeSegmentIndexDataResponse = copy(indexData = indexData ++ __vs)
    def withIndexData(__v: _root_.scala.collection.immutable.Map[_root_.scala.Long, SegmentIndexData]): DescribeSegmentIndexDataResponse = copy(indexData = __v)
    def clearIndexParams = copy(indexParams = _root_.scala.Seq.empty)
    def addIndexParams(__vs: io.milvus.grpc.common.KeyValuePair *): DescribeSegmentIndexDataResponse = addAllIndexParams(__vs)
    def addAllIndexParams(__vs: Iterable[io.milvus.grpc.common.KeyValuePair]): DescribeSegmentIndexDataResponse = copy(indexParams = indexParams ++ __vs)
    def withIndexParams(__v: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]): DescribeSegmentIndexDataResponse = copy(indexParams = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => status.orNull
        case 2 => indexData.iterator.map(feder.DescribeSegmentIndexDataResponse._typemapper_indexData.toBase(_)).toSeq
        case 3 => indexParams
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => status.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PRepeated(indexData.iterator.map(feder.DescribeSegmentIndexDataResponse._typemapper_indexData.toBase(_).toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(indexParams.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: DescribeSegmentIndexDataResponse.type = feder.DescribeSegmentIndexDataResponse
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.feder.DescribeSegmentIndexDataResponse])
}

object DescribeSegmentIndexDataResponse extends scalapb.GeneratedMessageCompanion[DescribeSegmentIndexDataResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[DescribeSegmentIndexDataResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): DescribeSegmentIndexDataResponse = {
    var __status: _root_.scala.Option[io.milvus.grpc.common.Status] = _root_.scala.None
    val __indexData: _root_.scala.collection.mutable.Builder[(_root_.scala.Long, SegmentIndexData), _root_.scala.collection.immutable.Map[_root_.scala.Long, SegmentIndexData]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Long, SegmentIndexData]
    val __indexParams: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __status = _root_.scala.Option(__status.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.Status](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __indexData += feder.DescribeSegmentIndexDataResponse._typemapper_indexData.toCustom(_root_.scalapb.LiteParser.readMessage[DescribeSegmentIndexDataResponse.IndexDataEntry](_input__))
        case 26 =>
          __indexParams += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.KeyValuePair](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    DescribeSegmentIndexDataResponse(
        status = __status,
        indexData = __indexData.result(),
        indexParams = __indexParams.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[DescribeSegmentIndexDataResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      DescribeSegmentIndexDataResponse(
        status = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.common.Status]]),
        indexData = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[DescribeSegmentIndexDataResponse.IndexDataEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(feder.DescribeSegmentIndexDataResponse._typemapper_indexData.toCustom(_)).toMap,
        indexParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FederProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = feder.FederProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.milvus.grpc.common.Status
      case 2 => __out = feder.DescribeSegmentIndexDataResponse.IndexDataEntry
      case 3 => __out = io.milvus.grpc.common.KeyValuePair
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      feder.DescribeSegmentIndexDataResponse.IndexDataEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = DescribeSegmentIndexDataResponse(
    status = _root_.scala.None,
    indexData = _root_.scala.collection.immutable.Map.empty,
    indexParams = _root_.scala.Seq.empty
  )
  @SerialVersionUID(0L)
  final case class IndexDataEntry(
                                   key: _root_.scala.Long = 0L,
                                   value: _root_.scala.Option[SegmentIndexData] = _root_.scala.None,
                                   unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[IndexDataEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (__value != 0L) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (__v != 0L) {
            _output__.writeInt64(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Long): IndexDataEntry = copy(key = __v)
      def getValue: SegmentIndexData = value.getOrElse(feder.SegmentIndexData.defaultInstance)
      def clearValue: IndexDataEntry = copy(value = _root_.scala.None)
      def withValue(__v: SegmentIndexData): IndexDataEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != 0L) __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PLong(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: DescribeSegmentIndexDataResponse.IndexDataEntry.type = feder.DescribeSegmentIndexDataResponse.IndexDataEntry
      // @@protoc_insertion_point(GeneratedMessage[milvus.proto.feder.DescribeSegmentIndexDataResponse.IndexDataEntry])
  }
  
  object IndexDataEntry extends scalapb.GeneratedMessageCompanion[DescribeSegmentIndexDataResponse.IndexDataEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[DescribeSegmentIndexDataResponse.IndexDataEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): DescribeSegmentIndexDataResponse.IndexDataEntry = {
      var __key: _root_.scala.Long = 0L
      var __value: _root_.scala.Option[SegmentIndexData] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __key = _input__.readInt64()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[SegmentIndexData](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      feder.DescribeSegmentIndexDataResponse.IndexDataEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[DescribeSegmentIndexDataResponse.IndexDataEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        feder.DescribeSegmentIndexDataResponse.IndexDataEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[SegmentIndexData]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = feder.DescribeSegmentIndexDataResponse.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = feder.DescribeSegmentIndexDataResponse.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = feder.SegmentIndexData
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = feder.DescribeSegmentIndexDataResponse.IndexDataEntry(
      key = 0L,
      value = _root_.scala.None
    )
    implicit class IndexDataEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, DescribeSegmentIndexDataResponse.IndexDataEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, DescribeSegmentIndexDataResponse.IndexDataEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, SegmentIndexData] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[SegmentIndexData]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[DescribeSegmentIndexDataResponse.IndexDataEntry, (_root_.scala.Long, SegmentIndexData)] =
      _root_.scalapb.TypeMapper[DescribeSegmentIndexDataResponse.IndexDataEntry, (_root_.scala.Long, SegmentIndexData)](__m => (__m.key, __m.getValue))(__p => feder.DescribeSegmentIndexDataResponse.IndexDataEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Long,
      value: _root_.scala.Option[SegmentIndexData]
    ): DescribeSegmentIndexDataResponse.IndexDataEntry = feder.DescribeSegmentIndexDataResponse.IndexDataEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.feder.DescribeSegmentIndexDataResponse.IndexDataEntry])
  }
  
  implicit class DescribeSegmentIndexDataResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, DescribeSegmentIndexDataResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, DescribeSegmentIndexDataResponse](_l) {
    def status: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.Status] = field(_.getStatus)((c_, f_) => c_.copy(status = _root_.scala.Option(f_)))
    def optionalStatus: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.common.Status]] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def indexData: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Long, SegmentIndexData]] = field(_.indexData)((c_, f_) => c_.copy(indexData = f_))
    def indexParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]] = field(_.indexParams)((c_, f_) => c_.copy(indexParams = f_))
  }
  final val STATUS_FIELD_NUMBER = 1
  final val INDEX_DATA_FIELD_NUMBER = 2
  final val INDEX_PARAMS_FIELD_NUMBER = 3
  @transient
  private[feder] val _typemapper_indexData: _root_.scalapb.TypeMapper[DescribeSegmentIndexDataResponse.IndexDataEntry, (_root_.scala.Long, SegmentIndexData)] = implicitly[_root_.scalapb.TypeMapper[DescribeSegmentIndexDataResponse.IndexDataEntry, (_root_.scala.Long, SegmentIndexData)]]
  def of(
          status: _root_.scala.Option[io.milvus.grpc.common.Status],
          indexData: _root_.scala.collection.immutable.Map[_root_.scala.Long, SegmentIndexData],
          indexParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]
  ): DescribeSegmentIndexDataResponse = DescribeSegmentIndexDataResponse(
    status,
    indexData,
    indexParams
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.feder.DescribeSegmentIndexDataResponse])
}
