// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

sealed abstract class ObjectPrivilege(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.common.ObjectPrivilege
  type RecognizedType = io.milvus.grpc.common.ObjectPrivilege.Recognized
  def isPrivilegeAll: _root_.scala.Boolean = false
  def isPrivilegeCreateCollection: _root_.scala.Boolean = false
  def isPrivilegeDropCollection: _root_.scala.Boolean = false
  def isPrivilegeDescribeCollection: _root_.scala.Boolean = false
  def isPrivilegeShowCollections: _root_.scala.Boolean = false
  def isPrivilegeLoad: _root_.scala.Boolean = false
  def isPrivilegeRelease: _root_.scala.Boolean = false
  def isPrivilegeCompaction: _root_.scala.Boolean = false
  def isPrivilegeInsert: _root_.scala.Boolean = false
  def isPrivilegeDelete: _root_.scala.Boolean = false
  def isPrivilegeGetStatistics: _root_.scala.Boolean = false
  def isPrivilegeCreateIndex: _root_.scala.Boolean = false
  def isPrivilegeIndexDetail: _root_.scala.Boolean = false
  def isPrivilegeDropIndex: _root_.scala.Boolean = false
  def isPrivilegeSearch: _root_.scala.Boolean = false
  def isPrivilegeFlush: _root_.scala.Boolean = false
  def isPrivilegeQuery: _root_.scala.Boolean = false
  def isPrivilegeLoadBalance: _root_.scala.Boolean = false
  def isPrivilegeImport: _root_.scala.Boolean = false
  def isPrivilegeCreateOwnership: _root_.scala.Boolean = false
  def isPrivilegeUpdateUser: _root_.scala.Boolean = false
  def isPrivilegeDropOwnership: _root_.scala.Boolean = false
  def isPrivilegeSelectOwnership: _root_.scala.Boolean = false
  def isPrivilegeManageOwnership: _root_.scala.Boolean = false
  def isPrivilegeSelectUser: _root_.scala.Boolean = false
  def isPrivilegeUpsert: _root_.scala.Boolean = false
  def isPrivilegeCreateResourceGroup: _root_.scala.Boolean = false
  def isPrivilegeDropResourceGroup: _root_.scala.Boolean = false
  def isPrivilegeDescribeResourceGroup: _root_.scala.Boolean = false
  def isPrivilegeListResourceGroups: _root_.scala.Boolean = false
  def isPrivilegeTransferNode: _root_.scala.Boolean = false
  def isPrivilegeTransferReplica: _root_.scala.Boolean = false
  def isPrivilegeGetLoadingProgress: _root_.scala.Boolean = false
  def isPrivilegeGetLoadState: _root_.scala.Boolean = false
  def isPrivilegeRenameCollection: _root_.scala.Boolean = false
  def isPrivilegeCreateDatabase: _root_.scala.Boolean = false
  def isPrivilegeDropDatabase: _root_.scala.Boolean = false
  def isPrivilegeListDatabases: _root_.scala.Boolean = false
  def isPrivilegeFlushAll: _root_.scala.Boolean = false
  def isPrivilegeCreatePartition: _root_.scala.Boolean = false
  def isPrivilegeDropPartition: _root_.scala.Boolean = false
  def isPrivilegeShowPartitions: _root_.scala.Boolean = false
  def isPrivilegeHasPartition: _root_.scala.Boolean = false
  def isPrivilegeGetFlushState: _root_.scala.Boolean = false
  def isPrivilegeCreateAlias: _root_.scala.Boolean = false
  def isPrivilegeDropAlias: _root_.scala.Boolean = false
  def isPrivilegeDescribeAlias: _root_.scala.Boolean = false
  def isPrivilegeListAliases: _root_.scala.Boolean = false
  def isPrivilegeUpdateResourceGroups: _root_.scala.Boolean = false
  def isPrivilegeAlterDatabase: _root_.scala.Boolean = false
  def isPrivilegeDescribeDatabase: _root_.scala.Boolean = false
  def isPrivilegeBackupRbac: _root_.scala.Boolean = false
  def isPrivilegeRestoreRbac: _root_.scala.Boolean = false
  def isPrivilegeGroupReadOnly: _root_.scala.Boolean = false
  def isPrivilegeGroupReadWrite: _root_.scala.Boolean = false
  def isPrivilegeGroupAdmin: _root_.scala.Boolean = false
  def isPrivilegeCreatePrivilegeGroup: _root_.scala.Boolean = false
  def isPrivilegeDropPrivilegeGroup: _root_.scala.Boolean = false
  def isPrivilegeListPrivilegeGroups: _root_.scala.Boolean = false
  def isPrivilegeOperatePrivilegeGroup: _root_.scala.Boolean = false
  def isPrivilegeGroupClusterReadOnly: _root_.scala.Boolean = false
  def isPrivilegeGroupClusterReadWrite: _root_.scala.Boolean = false
  def isPrivilegeGroupClusterAdmin: _root_.scala.Boolean = false
  def isPrivilegeGroupDatabaseReadOnly: _root_.scala.Boolean = false
  def isPrivilegeGroupDatabaseReadWrite: _root_.scala.Boolean = false
  def isPrivilegeGroupDatabaseAdmin: _root_.scala.Boolean = false
  def isPrivilegeGroupCollectionReadOnly: _root_.scala.Boolean = false
  def isPrivilegeGroupCollectionReadWrite: _root_.scala.Boolean = false
  def isPrivilegeGroupCollectionAdmin: _root_.scala.Boolean = false
  def isPrivilegeGetImportProgress: _root_.scala.Boolean = false
  def isPrivilegeListImport: _root_.scala.Boolean = false
  def isPrivilegeAddCollectionField: _root_.scala.Boolean = false
  def isPrivilegeAddFileResource: _root_.scala.Boolean = false
  def isPrivilegeRemoveFileResource: _root_.scala.Boolean = false
  def isPrivilegeListFileResources: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[ObjectPrivilege] = io.milvus.grpc.common.ObjectPrivilege
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.common.ObjectPrivilege.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.common.ObjectPrivilege.Recognized])
}

object ObjectPrivilege extends _root_.scalapb.GeneratedEnumCompanion[ObjectPrivilege] {
  sealed trait Recognized extends ObjectPrivilege
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ObjectPrivilege] = this
  
  @SerialVersionUID(0L)
  case object PrivilegeAll extends ObjectPrivilege(0) with ObjectPrivilege.Recognized {
    val index = 0
    val name = "PrivilegeAll"
    override def isPrivilegeAll: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCreateCollection extends ObjectPrivilege(1) with ObjectPrivilege.Recognized {
    val index = 1
    val name = "PrivilegeCreateCollection"
    override def isPrivilegeCreateCollection: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDropCollection extends ObjectPrivilege(2) with ObjectPrivilege.Recognized {
    val index = 2
    val name = "PrivilegeDropCollection"
    override def isPrivilegeDropCollection: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDescribeCollection extends ObjectPrivilege(3) with ObjectPrivilege.Recognized {
    val index = 3
    val name = "PrivilegeDescribeCollection"
    override def isPrivilegeDescribeCollection: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeShowCollections extends ObjectPrivilege(4) with ObjectPrivilege.Recognized {
    val index = 4
    val name = "PrivilegeShowCollections"
    override def isPrivilegeShowCollections: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeLoad extends ObjectPrivilege(5) with ObjectPrivilege.Recognized {
    val index = 5
    val name = "PrivilegeLoad"
    override def isPrivilegeLoad: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeRelease extends ObjectPrivilege(6) with ObjectPrivilege.Recognized {
    val index = 6
    val name = "PrivilegeRelease"
    override def isPrivilegeRelease: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCompaction extends ObjectPrivilege(7) with ObjectPrivilege.Recognized {
    val index = 7
    val name = "PrivilegeCompaction"
    override def isPrivilegeCompaction: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeInsert extends ObjectPrivilege(8) with ObjectPrivilege.Recognized {
    val index = 8
    val name = "PrivilegeInsert"
    override def isPrivilegeInsert: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDelete extends ObjectPrivilege(9) with ObjectPrivilege.Recognized {
    val index = 9
    val name = "PrivilegeDelete"
    override def isPrivilegeDelete: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGetStatistics extends ObjectPrivilege(10) with ObjectPrivilege.Recognized {
    val index = 10
    val name = "PrivilegeGetStatistics"
    override def isPrivilegeGetStatistics: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCreateIndex extends ObjectPrivilege(11) with ObjectPrivilege.Recognized {
    val index = 11
    val name = "PrivilegeCreateIndex"
    override def isPrivilegeCreateIndex: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeIndexDetail extends ObjectPrivilege(12) with ObjectPrivilege.Recognized {
    val index = 12
    val name = "PrivilegeIndexDetail"
    override def isPrivilegeIndexDetail: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDropIndex extends ObjectPrivilege(13) with ObjectPrivilege.Recognized {
    val index = 13
    val name = "PrivilegeDropIndex"
    override def isPrivilegeDropIndex: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeSearch extends ObjectPrivilege(14) with ObjectPrivilege.Recognized {
    val index = 14
    val name = "PrivilegeSearch"
    override def isPrivilegeSearch: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeFlush extends ObjectPrivilege(15) with ObjectPrivilege.Recognized {
    val index = 15
    val name = "PrivilegeFlush"
    override def isPrivilegeFlush: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeQuery extends ObjectPrivilege(16) with ObjectPrivilege.Recognized {
    val index = 16
    val name = "PrivilegeQuery"
    override def isPrivilegeQuery: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeLoadBalance extends ObjectPrivilege(17) with ObjectPrivilege.Recognized {
    val index = 17
    val name = "PrivilegeLoadBalance"
    override def isPrivilegeLoadBalance: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeImport extends ObjectPrivilege(18) with ObjectPrivilege.Recognized {
    val index = 18
    val name = "PrivilegeImport"
    override def isPrivilegeImport: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCreateOwnership extends ObjectPrivilege(19) with ObjectPrivilege.Recognized {
    val index = 19
    val name = "PrivilegeCreateOwnership"
    override def isPrivilegeCreateOwnership: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeUpdateUser extends ObjectPrivilege(20) with ObjectPrivilege.Recognized {
    val index = 20
    val name = "PrivilegeUpdateUser"
    override def isPrivilegeUpdateUser: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDropOwnership extends ObjectPrivilege(21) with ObjectPrivilege.Recognized {
    val index = 21
    val name = "PrivilegeDropOwnership"
    override def isPrivilegeDropOwnership: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeSelectOwnership extends ObjectPrivilege(22) with ObjectPrivilege.Recognized {
    val index = 22
    val name = "PrivilegeSelectOwnership"
    override def isPrivilegeSelectOwnership: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeManageOwnership extends ObjectPrivilege(23) with ObjectPrivilege.Recognized {
    val index = 23
    val name = "PrivilegeManageOwnership"
    override def isPrivilegeManageOwnership: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeSelectUser extends ObjectPrivilege(24) with ObjectPrivilege.Recognized {
    val index = 24
    val name = "PrivilegeSelectUser"
    override def isPrivilegeSelectUser: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeUpsert extends ObjectPrivilege(25) with ObjectPrivilege.Recognized {
    val index = 25
    val name = "PrivilegeUpsert"
    override def isPrivilegeUpsert: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCreateResourceGroup extends ObjectPrivilege(26) with ObjectPrivilege.Recognized {
    val index = 26
    val name = "PrivilegeCreateResourceGroup"
    override def isPrivilegeCreateResourceGroup: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDropResourceGroup extends ObjectPrivilege(27) with ObjectPrivilege.Recognized {
    val index = 27
    val name = "PrivilegeDropResourceGroup"
    override def isPrivilegeDropResourceGroup: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDescribeResourceGroup extends ObjectPrivilege(28) with ObjectPrivilege.Recognized {
    val index = 28
    val name = "PrivilegeDescribeResourceGroup"
    override def isPrivilegeDescribeResourceGroup: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeListResourceGroups extends ObjectPrivilege(29) with ObjectPrivilege.Recognized {
    val index = 29
    val name = "PrivilegeListResourceGroups"
    override def isPrivilegeListResourceGroups: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeTransferNode extends ObjectPrivilege(30) with ObjectPrivilege.Recognized {
    val index = 30
    val name = "PrivilegeTransferNode"
    override def isPrivilegeTransferNode: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeTransferReplica extends ObjectPrivilege(31) with ObjectPrivilege.Recognized {
    val index = 31
    val name = "PrivilegeTransferReplica"
    override def isPrivilegeTransferReplica: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGetLoadingProgress extends ObjectPrivilege(32) with ObjectPrivilege.Recognized {
    val index = 32
    val name = "PrivilegeGetLoadingProgress"
    override def isPrivilegeGetLoadingProgress: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGetLoadState extends ObjectPrivilege(33) with ObjectPrivilege.Recognized {
    val index = 33
    val name = "PrivilegeGetLoadState"
    override def isPrivilegeGetLoadState: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeRenameCollection extends ObjectPrivilege(34) with ObjectPrivilege.Recognized {
    val index = 34
    val name = "PrivilegeRenameCollection"
    override def isPrivilegeRenameCollection: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCreateDatabase extends ObjectPrivilege(35) with ObjectPrivilege.Recognized {
    val index = 35
    val name = "PrivilegeCreateDatabase"
    override def isPrivilegeCreateDatabase: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDropDatabase extends ObjectPrivilege(36) with ObjectPrivilege.Recognized {
    val index = 36
    val name = "PrivilegeDropDatabase"
    override def isPrivilegeDropDatabase: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeListDatabases extends ObjectPrivilege(37) with ObjectPrivilege.Recognized {
    val index = 37
    val name = "PrivilegeListDatabases"
    override def isPrivilegeListDatabases: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeFlushAll extends ObjectPrivilege(38) with ObjectPrivilege.Recognized {
    val index = 38
    val name = "PrivilegeFlushAll"
    override def isPrivilegeFlushAll: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCreatePartition extends ObjectPrivilege(39) with ObjectPrivilege.Recognized {
    val index = 39
    val name = "PrivilegeCreatePartition"
    override def isPrivilegeCreatePartition: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDropPartition extends ObjectPrivilege(40) with ObjectPrivilege.Recognized {
    val index = 40
    val name = "PrivilegeDropPartition"
    override def isPrivilegeDropPartition: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeShowPartitions extends ObjectPrivilege(41) with ObjectPrivilege.Recognized {
    val index = 41
    val name = "PrivilegeShowPartitions"
    override def isPrivilegeShowPartitions: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeHasPartition extends ObjectPrivilege(42) with ObjectPrivilege.Recognized {
    val index = 42
    val name = "PrivilegeHasPartition"
    override def isPrivilegeHasPartition: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGetFlushState extends ObjectPrivilege(43) with ObjectPrivilege.Recognized {
    val index = 43
    val name = "PrivilegeGetFlushState"
    override def isPrivilegeGetFlushState: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCreateAlias extends ObjectPrivilege(44) with ObjectPrivilege.Recognized {
    val index = 44
    val name = "PrivilegeCreateAlias"
    override def isPrivilegeCreateAlias: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDropAlias extends ObjectPrivilege(45) with ObjectPrivilege.Recognized {
    val index = 45
    val name = "PrivilegeDropAlias"
    override def isPrivilegeDropAlias: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDescribeAlias extends ObjectPrivilege(46) with ObjectPrivilege.Recognized {
    val index = 46
    val name = "PrivilegeDescribeAlias"
    override def isPrivilegeDescribeAlias: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeListAliases extends ObjectPrivilege(47) with ObjectPrivilege.Recognized {
    val index = 47
    val name = "PrivilegeListAliases"
    override def isPrivilegeListAliases: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeUpdateResourceGroups extends ObjectPrivilege(48) with ObjectPrivilege.Recognized {
    val index = 48
    val name = "PrivilegeUpdateResourceGroups"
    override def isPrivilegeUpdateResourceGroups: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeAlterDatabase extends ObjectPrivilege(49) with ObjectPrivilege.Recognized {
    val index = 49
    val name = "PrivilegeAlterDatabase"
    override def isPrivilegeAlterDatabase: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDescribeDatabase extends ObjectPrivilege(50) with ObjectPrivilege.Recognized {
    val index = 50
    val name = "PrivilegeDescribeDatabase"
    override def isPrivilegeDescribeDatabase: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeBackupRBAC extends ObjectPrivilege(51) with ObjectPrivilege.Recognized {
    val index = 51
    val name = "PrivilegeBackupRBAC"
    override def isPrivilegeBackupRbac: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeRestoreRBAC extends ObjectPrivilege(52) with ObjectPrivilege.Recognized {
    val index = 52
    val name = "PrivilegeRestoreRBAC"
    override def isPrivilegeRestoreRbac: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupReadOnly extends ObjectPrivilege(53) with ObjectPrivilege.Recognized {
    val index = 53
    val name = "PrivilegeGroupReadOnly"
    override def isPrivilegeGroupReadOnly: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupReadWrite extends ObjectPrivilege(54) with ObjectPrivilege.Recognized {
    val index = 54
    val name = "PrivilegeGroupReadWrite"
    override def isPrivilegeGroupReadWrite: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupAdmin extends ObjectPrivilege(55) with ObjectPrivilege.Recognized {
    val index = 55
    val name = "PrivilegeGroupAdmin"
    override def isPrivilegeGroupAdmin: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeCreatePrivilegeGroup extends ObjectPrivilege(56) with ObjectPrivilege.Recognized {
    val index = 56
    val name = "PrivilegeCreatePrivilegeGroup"
    override def isPrivilegeCreatePrivilegeGroup: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeDropPrivilegeGroup extends ObjectPrivilege(57) with ObjectPrivilege.Recognized {
    val index = 57
    val name = "PrivilegeDropPrivilegeGroup"
    override def isPrivilegeDropPrivilegeGroup: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeListPrivilegeGroups extends ObjectPrivilege(58) with ObjectPrivilege.Recognized {
    val index = 58
    val name = "PrivilegeListPrivilegeGroups"
    override def isPrivilegeListPrivilegeGroups: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeOperatePrivilegeGroup extends ObjectPrivilege(59) with ObjectPrivilege.Recognized {
    val index = 59
    val name = "PrivilegeOperatePrivilegeGroup"
    override def isPrivilegeOperatePrivilegeGroup: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupClusterReadOnly extends ObjectPrivilege(60) with ObjectPrivilege.Recognized {
    val index = 60
    val name = "PrivilegeGroupClusterReadOnly"
    override def isPrivilegeGroupClusterReadOnly: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupClusterReadWrite extends ObjectPrivilege(61) with ObjectPrivilege.Recognized {
    val index = 61
    val name = "PrivilegeGroupClusterReadWrite"
    override def isPrivilegeGroupClusterReadWrite: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupClusterAdmin extends ObjectPrivilege(62) with ObjectPrivilege.Recognized {
    val index = 62
    val name = "PrivilegeGroupClusterAdmin"
    override def isPrivilegeGroupClusterAdmin: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupDatabaseReadOnly extends ObjectPrivilege(63) with ObjectPrivilege.Recognized {
    val index = 63
    val name = "PrivilegeGroupDatabaseReadOnly"
    override def isPrivilegeGroupDatabaseReadOnly: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupDatabaseReadWrite extends ObjectPrivilege(64) with ObjectPrivilege.Recognized {
    val index = 64
    val name = "PrivilegeGroupDatabaseReadWrite"
    override def isPrivilegeGroupDatabaseReadWrite: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupDatabaseAdmin extends ObjectPrivilege(65) with ObjectPrivilege.Recognized {
    val index = 65
    val name = "PrivilegeGroupDatabaseAdmin"
    override def isPrivilegeGroupDatabaseAdmin: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupCollectionReadOnly extends ObjectPrivilege(66) with ObjectPrivilege.Recognized {
    val index = 66
    val name = "PrivilegeGroupCollectionReadOnly"
    override def isPrivilegeGroupCollectionReadOnly: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupCollectionReadWrite extends ObjectPrivilege(67) with ObjectPrivilege.Recognized {
    val index = 67
    val name = "PrivilegeGroupCollectionReadWrite"
    override def isPrivilegeGroupCollectionReadWrite: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGroupCollectionAdmin extends ObjectPrivilege(68) with ObjectPrivilege.Recognized {
    val index = 68
    val name = "PrivilegeGroupCollectionAdmin"
    override def isPrivilegeGroupCollectionAdmin: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeGetImportProgress extends ObjectPrivilege(69) with ObjectPrivilege.Recognized {
    val index = 69
    val name = "PrivilegeGetImportProgress"
    override def isPrivilegeGetImportProgress: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeListImport extends ObjectPrivilege(70) with ObjectPrivilege.Recognized {
    val index = 70
    val name = "PrivilegeListImport"
    override def isPrivilegeListImport: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeAddCollectionField extends ObjectPrivilege(71) with ObjectPrivilege.Recognized {
    val index = 71
    val name = "PrivilegeAddCollectionField"
    override def isPrivilegeAddCollectionField: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeAddFileResource extends ObjectPrivilege(72) with ObjectPrivilege.Recognized {
    val index = 72
    val name = "PrivilegeAddFileResource"
    override def isPrivilegeAddFileResource: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeRemoveFileResource extends ObjectPrivilege(73) with ObjectPrivilege.Recognized {
    val index = 73
    val name = "PrivilegeRemoveFileResource"
    override def isPrivilegeRemoveFileResource: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PrivilegeListFileResources extends ObjectPrivilege(74) with ObjectPrivilege.Recognized {
    val index = 74
    val name = "PrivilegeListFileResources"
    override def isPrivilegeListFileResources: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends ObjectPrivilege(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(PrivilegeAll, PrivilegeCreateCollection, PrivilegeDropCollection, PrivilegeDescribeCollection, PrivilegeShowCollections, PrivilegeLoad, PrivilegeRelease, PrivilegeCompaction, PrivilegeInsert, PrivilegeDelete, PrivilegeGetStatistics, PrivilegeCreateIndex, PrivilegeIndexDetail, PrivilegeDropIndex, PrivilegeSearch, PrivilegeFlush, PrivilegeQuery, PrivilegeLoadBalance, PrivilegeImport, PrivilegeCreateOwnership, PrivilegeUpdateUser, PrivilegeDropOwnership, PrivilegeSelectOwnership, PrivilegeManageOwnership, PrivilegeSelectUser, PrivilegeUpsert, PrivilegeCreateResourceGroup, PrivilegeDropResourceGroup, PrivilegeDescribeResourceGroup, PrivilegeListResourceGroups, PrivilegeTransferNode, PrivilegeTransferReplica, PrivilegeGetLoadingProgress, PrivilegeGetLoadState, PrivilegeRenameCollection, PrivilegeCreateDatabase, PrivilegeDropDatabase, PrivilegeListDatabases, PrivilegeFlushAll, PrivilegeCreatePartition, PrivilegeDropPartition, PrivilegeShowPartitions, PrivilegeHasPartition, PrivilegeGetFlushState, PrivilegeCreateAlias, PrivilegeDropAlias, PrivilegeDescribeAlias, PrivilegeListAliases, PrivilegeUpdateResourceGroups, PrivilegeAlterDatabase, PrivilegeDescribeDatabase, PrivilegeBackupRBAC, PrivilegeRestoreRBAC, PrivilegeGroupReadOnly, PrivilegeGroupReadWrite, PrivilegeGroupAdmin, PrivilegeCreatePrivilegeGroup, PrivilegeDropPrivilegeGroup, PrivilegeListPrivilegeGroups, PrivilegeOperatePrivilegeGroup, PrivilegeGroupClusterReadOnly, PrivilegeGroupClusterReadWrite, PrivilegeGroupClusterAdmin, PrivilegeGroupDatabaseReadOnly, PrivilegeGroupDatabaseReadWrite, PrivilegeGroupDatabaseAdmin, PrivilegeGroupCollectionReadOnly, PrivilegeGroupCollectionReadWrite, PrivilegeGroupCollectionAdmin, PrivilegeGetImportProgress, PrivilegeListImport, PrivilegeAddCollectionField, PrivilegeAddFileResource, PrivilegeRemoveFileResource, PrivilegeListFileResources)
  def fromValue(__value: _root_.scala.Int): ObjectPrivilege = __value match {
    case 0 => PrivilegeAll
    case 1 => PrivilegeCreateCollection
    case 2 => PrivilegeDropCollection
    case 3 => PrivilegeDescribeCollection
    case 4 => PrivilegeShowCollections
    case 5 => PrivilegeLoad
    case 6 => PrivilegeRelease
    case 7 => PrivilegeCompaction
    case 8 => PrivilegeInsert
    case 9 => PrivilegeDelete
    case 10 => PrivilegeGetStatistics
    case 11 => PrivilegeCreateIndex
    case 12 => PrivilegeIndexDetail
    case 13 => PrivilegeDropIndex
    case 14 => PrivilegeSearch
    case 15 => PrivilegeFlush
    case 16 => PrivilegeQuery
    case 17 => PrivilegeLoadBalance
    case 18 => PrivilegeImport
    case 19 => PrivilegeCreateOwnership
    case 20 => PrivilegeUpdateUser
    case 21 => PrivilegeDropOwnership
    case 22 => PrivilegeSelectOwnership
    case 23 => PrivilegeManageOwnership
    case 24 => PrivilegeSelectUser
    case 25 => PrivilegeUpsert
    case 26 => PrivilegeCreateResourceGroup
    case 27 => PrivilegeDropResourceGroup
    case 28 => PrivilegeDescribeResourceGroup
    case 29 => PrivilegeListResourceGroups
    case 30 => PrivilegeTransferNode
    case 31 => PrivilegeTransferReplica
    case 32 => PrivilegeGetLoadingProgress
    case 33 => PrivilegeGetLoadState
    case 34 => PrivilegeRenameCollection
    case 35 => PrivilegeCreateDatabase
    case 36 => PrivilegeDropDatabase
    case 37 => PrivilegeListDatabases
    case 38 => PrivilegeFlushAll
    case 39 => PrivilegeCreatePartition
    case 40 => PrivilegeDropPartition
    case 41 => PrivilegeShowPartitions
    case 42 => PrivilegeHasPartition
    case 43 => PrivilegeGetFlushState
    case 44 => PrivilegeCreateAlias
    case 45 => PrivilegeDropAlias
    case 46 => PrivilegeDescribeAlias
    case 47 => PrivilegeListAliases
    case 48 => PrivilegeUpdateResourceGroups
    case 49 => PrivilegeAlterDatabase
    case 50 => PrivilegeDescribeDatabase
    case 51 => PrivilegeBackupRBAC
    case 52 => PrivilegeRestoreRBAC
    case 53 => PrivilegeGroupReadOnly
    case 54 => PrivilegeGroupReadWrite
    case 55 => PrivilegeGroupAdmin
    case 56 => PrivilegeCreatePrivilegeGroup
    case 57 => PrivilegeDropPrivilegeGroup
    case 58 => PrivilegeListPrivilegeGroups
    case 59 => PrivilegeOperatePrivilegeGroup
    case 60 => PrivilegeGroupClusterReadOnly
    case 61 => PrivilegeGroupClusterReadWrite
    case 62 => PrivilegeGroupClusterAdmin
    case 63 => PrivilegeGroupDatabaseReadOnly
    case 64 => PrivilegeGroupDatabaseReadWrite
    case 65 => PrivilegeGroupDatabaseAdmin
    case 66 => PrivilegeGroupCollectionReadOnly
    case 67 => PrivilegeGroupCollectionReadWrite
    case 68 => PrivilegeGroupCollectionAdmin
    case 69 => PrivilegeGetImportProgress
    case 70 => PrivilegeListImport
    case 71 => PrivilegeAddCollectionField
    case 72 => PrivilegeAddFileResource
    case 73 => PrivilegeRemoveFileResource
    case 74 => PrivilegeListFileResources
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getEnumTypes().get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.enums(11)
}