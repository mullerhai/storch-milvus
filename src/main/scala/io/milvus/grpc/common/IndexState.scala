// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

sealed abstract class IndexState(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.common.IndexState
  type RecognizedType = io.milvus.grpc.common.IndexState.Recognized
  def isIndexStateNone: _root_.scala.Boolean = false
  def isUnissued: _root_.scala.Boolean = false
  def isInProgress: _root_.scala.Boolean = false
  def isFinished: _root_.scala.Boolean = false
  def isFailed: _root_.scala.Boolean = false
  def isRetry: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[IndexState] = io.milvus.grpc.common.IndexState
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.common.IndexState.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.common.IndexState.Recognized])
}

object IndexState extends _root_.scalapb.GeneratedEnumCompanion[IndexState] {
  sealed trait Recognized extends IndexState
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[IndexState] = this
  
  @SerialVersionUID(0L)
  case object IndexStateNone extends IndexState(0) with IndexState.Recognized {
    val index = 0
    val name = "IndexStateNone"
    override def isIndexStateNone: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Unissued extends IndexState(1) with IndexState.Recognized {
    val index = 1
    val name = "Unissued"
    override def isUnissued: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object InProgress extends IndexState(2) with IndexState.Recognized {
    val index = 2
    val name = "InProgress"
    override def isInProgress: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Finished extends IndexState(3) with IndexState.Recognized {
    val index = 3
    val name = "Finished"
    override def isFinished: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Failed extends IndexState(4) with IndexState.Recognized {
    val index = 4
    val name = "Failed"
    override def isFailed: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Retry extends IndexState(5) with IndexState.Recognized {
    val index = 5
    val name = "Retry"
    override def isRetry: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends IndexState(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(IndexStateNone, Unissued, InProgress, Finished, Failed, Retry)
  def fromValue(__value: _root_.scala.Int): IndexState = __value match {
    case 0 => IndexStateNone
    case 1 => Unissued
    case 2 => InProgress
    case 3 => Finished
    case 4 => Failed
    case 5 => Retry
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getEnumTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.enums(1)
}