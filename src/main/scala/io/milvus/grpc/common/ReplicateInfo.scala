// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

@SerialVersionUID(0L)
final case class ReplicateInfo(
    isReplicate: _root_.scala.Boolean = false,
    msgTimestamp: _root_.scala.Long = 0L,
    replicateID: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ReplicateInfo] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = isReplicate
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, __value)
        }
      };
      
      {
        val __value = msgTimestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, __value)
        }
      };
      
      {
        val __value = replicateID
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = isReplicate
        if (__v != false) {
          _output__.writeBool(1, __v)
        }
      };
      {
        val __v = msgTimestamp
        if (__v != 0L) {
          _output__.writeUInt64(2, __v)
        }
      };
      {
        val __v = replicateID
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withIsReplicate(__v: _root_.scala.Boolean): ReplicateInfo = copy(isReplicate = __v)
    def withMsgTimestamp(__v: _root_.scala.Long): ReplicateInfo = copy(msgTimestamp = __v)
    def withReplicateID(__v: _root_.scala.Predef.String): ReplicateInfo = copy(replicateID = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = isReplicate
          if (__t != false) __t else null
        }
        case 2 => {
          val __t = msgTimestamp
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = replicateID
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PBoolean(isReplicate)
        case 2 => _root_.scalapb.descriptors.PLong(msgTimestamp)
        case 3 => _root_.scalapb.descriptors.PString(replicateID)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.common.ReplicateInfo.type = io.milvus.grpc.common.ReplicateInfo
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.common.ReplicateInfo])
}

object ReplicateInfo extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.ReplicateInfo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.ReplicateInfo] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.common.ReplicateInfo = {
    var __isReplicate: _root_.scala.Boolean = false
    var __msgTimestamp: _root_.scala.Long = 0L
    var __replicateID: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __isReplicate = _input__.readBool()
        case 16 =>
          __msgTimestamp = _input__.readUInt64()
        case 26 =>
          __replicateID = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.common.ReplicateInfo(
        isReplicate = __isReplicate,
        msgTimestamp = __msgTimestamp,
        replicateID = __replicateID,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.common.ReplicateInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.common.ReplicateInfo(
        isReplicate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        msgTimestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        replicateID = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getMessageTypes().get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.milvus.grpc.common.ReplicateInfo(
    isReplicate = false,
    msgTimestamp = 0L,
    replicateID = ""
  )
  implicit class ReplicateInfoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.ReplicateInfo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.common.ReplicateInfo](_l) {
    def isReplicate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isReplicate)((c_, f_) => c_.copy(isReplicate = f_))
    def msgTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.msgTimestamp)((c_, f_) => c_.copy(msgTimestamp = f_))
    def replicateID: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.replicateID)((c_, f_) => c_.copy(replicateID = f_))
  }
  final val ISREPLICATE_FIELD_NUMBER = 1
  final val MSGTIMESTAMP_FIELD_NUMBER = 2
  final val REPLICATEID_FIELD_NUMBER = 3
  def of(
    isReplicate: _root_.scala.Boolean,
    msgTimestamp: _root_.scala.Long,
    replicateID: _root_.scala.Predef.String
  ): _root_.io.milvus.grpc.common.ReplicateInfo = _root_.io.milvus.grpc.common.ReplicateInfo(
    isReplicate,
    msgTimestamp,
    replicateID
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.common.ReplicateInfo])
}
