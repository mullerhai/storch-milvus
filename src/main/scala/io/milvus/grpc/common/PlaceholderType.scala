// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

sealed abstract class PlaceholderType(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.common.PlaceholderType
  type RecognizedType = io.milvus.grpc.common.PlaceholderType.Recognized
  def isNone: _root_.scala.Boolean = false
  def isBinaryVector: _root_.scala.Boolean = false
  def isFloatVector: _root_.scala.Boolean = false
  def isFloat16Vector: _root_.scala.Boolean = false
  def isBfloat16Vector: _root_.scala.Boolean = false
  def isSparseFloatVector: _root_.scala.Boolean = false
  def isInt8Vector: _root_.scala.Boolean = false
  def isInt64: _root_.scala.Boolean = false
  def isVarChar: _root_.scala.Boolean = false
  def isEmbListBinaryVector: _root_.scala.Boolean = false
  def isEmbListFloatVector: _root_.scala.Boolean = false
  def isEmbListFloat16Vector: _root_.scala.Boolean = false
  def isEmbListBfloat16Vector: _root_.scala.Boolean = false
  def isEmbListSparseFloatVector: _root_.scala.Boolean = false
  def isEmbListInt8Vector: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[PlaceholderType] = io.milvus.grpc.common.PlaceholderType
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.common.PlaceholderType.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.common.PlaceholderType.Recognized])
}

object PlaceholderType extends _root_.scalapb.GeneratedEnumCompanion[PlaceholderType] {
  sealed trait Recognized extends PlaceholderType
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[PlaceholderType] = this
  
  @SerialVersionUID(0L)
  case object None extends PlaceholderType(0) with PlaceholderType.Recognized {
    val index = 0
    val name = "None"
    override def isNone: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object BinaryVector extends PlaceholderType(100) with PlaceholderType.Recognized {
    val index = 1
    val name = "BinaryVector"
    override def isBinaryVector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object FloatVector extends PlaceholderType(101) with PlaceholderType.Recognized {
    val index = 2
    val name = "FloatVector"
    override def isFloatVector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Float16Vector extends PlaceholderType(102) with PlaceholderType.Recognized {
    val index = 3
    val name = "Float16Vector"
    override def isFloat16Vector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object BFloat16Vector extends PlaceholderType(103) with PlaceholderType.Recognized {
    val index = 4
    val name = "BFloat16Vector"
    override def isBfloat16Vector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SparseFloatVector extends PlaceholderType(104) with PlaceholderType.Recognized {
    val index = 5
    val name = "SparseFloatVector"
    override def isSparseFloatVector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Int8Vector extends PlaceholderType(105) with PlaceholderType.Recognized {
    val index = 6
    val name = "Int8Vector"
    override def isInt8Vector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Int64 extends PlaceholderType(5) with PlaceholderType.Recognized {
    val index = 7
    val name = "Int64"
    override def isInt64: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object VarChar extends PlaceholderType(21) with PlaceholderType.Recognized {
    val index = 8
    val name = "VarChar"
    override def isVarChar: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object EmbListBinaryVector extends PlaceholderType(300) with PlaceholderType.Recognized {
    val index = 9
    val name = "EmbListBinaryVector"
    override def isEmbListBinaryVector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object EmbListFloatVector extends PlaceholderType(301) with PlaceholderType.Recognized {
    val index = 10
    val name = "EmbListFloatVector"
    override def isEmbListFloatVector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object EmbListFloat16Vector extends PlaceholderType(302) with PlaceholderType.Recognized {
    val index = 11
    val name = "EmbListFloat16Vector"
    override def isEmbListFloat16Vector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object EmbListBFloat16Vector extends PlaceholderType(303) with PlaceholderType.Recognized {
    val index = 12
    val name = "EmbListBFloat16Vector"
    override def isEmbListBfloat16Vector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object EmbListSparseFloatVector extends PlaceholderType(304) with PlaceholderType.Recognized {
    val index = 13
    val name = "EmbListSparseFloatVector"
    override def isEmbListSparseFloatVector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object EmbListInt8Vector extends PlaceholderType(305) with PlaceholderType.Recognized {
    val index = 14
    val name = "EmbListInt8Vector"
    override def isEmbListInt8Vector: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends PlaceholderType(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(None, BinaryVector, FloatVector, Float16Vector, BFloat16Vector, SparseFloatVector, Int8Vector, Int64, VarChar, EmbListBinaryVector, EmbListFloatVector, EmbListFloat16Vector, EmbListBFloat16Vector, EmbListSparseFloatVector, EmbListInt8Vector)
  def fromValue(__value: _root_.scala.Int): PlaceholderType = __value match {
    case 0 => None
    case 5 => Int64
    case 21 => VarChar
    case 100 => BinaryVector
    case 101 => FloatVector
    case 102 => Float16Vector
    case 103 => BFloat16Vector
    case 104 => SparseFloatVector
    case 105 => Int8Vector
    case 300 => EmbListBinaryVector
    case 301 => EmbListFloatVector
    case 302 => EmbListFloat16Vector
    case 303 => EmbListBFloat16Vector
    case 304 => EmbListSparseFloatVector
    case 305 => EmbListInt8Vector
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getEnumTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.enums(4)
}