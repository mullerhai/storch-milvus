// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

sealed abstract class ConsistencyLevel(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.common.ConsistencyLevel
  type RecognizedType = io.milvus.grpc.common.ConsistencyLevel.Recognized
  def isStrong: _root_.scala.Boolean = false
  def isSession: _root_.scala.Boolean = false
  def isBounded: _root_.scala.Boolean = false
  def isEventually: _root_.scala.Boolean = false
  def isCustomized: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[ConsistencyLevel] = io.milvus.grpc.common.ConsistencyLevel
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.common.ConsistencyLevel.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.common.ConsistencyLevel.Recognized])
}

object ConsistencyLevel extends _root_.scalapb.GeneratedEnumCompanion[ConsistencyLevel] {
  sealed trait Recognized extends ConsistencyLevel
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ConsistencyLevel] = this
  
  @SerialVersionUID(0L)
  case object Strong extends ConsistencyLevel(0) with ConsistencyLevel.Recognized {
    val index = 0
    val name = "Strong"
    override def isStrong: _root_.scala.Boolean = true
  }
  
  /** default in PyMilvus
    */
  @SerialVersionUID(0L)
  case object Session extends ConsistencyLevel(1) with ConsistencyLevel.Recognized {
    val index = 1
    val name = "Session"
    override def isSession: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Bounded extends ConsistencyLevel(2) with ConsistencyLevel.Recognized {
    val index = 2
    val name = "Bounded"
    override def isBounded: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Eventually extends ConsistencyLevel(3) with ConsistencyLevel.Recognized {
    val index = 3
    val name = "Eventually"
    override def isEventually: _root_.scala.Boolean = true
  }
  
  /** Users pass their own `guarantee_timestamp`.
    */
  @SerialVersionUID(0L)
  case object Customized extends ConsistencyLevel(4) with ConsistencyLevel.Recognized {
    val index = 4
    val name = "Customized"
    override def isCustomized: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends ConsistencyLevel(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(Strong, Session, Bounded, Eventually, Customized)
  def fromValue(__value: _root_.scala.Int): ConsistencyLevel = __value match {
    case 0 => Strong
    case 1 => Session
    case 2 => Bounded
    case 3 => Eventually
    case 4 => Customized
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getEnumTypes().get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.enums(8)
}