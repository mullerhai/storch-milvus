// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

sealed abstract class DslType(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.common.DslType
  type RecognizedType = io.milvus.grpc.common.DslType.Recognized
  def isDsl: _root_.scala.Boolean = false
  def isBoolExprV1: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[DslType] = io.milvus.grpc.common.DslType
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.common.DslType.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.common.DslType.Recognized])
}

object DslType extends _root_.scalapb.GeneratedEnumCompanion[DslType] {
  sealed trait Recognized extends DslType
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[DslType] = this
  
  @SerialVersionUID(0L)
  case object Dsl extends DslType(0) with DslType.Recognized {
    val index = 0
    val name = "Dsl"
    override def isDsl: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object BoolExprV1 extends DslType(1) with DslType.Recognized {
    val index = 1
    val name = "BoolExprV1"
    override def isBoolExprV1: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends DslType(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(Dsl, BoolExprV1)
  def fromValue(__value: _root_.scala.Int): DslType = __value match {
    case 0 => Dsl
    case 1 => BoolExprV1
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getEnumTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.enums(6)
}