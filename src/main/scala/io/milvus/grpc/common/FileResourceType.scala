// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

sealed abstract class FileResourceType(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.common.FileResourceType
  type RecognizedType = io.milvus.grpc.common.FileResourceType.Recognized
  def isAnalyzerDictionary: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[FileResourceType] = io.milvus.grpc.common.FileResourceType
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.common.FileResourceType.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.common.FileResourceType.Recognized])
}

object FileResourceType extends _root_.scalapb.GeneratedEnumCompanion[FileResourceType] {
  sealed trait Recognized extends FileResourceType
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[FileResourceType] = this
  
  @SerialVersionUID(0L)
  case object ANALYZER_DICTIONARY extends FileResourceType(0) with FileResourceType.Recognized {
    val index = 0
    val name = "ANALYZER_DICTIONARY"
    override def isAnalyzerDictionary: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends FileResourceType(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(ANALYZER_DICTIONARY)
  def fromValue(__value: _root_.scala.Int): FileResourceType = __value match {
    case 0 => ANALYZER_DICTIONARY
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getEnumTypes().get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.enums(15)
}