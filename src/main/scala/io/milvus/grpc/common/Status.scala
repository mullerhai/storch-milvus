// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

@SerialVersionUID(0L)
final case class Status(
    @scala.deprecated(message="Marked as deprecated in proto file", "") errorCode: io.milvus.grpc.common.ErrorCode = io.milvus.grpc.common.ErrorCode.Success,
    reason: _root_.scala.Predef.String = "",
    code: _root_.scala.Int = 0,
    retriable: _root_.scala.Boolean = false,
    detail: _root_.scala.Predef.String = "",
    extraInfo: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String] = _root_.scala.collection.immutable.Map.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Status] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = errorCode.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      
      {
        val __value = reason
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = code
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
        }
      };
      
      {
        val __value = retriable
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = detail
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      extraInfo.foreach { __item =>
        val __value = io.milvus.grpc.common.Status._typemapper_extraInfo.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = errorCode.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      {
        val __v = reason
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = code
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
      {
        val __v = retriable
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = detail
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      extraInfo.foreach { __v =>
        val __m = io.milvus.grpc.common.Status._typemapper_extraInfo.toBase(__v)
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withErrorCode(__v: io.milvus.grpc.common.ErrorCode): Status = copy(errorCode = __v)
    def withReason(__v: _root_.scala.Predef.String): Status = copy(reason = __v)
    def withCode(__v: _root_.scala.Int): Status = copy(code = __v)
    def withRetriable(__v: _root_.scala.Boolean): Status = copy(retriable = __v)
    def withDetail(__v: _root_.scala.Predef.String): Status = copy(detail = __v)
    def clearExtraInfo = copy(extraInfo = _root_.scala.collection.immutable.Map.empty)
    def addExtraInfo(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String) *): Status = addAllExtraInfo(__vs)
    def addAllExtraInfo(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): Status = copy(extraInfo = extraInfo ++ __vs)
    def withExtraInfo(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): Status = copy(extraInfo = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = errorCode.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = reason
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = code
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = retriable
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = detail
          if (__t != "") __t else null
        }
        case 6 => extraInfo.iterator.map(io.milvus.grpc.common.Status._typemapper_extraInfo.toBase(_)).toSeq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(errorCode.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PString(reason)
        case 3 => _root_.scalapb.descriptors.PInt(code)
        case 4 => _root_.scalapb.descriptors.PBoolean(retriable)
        case 5 => _root_.scalapb.descriptors.PString(detail)
        case 6 => _root_.scalapb.descriptors.PRepeated(extraInfo.iterator.map(io.milvus.grpc.common.Status._typemapper_extraInfo.toBase(_).toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.common.Status.type = io.milvus.grpc.common.Status
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.common.Status])
}

object Status extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.Status] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.Status] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.common.Status = {
    var __errorCode: io.milvus.grpc.common.ErrorCode = io.milvus.grpc.common.ErrorCode.Success
    var __reason: _root_.scala.Predef.String = ""
    var __code: _root_.scala.Int = 0
    var __retriable: _root_.scala.Boolean = false
    var __detail: _root_.scala.Predef.String = ""
    val __extraInfo: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __errorCode = io.milvus.grpc.common.ErrorCode.fromValue(_input__.readEnum())
        case 18 =>
          __reason = _input__.readStringRequireUtf8()
        case 24 =>
          __code = _input__.readInt32()
        case 32 =>
          __retriable = _input__.readBool()
        case 42 =>
          __detail = _input__.readStringRequireUtf8()
        case 50 =>
          __extraInfo += io.milvus.grpc.common.Status._typemapper_extraInfo.toCustom(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.Status.ExtraInfoEntry](_input__))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.common.Status(
        errorCode = __errorCode,
        reason = __reason,
        code = __code,
        retriable = __retriable,
        detail = __detail,
        extraInfo = __extraInfo.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.common.Status] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.common.Status(
        errorCode = io.milvus.grpc.common.ErrorCode.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.ErrorCode.Success.scalaValueDescriptor).number),
        reason = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        code = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        retriable = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        detail = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        extraInfo = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.common.Status.ExtraInfoEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(io.milvus.grpc.common.Status._typemapper_extraInfo.toCustom(_)).toMap
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = io.milvus.grpc.common.Status.ExtraInfoEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      _root_.io.milvus.grpc.common.Status.ExtraInfoEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => io.milvus.grpc.common.ErrorCode
    }
  }
  lazy val defaultInstance = io.milvus.grpc.common.Status(
    errorCode = io.milvus.grpc.common.ErrorCode.Success,
    reason = "",
    code = 0,
    retriable = false,
    detail = "",
    extraInfo = _root_.scala.collection.immutable.Map.empty
  )
  @SerialVersionUID(0L)
  final case class ExtraInfoEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ExtraInfoEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = value
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = value
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): ExtraInfoEntry = copy(key = __v)
      def withValue(__v: _root_.scala.Predef.String): ExtraInfoEntry = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = value
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => _root_.scalapb.descriptors.PString(value)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: io.milvus.grpc.common.Status.ExtraInfoEntry.type = io.milvus.grpc.common.Status.ExtraInfoEntry
      // @@protoc_insertion_point(GeneratedMessage[milvus.proto.common.Status.ExtraInfoEntry])
  }
  
  object ExtraInfoEntry extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.Status.ExtraInfoEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.Status.ExtraInfoEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.common.Status.ExtraInfoEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      io.milvus.grpc.common.Status.ExtraInfoEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.common.Status.ExtraInfoEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        io.milvus.grpc.common.Status.ExtraInfoEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.common.Status.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.common.Status.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = io.milvus.grpc.common.Status.ExtraInfoEntry(
      key = "",
      value = ""
    )
    implicit class ExtraInfoEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.Status.ExtraInfoEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.common.Status.ExtraInfoEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[io.milvus.grpc.common.Status.ExtraInfoEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
      _root_.scalapb.TypeMapper[io.milvus.grpc.common.Status.ExtraInfoEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => io.milvus.grpc.common.Status.ExtraInfoEntry(__p._1, __p._2))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Predef.String
    ): _root_.io.milvus.grpc.common.Status.ExtraInfoEntry = _root_.io.milvus.grpc.common.Status.ExtraInfoEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.common.Status.ExtraInfoEntry])
  }
  
  implicit class StatusLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.Status]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.common.Status](_l) {
    def errorCode: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.ErrorCode] = field(_.errorCode)((c_, f_) => c_.copy(errorCode = f_))
    def reason: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.reason)((c_, f_) => c_.copy(reason = f_))
    def code: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.code)((c_, f_) => c_.copy(code = f_))
    def retriable: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.retriable)((c_, f_) => c_.copy(retriable = f_))
    def detail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.detail)((c_, f_) => c_.copy(detail = f_))
    def extraInfo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.extraInfo)((c_, f_) => c_.copy(extraInfo = f_))
  }
  final val ERROR_CODE_FIELD_NUMBER = 1
  final val REASON_FIELD_NUMBER = 2
  final val CODE_FIELD_NUMBER = 3
  final val RETRIABLE_FIELD_NUMBER = 4
  final val DETAIL_FIELD_NUMBER = 5
  final val EXTRA_INFO_FIELD_NUMBER = 6
  @transient
  private[common] val _typemapper_extraInfo: _root_.scalapb.TypeMapper[io.milvus.grpc.common.Status.ExtraInfoEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[io.milvus.grpc.common.Status.ExtraInfoEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
  def of(
    errorCode: io.milvus.grpc.common.ErrorCode,
    reason: _root_.scala.Predef.String,
    code: _root_.scala.Int,
    retriable: _root_.scala.Boolean,
    detail: _root_.scala.Predef.String,
    extraInfo: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]
  ): _root_.io.milvus.grpc.common.Status = _root_.io.milvus.grpc.common.Status(
    errorCode,
    reason,
    code,
    retriable,
    detail,
    extraInfo
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.common.Status])
}
