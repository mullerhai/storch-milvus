// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

sealed abstract class ImportState(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.common.ImportState
  type RecognizedType = io.milvus.grpc.common.ImportState.Recognized
  def isImportPending: _root_.scala.Boolean = false
  def isImportFailed: _root_.scala.Boolean = false
  def isImportStarted: _root_.scala.Boolean = false
  def isImportPersisted: _root_.scala.Boolean = false
  def isImportFlushed: _root_.scala.Boolean = false
  def isImportCompleted: _root_.scala.Boolean = false
  def isImportFailedAndCleaned: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[ImportState] = io.milvus.grpc.common.ImportState
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.common.ImportState.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.common.ImportState.Recognized])
}

object ImportState extends _root_.scalapb.GeneratedEnumCompanion[ImportState] {
  sealed trait Recognized extends ImportState
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ImportState] = this
  
  /** the task in in pending list of rootCoord, waiting to be executed
    */
  @SerialVersionUID(0L)
  case object ImportPending extends ImportState(0) with ImportState.Recognized {
    val index = 0
    val name = "ImportPending"
    override def isImportPending: _root_.scala.Boolean = true
  }
  
  /** the task failed for some reason, get detail reason from GetImportStateResponse.infos
    */
  @SerialVersionUID(0L)
  case object ImportFailed extends ImportState(1) with ImportState.Recognized {
    val index = 1
    val name = "ImportFailed"
    override def isImportFailed: _root_.scala.Boolean = true
  }
  
  /** the task has been sent to datanode to execute
    */
  @SerialVersionUID(0L)
  case object ImportStarted extends ImportState(2) with ImportState.Recognized {
    val index = 2
    val name = "ImportStarted"
    override def isImportStarted: _root_.scala.Boolean = true
  }
  
  /** all data files have been parsed and all meta data already persisted, ready to be flushed.
    */
  @SerialVersionUID(0L)
  case object ImportPersisted extends ImportState(5) with ImportState.Recognized {
    val index = 3
    val name = "ImportPersisted"
    override def isImportPersisted: _root_.scala.Boolean = true
  }
  
  /** all segments are successfully flushed.
    */
  @SerialVersionUID(0L)
  case object ImportFlushed extends ImportState(8) with ImportState.Recognized {
    val index = 4
    val name = "ImportFlushed"
    override def isImportFlushed: _root_.scala.Boolean = true
  }
  
  /** all indexes are successfully built and segments are able to be compacted as normal.
    */
  @SerialVersionUID(0L)
  case object ImportCompleted extends ImportState(6) with ImportState.Recognized {
    val index = 5
    val name = "ImportCompleted"
    override def isImportCompleted: _root_.scala.Boolean = true
  }
  
  /** the task failed and all segments it generated are cleaned up.
    */
  @SerialVersionUID(0L)
  case object ImportFailedAndCleaned extends ImportState(7) with ImportState.Recognized {
    val index = 6
    val name = "ImportFailedAndCleaned"
    override def isImportFailedAndCleaned: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends ImportState(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(ImportPending, ImportFailed, ImportStarted, ImportPersisted, ImportFlushed, ImportCompleted, ImportFailedAndCleaned)
  def fromValue(__value: _root_.scala.Int): ImportState = __value match {
    case 0 => ImportPending
    case 1 => ImportFailed
    case 2 => ImportStarted
    case 5 => ImportPersisted
    case 6 => ImportCompleted
    case 7 => ImportFailedAndCleaned
    case 8 => ImportFlushed
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getEnumTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.enums(9)
}