// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

object CommonProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.descriptor.DescriptorProtoCompanion
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      io.milvus.grpc.common.Status,
      io.milvus.grpc.common.KeyValuePair,
      io.milvus.grpc.common.KeyDataPair,
      io.milvus.grpc.common.Blob,
      io.milvus.grpc.common.PlaceholderValue,
      io.milvus.grpc.common.PlaceholderGroup,
      io.milvus.grpc.common.Address,
      io.milvus.grpc.common.MsgBase,
      io.milvus.grpc.common.ReplicateInfo,
      io.milvus.grpc.common.MsgHeader,
      io.milvus.grpc.common.DMLMsgHeader,
      io.milvus.grpc.common.PrivilegeExt,
      io.milvus.grpc.common.SegmentStats,
      io.milvus.grpc.common.ClientInfo,
      io.milvus.grpc.common.ServerInfo,
      io.milvus.grpc.common.NodeInfo
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChNtaWx2dXMvY29tbW9uLnByb3RvEhNtaWx2dXMucHJvdG8uY29tbW9uGiBnb29nbGUvcHJvdG9idWYvZGVzY3JpcHRvci5wc
  m90byKfAwoGU3RhdHVzEk8KCmVycm9yX2NvZGUYASABKA4yHi5taWx2dXMucHJvdG8uY29tbW9uLkVycm9yQ29kZUIQGAHiPwsSC
  WVycm9yQ29kZVIJZXJyb3JDb2RlEiMKBnJlYXNvbhgCIAEoCUIL4j8IEgZyZWFzb25SBnJlYXNvbhIdCgRjb2RlGAMgASgFQgniP
  wYSBGNvZGVSBGNvZGUSLAoJcmV0cmlhYmxlGAQgASgIQg7iPwsSCXJldHJpYWJsZVIJcmV0cmlhYmxlEiMKBmRldGFpbBgFIAEoC
  UIL4j8IEgZkZXRhaWxSBmRldGFpbBJZCgpleHRyYV9pbmZvGAYgAygLMioubWlsdnVzLnByb3RvLmNvbW1vbi5TdGF0dXMuRXh0c
  mFJbmZvRW50cnlCDuI/CxIJZXh0cmFJbmZvUglleHRyYUluZm8aUgoORXh0cmFJbmZvRW50cnkSGgoDa2V5GAEgASgJQgjiPwUSA
  2tleVIDa2V5EiAKBXZhbHVlGAIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEiTAoMS2V5VmFsdWVQYWlyEhoKA2tleRgBIAEoC
  UII4j8FEgNrZXlSA2tleRIgCgV2YWx1ZRgCIAEoCUIK4j8HEgV2YWx1ZVIFdmFsdWUiSAoLS2V5RGF0YVBhaXISGgoDa2V5GAEgA
  SgJQgjiPwUSA2tleVIDa2V5Eh0KBGRhdGEYAiABKAxCCeI/BhIEZGF0YVIEZGF0YSIoCgRCbG9iEiAKBXZhbHVlGAEgASgMQgriP
  wcSBXZhbHVlUgV2YWx1ZSKYAQoQUGxhY2Vob2xkZXJWYWx1ZRIaCgN0YWcYASABKAlCCOI/BRIDdGFnUgN0YWcSQwoEdHlwZRgCI
  AEoDjIkLm1pbHZ1cy5wcm90by5jb21tb24uUGxhY2Vob2xkZXJUeXBlQgniPwYSBHR5cGVSBHR5cGUSIwoGdmFsdWVzGAMgAygMQ
  gviPwgSBnZhbHVlc1IGdmFsdWVzInAKEFBsYWNlaG9sZGVyR3JvdXASXAoMcGxhY2Vob2xkZXJzGAEgAygLMiUubWlsdnVzLnByb
  3RvLmNvbW1vbi5QbGFjZWhvbGRlclZhbHVlQhHiPw4SDHBsYWNlaG9sZGVyc1IMcGxhY2Vob2xkZXJzIkEKB0FkZHJlc3MSFwoCa
  XAYASABKAlCB+I/BBICaXBSAmlwEh0KBHBvcnQYAiABKANCCeI/BhIEcG9ydFIEcG9ydCKIBAoHTXNnQmFzZRJFCghtc2dfdHlwZ
  RgBIAEoDjIcLm1pbHZ1cy5wcm90by5jb21tb24uTXNnVHlwZUIM4j8JEgdtc2dUeXBlUgdtc2dUeXBlEiAKBW1zZ0lEGAIgASgDQ
  griPwcSBW1zZ0lEUgVtc2dJRBIsCgl0aW1lc3RhbXAYAyABKARCDuI/CxIJdGltZXN0YW1wUgl0aW1lc3RhbXASKQoIc291cmNlS
  UQYBCABKANCDeI/ChIIc291cmNlSURSCHNvdXJjZUlEEikKCHRhcmdldElEGAUgASgDQg3iPwoSCHRhcmdldElEUgh0YXJnZXRJR
  BJdCgpwcm9wZXJ0aWVzGAYgAygLMiwubWlsdnVzLnByb3RvLmNvbW1vbi5Nc2dCYXNlLlByb3BlcnRpZXNFbnRyeUIP4j8MEgpwc
  m9wZXJ0aWVzUgpwcm9wZXJ0aWVzElwKDXJlcGxpY2F0ZUluZm8YByABKAsyIi5taWx2dXMucHJvdG8uY29tbW9uLlJlcGxpY2F0Z
  UluZm9CEuI/DxINcmVwbGljYXRlSW5mb1INcmVwbGljYXRlSW5mbxpTCg9Qcm9wZXJ0aWVzRW50cnkSGgoDa2V5GAEgASgJQgjiP
  wUSA2tleVIDa2V5EiAKBXZhbHVlGAIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEirgEKDVJlcGxpY2F0ZUluZm8SMgoLaXNSZ
  XBsaWNhdGUYASABKAhCEOI/DRILaXNSZXBsaWNhdGVSC2lzUmVwbGljYXRlEjUKDG1zZ1RpbWVzdGFtcBgCIAEoBEIR4j8OEgxtc
  2dUaW1lc3RhbXBSDG1zZ1RpbWVzdGFtcBIyCgtyZXBsaWNhdGVJRBgDIAEoCUIQ4j8NEgtyZXBsaWNhdGVJRFILcmVwbGljYXRlS
  UQiSAoJTXNnSGVhZGVyEjsKBGJhc2UYASABKAsyHC5taWx2dXMucHJvdG8uY29tbW9uLk1zZ0Jhc2VCCeI/BhIEYmFzZVIEYmFzZ
  SJ5CgxETUxNc2dIZWFkZXISOwoEYmFzZRgBIAEoCzIcLm1pbHZ1cy5wcm90by5jb21tb24uTXNnQmFzZUIJ4j8GEgRiYXNlUgRiY
  XNlEiwKCXNoYXJkTmFtZRgCIAEoCUIO4j8LEglzaGFyZE5hbWVSCXNoYXJkTmFtZSLPAgoMUHJpdmlsZWdlRXh0ElEKC29iamVjd
  F90eXBlGAEgASgOMh8ubWlsdnVzLnByb3RvLmNvbW1vbi5PYmplY3RUeXBlQg/iPwwSCm9iamVjdFR5cGVSCm9iamVjdFR5cGUSZ
  QoQb2JqZWN0X3ByaXZpbGVnZRgCIAEoDjIkLm1pbHZ1cy5wcm90by5jb21tb24uT2JqZWN0UHJpdmlsZWdlQhTiPxESD29iamVjd
  FByaXZpbGVnZVIPb2JqZWN0UHJpdmlsZWdlEkAKEW9iamVjdF9uYW1lX2luZGV4GAMgASgFQhTiPxESD29iamVjdE5hbWVJbmRle
  FIPb2JqZWN0TmFtZUluZGV4EkMKEm9iamVjdF9uYW1lX2luZGV4cxgEIAEoBUIV4j8SEhBvYmplY3ROYW1lSW5kZXhzUhBvYmplY
  3ROYW1lSW5kZXhzImQKDFNlZ21lbnRTdGF0cxIsCglTZWdtZW50SUQYASABKANCDuI/CxIJc2VnbWVudElEUglTZWdtZW50SUQSJ
  goHTnVtUm93cxgCIAEoA0IM4j8JEgdudW1Sb3dzUgdOdW1Sb3dzIoEDCgpDbGllbnRJbmZvEicKCHNka190eXBlGAEgASgJQgziP
  wkSB3Nka1R5cGVSB3Nka1R5cGUSMAoLc2RrX3ZlcnNpb24YAiABKAlCD+I/DBIKc2RrVmVyc2lvblIKc2RrVmVyc2lvbhItCgpsb
  2NhbF90aW1lGAMgASgJQg7iPwsSCWxvY2FsVGltZVIJbG9jYWxUaW1lEh0KBHVzZXIYBCABKAlCCeI/BhIEdXNlclIEdXNlchIdC
  gRob3N0GAUgASgJQgniPwYSBGhvc3RSBGhvc3QSWAoIcmVzZXJ2ZWQYBiADKAsyLS5taWx2dXMucHJvdG8uY29tbW9uLkNsaWVud
  EluZm8uUmVzZXJ2ZWRFbnRyeUIN4j8KEghyZXNlcnZlZFIIcmVzZXJ2ZWQaUQoNUmVzZXJ2ZWRFbnRyeRIaCgNrZXkYASABKAlCC
  OI/BRIDa2V5UgNrZXkSIAoFdmFsdWUYAiABKAlCCuI/BxIFdmFsdWVSBXZhbHVlOgI4ASKnAwoKU2VydmVySW5mbxItCgpidWlsZ
  F90YWdzGAEgASgJQg7iPwsSCWJ1aWxkVGFnc1IJYnVpbGRUYWdzEi0KCmJ1aWxkX3RpbWUYAiABKAlCDuI/CxIJYnVpbGRUaW1lU
  glidWlsZFRpbWUSLQoKZ2l0X2NvbW1pdBgDIAEoCUIO4j8LEglnaXRDb21taXRSCWdpdENvbW1pdBItCgpnb192ZXJzaW9uGAQgA
  SgJQg7iPwsSCWdvVmVyc2lvblIJZ29WZXJzaW9uEjAKC2RlcGxveV9tb2RlGAUgASgJQg/iPwwSCmRlcGxveU1vZGVSCmRlcGxve
  U1vZGUSWAoIcmVzZXJ2ZWQYBiADKAsyLS5taWx2dXMucHJvdG8uY29tbW9uLlNlcnZlckluZm8uUmVzZXJ2ZWRFbnRyeUIN4j8KE
  ghyZXNlcnZlZFIIcmVzZXJ2ZWQaUQoNUmVzZXJ2ZWRFbnRyeRIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkSIAoFdmFsdWUYA
  iABKAlCCuI/BxIFdmFsdWVSBXZhbHVlOgI4ASKDAQoITm9kZUluZm8SJAoHbm9kZV9pZBgBIAEoA0IL4j8IEgZub2RlSWRSBm5vZ
  GVJZBImCgdhZGRyZXNzGAIgASgJQgziPwkSB2FkZHJlc3NSB2FkZHJlc3MSKQoIaG9zdG5hbWUYAyABKAlCDeI/ChIIaG9zdG5hb
  WVSCGhvc3RuYW1lKuoXCglFcnJvckNvZGUSGQoHU3VjY2VzcxAAGgziPwkSB1N1Y2Nlc3MSKQoPVW5leHBlY3RlZEVycm9yEAEaF
  OI/ERIPVW5leHBlY3RlZEVycm9yEiUKDUNvbm5lY3RGYWlsZWQQAhoS4j8PEg1Db25uZWN0RmFpbGVkEisKEFBlcm1pc3Npb25EZ
  W5pZWQQAxoV4j8SEhBQZXJtaXNzaW9uRGVuaWVkEjEKE0NvbGxlY3Rpb25Ob3RFeGlzdHMQBBoY4j8VEhNDb2xsZWN0aW9uTm90R
  Xhpc3RzEikKD0lsbGVnYWxBcmd1bWVudBAFGhTiPxESD0lsbGVnYWxBcmd1bWVudBIrChBJbGxlZ2FsRGltZW5zaW9uEAcaFeI/E
  hIQSWxsZWdhbERpbWVuc2lvbhIrChBJbGxlZ2FsSW5kZXhUeXBlEAgaFeI/EhIQSWxsZWdhbEluZGV4VHlwZRI1ChVJbGxlZ2FsQ
  29sbGVjdGlvbk5hbWUQCRoa4j8XEhVJbGxlZ2FsQ29sbGVjdGlvbk5hbWUSIQoLSWxsZWdhbFRPUEsQChoQ4j8NEgtJbGxlZ2FsV
  E9QSxIrChBJbGxlZ2FsUm93UmVjb3JkEAsaFeI/EhIQSWxsZWdhbFJvd1JlY29yZBIpCg9JbGxlZ2FsVmVjdG9ySUQQDBoU4j8RE
  g9JbGxlZ2FsVmVjdG9ySUQSMQoTSWxsZWdhbFNlYXJjaFJlc3VsdBANGhjiPxUSE0lsbGVnYWxTZWFyY2hSZXN1bHQSIwoMRmlsZ
  U5vdEZvdW5kEA4aEeI/DhIMRmlsZU5vdEZvdW5kEh8KCk1ldGFGYWlsZWQQDxoP4j8MEgpNZXRhRmFpbGVkEiEKC0NhY2hlRmFpb
  GVkEBAaEOI/DRILQ2FjaGVGYWlsZWQSLwoSQ2Fubm90Q3JlYXRlRm9sZGVyEBEaF+I/FBISQ2Fubm90Q3JlYXRlRm9sZGVyEisKE
  ENhbm5vdENyZWF0ZUZpbGUQEhoV4j8SEhBDYW5ub3RDcmVhdGVGaWxlEi8KEkNhbm5vdERlbGV0ZUZvbGRlchATGhfiPxQSEkNhb
  m5vdERlbGV0ZUZvbGRlchIrChBDYW5ub3REZWxldGVGaWxlEBQaFeI/EhIQQ2Fubm90RGVsZXRlRmlsZRIpCg9CdWlsZEluZGV4R
  XJyb3IQFRoU4j8REg9CdWlsZEluZGV4RXJyb3ISIwoMSWxsZWdhbE5MSVNUEBYaEeI/DhIMSWxsZWdhbE5MSVNUEi0KEUlsbGVnY
  WxNZXRyaWNUeXBlEBcaFuI/ExIRSWxsZWdhbE1ldHJpY1R5cGUSIQoLT3V0T2ZNZW1vcnkQGBoQ4j8NEgtPdXRPZk1lbW9yeRIlC
  g1JbmRleE5vdEV4aXN0EBkaEuI/DxINSW5kZXhOb3RFeGlzdBIpCg9FbXB0eUNvbGxlY3Rpb24QGhoU4j8REg9FbXB0eUNvbGxlY
  3Rpb24SOQoXVXBkYXRlSW1wb3J0VGFza0ZhaWx1cmUQGxoc4j8ZEhdVcGRhdGVJbXBvcnRUYXNrRmFpbHVyZRI3ChZDb2xsZWN0a
  W9uTmFtZU5vdEZvdW5kEBwaG+I/GBIWQ29sbGVjdGlvbk5hbWVOb3RGb3VuZBI5ChdDcmVhdGVDcmVkZW50aWFsRmFpbHVyZRAdG
  hziPxkSF0NyZWF0ZUNyZWRlbnRpYWxGYWlsdXJlEjkKF1VwZGF0ZUNyZWRlbnRpYWxGYWlsdXJlEB4aHOI/GRIXVXBkYXRlQ3JlZ
  GVudGlhbEZhaWx1cmUSOQoXRGVsZXRlQ3JlZGVudGlhbEZhaWx1cmUQHxoc4j8ZEhdEZWxldGVDcmVkZW50aWFsRmFpbHVyZRIzC
  hRHZXRDcmVkZW50aWFsRmFpbHVyZRAgGhniPxYSFEdldENyZWRlbnRpYWxGYWlsdXJlEjMKFExpc3RDcmVkVXNlcnNGYWlsdXJlE
  CEaGeI/FhIUTGlzdENyZWRVc2Vyc0ZhaWx1cmUSJwoOR2V0VXNlckZhaWx1cmUQIhoT4j8QEg5HZXRVc2VyRmFpbHVyZRItChFDc
  mVhdGVSb2xlRmFpbHVyZRAjGhbiPxMSEUNyZWF0ZVJvbGVGYWlsdXJlEikKD0Ryb3BSb2xlRmFpbHVyZRAkGhTiPxESD0Ryb3BSb
  2xlRmFpbHVyZRI3ChZPcGVyYXRlVXNlclJvbGVGYWlsdXJlECUaG+I/GBIWT3BlcmF0ZVVzZXJSb2xlRmFpbHVyZRItChFTZWxlY
  3RSb2xlRmFpbHVyZRAmGhbiPxMSEVNlbGVjdFJvbGVGYWlsdXJlEi0KEVNlbGVjdFVzZXJGYWlsdXJlECcaFuI/ExIRU2VsZWN0V
  XNlckZhaWx1cmUSNQoVU2VsZWN0UmVzb3VyY2VGYWlsdXJlECgaGuI/FxIVU2VsZWN0UmVzb3VyY2VGYWlsdXJlEjkKF09wZXJhd
  GVQcml2aWxlZ2VGYWlsdXJlECkaHOI/GRIXT3BlcmF0ZVByaXZpbGVnZUZhaWx1cmUSLwoSU2VsZWN0R3JhbnRGYWlsdXJlECoaF
  +I/FBISU2VsZWN0R3JhbnRGYWlsdXJlEkUKHVJlZnJlc2hQb2xpY3lJbmZvQ2FjaGVGYWlsdXJlECsaIuI/HxIdUmVmcmVzaFBvb
  GljeUluZm9DYWNoZUZhaWx1cmUSLQoRTGlzdFBvbGljeUZhaWx1cmUQLBoW4j8TEhFMaXN0UG9saWN5RmFpbHVyZRInCg5Ob3RTa
  GFyZExlYWRlchAtGhPiPxASDk5vdFNoYXJkTGVhZGVyEi8KEk5vUmVwbGljYUF2YWlsYWJsZRAuGhfiPxQSEk5vUmVwbGljYUF2Y
  WlsYWJsZRIpCg9TZWdtZW50Tm90Rm91bmQQLxoU4j8REg9TZWdtZW50Tm90Rm91bmQSHQoJRm9yY2VEZW55EDAaDuI/CxIJRm9yY
  2VEZW55Eh0KCVJhdGVMaW1pdBAxGg7iPwsSCVJhdGVMaW1pdBInCg5Ob2RlSUROb3RNYXRjaBAyGhPiPxASDk5vZGVJRE5vdE1hd
  GNoEisKEFVwc2VydEF1dG9JRFRydWUQMxoV4j8SEhBVcHNlcnRBdXRvSURUcnVlEjsKGEluc3VmZmljaWVudE1lbW9yeVRvTG9hZ
  BA0Gh3iPxoSGEluc3VmZmljaWVudE1lbW9yeVRvTG9hZBIzChRNZW1vcnlRdW90YUV4aGF1c3RlZBA1GhniPxYSFE1lbW9yeVF1b
  3RhRXhoYXVzdGVkEi8KEkRpc2tRdW90YUV4aGF1c3RlZBA2GhfiPxQSEkRpc2tRdW90YUV4aGF1c3RlZBItChFUaW1lVGlja0xvb
  mdEZWxheRA3GhbiPxMSEVRpbWVUaWNrTG9uZ0RlbGF5EiUKDU5vdFJlYWR5U2VydmUQOBoS4j8PEg1Ob3RSZWFkeVNlcnZlEjkKF
  05vdFJlYWR5Q29vcmRBY3RpdmF0aW5nEDkaHOI/GRIXTm90UmVhZHlDb29yZEFjdGl2YXRpbmcSQQobQ3JlYXRlUHJpdmlsZWdlR
  3JvdXBGYWlsdXJlEDoaIOI/HRIbQ3JlYXRlUHJpdmlsZWdlR3JvdXBGYWlsdXJlEj0KGURyb3BQcml2aWxlZ2VHcm91cEZhaWx1c
  mUQOxoe4j8bEhlEcm9wUHJpdmlsZWdlR3JvdXBGYWlsdXJlEj8KGkxpc3RQcml2aWxlZ2VHcm91cHNGYWlsdXJlEDwaH+I/HBIaT
  GlzdFByaXZpbGVnZUdyb3Vwc0ZhaWx1cmUSQwocT3BlcmF0ZVByaXZpbGVnZUdyb3VwRmFpbHVyZRA9GiHiPx4SHE9wZXJhdGVQc
  ml2aWxlZ2VHcm91cEZhaWx1cmUSJwoOU2NoZW1hTWlzbWF0Y2gQPhoT4j8QEg5TY2hlbWFNaXNtYXRjaBIhCgtEYXRhQ29vcmROQ
  RBkGhDiPw0SC0RhdGFDb29yZE5BEiYKDUREUmVxdWVzdFJhY2UQ6AcaEuI/DxINRERSZXF1ZXN0UmFjZRoCGAEqwAEKCkluZGV4U
  3RhdGUSJwoOSW5kZXhTdGF0ZU5vbmUQABoT4j8QEg5JbmRleFN0YXRlTm9uZRIbCghVbmlzc3VlZBABGg3iPwoSCFVuaXNzdWVkE
  h8KCkluUHJvZ3Jlc3MQAhoP4j8MEgpJblByb2dyZXNzEhsKCEZpbmlzaGVkEAMaDeI/ChIIRmluaXNoZWQSFwoGRmFpbGVkEAQaC
  +I/CBIGRmFpbGVkEhUKBVJldHJ5EAUaCuI/BxIFUmV0cnkq/gEKDFNlZ21lbnRTdGF0ZRIrChBTZWdtZW50U3RhdGVOb25lEAAaF
  eI/EhIQU2VnbWVudFN0YXRlTm9uZRIbCghOb3RFeGlzdBABGg3iPwoSCE5vdEV4aXN0EhkKB0dyb3dpbmcQAhoM4j8JEgdHcm93a
  W5nEhcKBlNlYWxlZBADGgviPwgSBlNlYWxlZBIZCgdGbHVzaGVkEAQaDOI/CRIHRmx1c2hlZBIbCghGbHVzaGluZxAFGg3iPwoSC
  EZsdXNoaW5nEhkKB0Ryb3BwZWQQBhoM4j8JEgdEcm9wcGVkEh0KCUltcG9ydGluZxAHGg7iPwsSCUltcG9ydGluZypaCgxTZWdtZ
  W50TGV2ZWwSFwoGTGVnYWN5EAAaC+I/CBIGTGVnYWN5Eg8KAkwwEAEaB+I/BBICTDASDwoCTDEQAhoH4j8EEgJMMRIPCgJMMhADG
  gfiPwQSAkwyKoIFCg9QbGFjZWhvbGRlclR5cGUSEwoETm9uZRAAGgniPwYSBE5vbmUSIwoMQmluYXJ5VmVjdG9yEGQaEeI/DhIMQ
  mluYXJ5VmVjdG9yEiEKC0Zsb2F0VmVjdG9yEGUaEOI/DRILRmxvYXRWZWN0b3ISJQoNRmxvYXQxNlZlY3RvchBmGhLiPw8SDUZsb
  2F0MTZWZWN0b3ISJwoOQkZsb2F0MTZWZWN0b3IQZxoT4j8QEg5CRmxvYXQxNlZlY3RvchItChFTcGFyc2VGbG9hdFZlY3RvchBoG
  hbiPxMSEVNwYXJzZUZsb2F0VmVjdG9yEh8KCkludDhWZWN0b3IQaRoP4j8MEgpJbnQ4VmVjdG9yEhUKBUludDY0EAUaCuI/BxIFS
  W50NjQSGQoHVmFyQ2hhchAVGgziPwkSB1ZhckNoYXISMgoTRW1iTGlzdEJpbmFyeVZlY3RvchCsAhoY4j8VEhNFbWJMaXN0QmluY
  XJ5VmVjdG9yEjAKEkVtYkxpc3RGbG9hdFZlY3RvchCtAhoX4j8UEhJFbWJMaXN0RmxvYXRWZWN0b3ISNAoURW1iTGlzdEZsb2F0M
  TZWZWN0b3IQrgIaGeI/FhIURW1iTGlzdEZsb2F0MTZWZWN0b3ISNgoVRW1iTGlzdEJGbG9hdDE2VmVjdG9yEK8CGhriPxcSFUVtY
  kxpc3RCRmxvYXQxNlZlY3RvchI8ChhFbWJMaXN0U3BhcnNlRmxvYXRWZWN0b3IQsAIaHeI/GhIYRW1iTGlzdFNwYXJzZUZsb2F0V
  mVjdG9yEi4KEUVtYkxpc3RJbnQ4VmVjdG9yELECGhbiPxMSEUVtYkxpc3RJbnQ4VmVjdG9yKtomCgdNc2dUeXBlEh0KCVVuZGVma
  W5lZBAAGg7iPwsSCVVuZGVmaW5lZBIrChBDcmVhdGVDb2xsZWN0aW9uEGQaFeI/EhIQQ3JlYXRlQ29sbGVjdGlvbhInCg5Ecm9wQ
  29sbGVjdGlvbhBlGhPiPxASDkRyb3BDb2xsZWN0aW9uEiUKDUhhc0NvbGxlY3Rpb24QZhoS4j8PEg1IYXNDb2xsZWN0aW9uEi8KE
  kRlc2NyaWJlQ29sbGVjdGlvbhBnGhfiPxQSEkRlc2NyaWJlQ29sbGVjdGlvbhIpCg9TaG93Q29sbGVjdGlvbnMQaBoU4j8REg9Ta
  G93Q29sbGVjdGlvbnMSKwoQR2V0U3lzdGVtQ29uZmlncxBpGhXiPxISEEdldFN5c3RlbUNvbmZpZ3MSJwoOTG9hZENvbGxlY3Rpb
  24QahoT4j8QEg5Mb2FkQ29sbGVjdGlvbhItChFSZWxlYXNlQ29sbGVjdGlvbhBrGhbiPxMSEVJlbGVhc2VDb2xsZWN0aW9uEiEKC
  0NyZWF0ZUFsaWFzEGwaEOI/DRILQ3JlYXRlQWxpYXMSHQoJRHJvcEFsaWFzEG0aDuI/CxIJRHJvcEFsaWFzEh8KCkFsdGVyQWxpY
  XMQbhoP4j8MEgpBbHRlckFsaWFzEikKD0FsdGVyQ29sbGVjdGlvbhBvGhTiPxESD0FsdGVyQ29sbGVjdGlvbhIrChBSZW5hbWVDb
  2xsZWN0aW9uEHAaFeI/EhIQUmVuYW1lQ29sbGVjdGlvbhIlCg1EZXNjcmliZUFsaWFzEHEaEuI/DxINRGVzY3JpYmVBbGlhcxIhC
  gtMaXN0QWxpYXNlcxByGhDiPw0SC0xpc3RBbGlhc2VzEjMKFEFsdGVyQ29sbGVjdGlvbkZpZWxkEHMaGeI/FhIUQWx0ZXJDb2xsZ
  WN0aW9uRmllbGQSKgoPQ3JlYXRlUGFydGl0aW9uEMgBGhTiPxESD0NyZWF0ZVBhcnRpdGlvbhImCg1Ecm9wUGFydGl0aW9uEMkBG
  hLiPw8SDURyb3BQYXJ0aXRpb24SJAoMSGFzUGFydGl0aW9uEMoBGhHiPw4SDEhhc1BhcnRpdGlvbhIuChFEZXNjcmliZVBhcnRpd
  GlvbhDLARoW4j8TEhFEZXNjcmliZVBhcnRpdGlvbhIoCg5TaG93UGFydGl0aW9ucxDMARoT4j8QEg5TaG93UGFydGl0aW9ucxIoC
  g5Mb2FkUGFydGl0aW9ucxDNARoT4j8QEg5Mb2FkUGFydGl0aW9ucxIuChFSZWxlYXNlUGFydGl0aW9ucxDOARoW4j8TEhFSZWxlY
  XNlUGFydGl0aW9ucxIkCgxTaG93U2VnbWVudHMQ+gEaEeI/DhIMU2hvd1NlZ21lbnRzEioKD0Rlc2NyaWJlU2VnbWVudBD7ARoU4
  j8REg9EZXNjcmliZVNlZ21lbnQSJAoMTG9hZFNlZ21lbnRzEPwBGhHiPw4SDExvYWRTZWdtZW50cxIqCg9SZWxlYXNlU2VnbWVud
  HMQ/QEaFOI/ERIPUmVsZWFzZVNlZ21lbnRzEioKD0hhbmRvZmZTZWdtZW50cxD+ARoU4j8REg9IYW5kb2ZmU2VnbWVudHMSMgoTT
  G9hZEJhbGFuY2VTZWdtZW50cxD/ARoY4j8VEhNMb2FkQmFsYW5jZVNlZ21lbnRzEiwKEERlc2NyaWJlU2VnbWVudHMQgAIaFeI/E
  hIQRGVzY3JpYmVTZWdtZW50cxI6ChdGZWRlckxpc3RJbmRleGVkU2VnbWVudBCBAhoc4j8ZEhdGZWRlckxpc3RJbmRleGVkU2Vnb
  WVudBJGCh1GZWRlckRlc2NyaWJlU2VnbWVudEluZGV4RGF0YRCCAhoi4j8fEh1GZWRlckRlc2NyaWJlU2VnbWVudEluZGV4RGF0Y
  RIiCgtDcmVhdGVJbmRleBCsAhoQ4j8NEgtDcmVhdGVJbmRleBImCg1EZXNjcmliZUluZGV4EK0CGhLiPw8SDURlc2NyaWJlSW5kZ
  XgSHgoJRHJvcEluZGV4EK4CGg7iPwsSCURyb3BJbmRleBIwChJHZXRJbmRleFN0YXRpc3RpY3MQrwIaF+I/FBISR2V0SW5kZXhTd
  GF0aXN0aWNzEiAKCkFsdGVySW5kZXgQsAIaD+I/DBIKQWx0ZXJJbmRleBIYCgZJbnNlcnQQkAMaC+I/CBIGSW5zZXJ0EhgKBkRlb
  GV0ZRCRAxoL4j8IEgZEZWxldGUSFgoFRmx1c2gQkgMaCuI/BxIFRmx1c2gSMAoSUmVzZW5kU2VnbWVudFN0YXRzEJMDGhfiPxQSE
  lJlc2VuZFNlZ21lbnRTdGF0cxIYCgZVcHNlcnQQlAMaC+I/CBIGVXBzZXJ0EiIKC01hbnVhbEZsdXNoEJUDGhDiPw0SC01hbnVhb
  EZsdXNoEiQKDEZsdXNoU2VnbWVudBCWAxoR4j8OEgxGbHVzaFNlZ21lbnQSJgoNQ3JlYXRlU2VnbWVudBCXAxoS4j8PEg1DcmVhd
  GVTZWdtZW50EhgKBkltcG9ydBCYAxoL4j8IEgZJbXBvcnQSGAoGU2VhcmNoEPQDGgviPwgSBlNlYXJjaBIkCgxTZWFyY2hSZXN1b
  HQQ9QMaEeI/DhIMU2VhcmNoUmVzdWx0EiYKDUdldEluZGV4U3RhdGUQ9gMaEuI/DxINR2V0SW5kZXhTdGF0ZRI2ChVHZXRJbmRle
  EJ1aWxkUHJvZ3Jlc3MQ9wMaGuI/FxIVR2V0SW5kZXhCdWlsZFByb2dyZXNzEjoKF0dldENvbGxlY3Rpb25TdGF0aXN0aWNzEPgDG
  hziPxkSF0dldENvbGxlY3Rpb25TdGF0aXN0aWNzEjgKFkdldFBhcnRpdGlvblN0YXRpc3RpY3MQ+QMaG+I/GBIWR2V0UGFydGl0a
  W9uU3RhdGlzdGljcxIcCghSZXRyaWV2ZRD6AxoN4j8KEghSZXRyaWV2ZRIoCg5SZXRyaWV2ZVJlc3VsdBD7AxoT4j8QEg5SZXRya
  WV2ZVJlc3VsdBIqCg9XYXRjaERtQ2hhbm5lbHMQ/AMaFOI/ERIPV2F0Y2hEbUNoYW5uZWxzEiwKEFJlbW92ZURtQ2hhbm5lbHMQ/
  QMaFeI/EhIQUmVtb3ZlRG1DaGFubmVscxIwChJXYXRjaFF1ZXJ5Q2hhbm5lbHMQ/gMaF+I/FBISV2F0Y2hRdWVyeUNoYW5uZWxzE
  jIKE1JlbW92ZVF1ZXJ5Q2hhbm5lbHMQ/wMaGOI/FRITUmVtb3ZlUXVlcnlDaGFubmVscxI8ChhTZWFsZWRTZWdtZW50c0NoYW5nZ
  UluZm8QgAQaHeI/GhIYU2VhbGVkU2VnbWVudHNDaGFuZ2VJbmZvEjAKEldhdGNoRGVsdGFDaGFubmVscxCBBBoX4j8UEhJXYXRja
  ERlbHRhQ2hhbm5lbHMSKgoPR2V0U2hhcmRMZWFkZXJzEIIEGhTiPxESD0dldFNoYXJkTGVhZGVycxIiCgtHZXRSZXBsaWNhcxCDB
  BoQ4j8NEgtHZXRSZXBsaWNhcxIoCg5VbnN1YkRtQ2hhbm5lbBCEBBoT4j8QEg5VbnN1YkRtQ2hhbm5lbBIqCg9HZXREaXN0cmlid
  XRpb24QhQQaFOI/ERIPR2V0RGlzdHJpYnV0aW9uEiwKEFN5bmNEaXN0cmlidXRpb24QhgQaFeI/EhIQU3luY0Rpc3RyaWJ1dGlvb
  hIiCgtSdW5BbmFseXplchCHBBoQ4j8NEgtSdW5BbmFseXplchIiCgtTZWdtZW50SW5mbxDYBBoQ4j8NEgtTZWdtZW50SW5mbxIgC
  gpTeXN0ZW1JbmZvENkEGg/iPwwSClN5c3RlbUluZm8SKgoPR2V0UmVjb3ZlcnlJbmZvENoEGhTiPxESD0dldFJlY292ZXJ5SW5mb
  xIqCg9HZXRTZWdtZW50U3RhdGUQ2wQaFOI/ERIPR2V0U2VnbWVudFN0YXRlEhwKCFRpbWVUaWNrELAJGg3iPwoSCFRpbWVUaWNrE
  igKDlF1ZXJ5Tm9kZVN0YXRzELEJGhPiPxASDlF1ZXJ5Tm9kZVN0YXRzEh4KCUxvYWRJbmRleBCyCRoO4j8LEglMb2FkSW5kZXgSH
  goJUmVxdWVzdElEELMJGg7iPwsSCVJlcXVlc3RJRBIgCgpSZXF1ZXN0VFNPELQJGg/iPwwSClJlcXVlc3RUU08SKgoPQWxsb2Nhd
  GVTZWdtZW50ELUJGhTiPxESD0FsbG9jYXRlU2VnbWVudBIuChFTZWdtZW50U3RhdGlzdGljcxC2CRoW4j8TEhFTZWdtZW50U3Rhd
  GlzdGljcxIsChBTZWdtZW50Rmx1c2hEb25lELcJGhXiPxISEFNlZ21lbnRGbHVzaERvbmUSIAoKRGF0YU5vZGVUdBC4CRoP4j8ME
  gpEYXRhTm9kZVR0EhoKB0Nvbm5lY3QQuQkaDOI/CRIHQ29ubmVjdBIqCg9MaXN0Q2xpZW50SW5mb3MQugkaFOI/ERIPTGlzdENsa
  WVudEluZm9zEigKDkFsbG9jVGltZXN0YW1wELsJGhPiPxASDkFsbG9jVGltZXN0YW1wEh4KCVJlcGxpY2F0ZRC8CRoO4j8LEglSZ
  XBsaWNhdGUSLAoQQ3JlYXRlQ3JlZGVudGlhbBDcCxoV4j8SEhBDcmVhdGVDcmVkZW50aWFsEiYKDUdldENyZWRlbnRpYWwQ3QsaE
  uI/DxINR2V0Q3JlZGVudGlhbBIsChBEZWxldGVDcmVkZW50aWFsEN4LGhXiPxISEERlbGV0ZUNyZWRlbnRpYWwSLAoQVXBkYXRlQ
  3JlZGVudGlhbBDfCxoV4j8SEhBVcGRhdGVDcmVkZW50aWFsEi4KEUxpc3RDcmVkVXNlcm5hbWVzEOALGhbiPxMSEUxpc3RDcmVkV
  XNlcm5hbWVzEiAKCkNyZWF0ZVJvbGUQwAwaD+I/DBIKQ3JlYXRlUm9sZRIcCghEcm9wUm9sZRDBDBoN4j8KEghEcm9wUm9sZRIqC
  g9PcGVyYXRlVXNlclJvbGUQwgwaFOI/ERIPT3BlcmF0ZVVzZXJSb2xlEiAKClNlbGVjdFJvbGUQwwwaD+I/DBIKU2VsZWN0Um9sZ
  RIgCgpTZWxlY3RVc2VyEMQMGg/iPwwSClNlbGVjdFVzZXISKAoOU2VsZWN0UmVzb3VyY2UQxQwaE+I/EBIOU2VsZWN0UmVzb3VyY
  2USLAoQT3BlcmF0ZVByaXZpbGVnZRDGDBoV4j8SEhBPcGVyYXRlUHJpdmlsZWdlEiIKC1NlbGVjdEdyYW50EMcMGhDiPw0SC1Nlb
  GVjdEdyYW50EjgKFlJlZnJlc2hQb2xpY3lJbmZvQ2FjaGUQyAwaG+I/GBIWUmVmcmVzaFBvbGljeUluZm9DYWNoZRIgCgpMaXN0U
  G9saWN5EMkMGg/iPwwSCkxpc3RQb2xpY3kSNAoUQ3JlYXRlUHJpdmlsZWdlR3JvdXAQygwaGeI/FhIUQ3JlYXRlUHJpdmlsZWdlR
  3JvdXASMAoSRHJvcFByaXZpbGVnZUdyb3VwEMsMGhfiPxQSEkRyb3BQcml2aWxlZ2VHcm91cBIyChNMaXN0UHJpdmlsZWdlR3Jvd
  XBzEMwMGhjiPxUSE0xpc3RQcml2aWxlZ2VHcm91cHMSNgoVT3BlcmF0ZVByaXZpbGVnZUdyb3VwEM0MGhriPxcSFU9wZXJhdGVQc
  ml2aWxlZ2VHcm91cBIwChJPcGVyYXRlUHJpdmlsZWdlVjIQzgwaF+I/FBIST3BlcmF0ZVByaXZpbGVnZVYyEjIKE0NyZWF0ZVJlc
  291cmNlR3JvdXAQpA0aGOI/FRITQ3JlYXRlUmVzb3VyY2VHcm91cBIuChFEcm9wUmVzb3VyY2VHcm91cBClDRoW4j8TEhFEcm9wU
  mVzb3VyY2VHcm91cBIwChJMaXN0UmVzb3VyY2VHcm91cHMQpg0aF+I/FBISTGlzdFJlc291cmNlR3JvdXBzEjYKFURlc2NyaWJlU
  mVzb3VyY2VHcm91cBCnDRoa4j8XEhVEZXNjcmliZVJlc291cmNlR3JvdXASJAoMVHJhbnNmZXJOb2RlEKgNGhHiPw4SDFRyYW5zZ
  mVyTm9kZRIqCg9UcmFuc2ZlclJlcGxpY2EQqQ0aFOI/ERIPVHJhbnNmZXJSZXBsaWNhEjQKFFVwZGF0ZVJlc291cmNlR3JvdXBzE
  KoNGhniPxYSFFVwZGF0ZVJlc291cmNlR3JvdXBzEigKDkNyZWF0ZURhdGFiYXNlEIkOGhPiPxASDkNyZWF0ZURhdGFiYXNlEiQKD
  ERyb3BEYXRhYmFzZRCKDhoR4j8OEgxEcm9wRGF0YWJhc2USJgoNTGlzdERhdGFiYXNlcxCLDhoS4j8PEg1MaXN0RGF0YWJhc2VzE
  iYKDUFsdGVyRGF0YWJhc2UQjA4aEuI/DxINQWx0ZXJEYXRhYmFzZRIsChBEZXNjcmliZURhdGFiYXNlEI0OGhXiPxISEERlc2Nya
  WJlRGF0YWJhc2USMAoSQWRkQ29sbGVjdGlvbkZpZWxkEOwOGhfiPxQSEkFkZENvbGxlY3Rpb25GaWVsZCo9CgdEc2xUeXBlEhEKA
  0RzbBAAGgjiPwUSA0RzbBIfCgpCb29sRXhwclYxEAEaD+I/DBIKQm9vbEV4cHJWMSp2Cg9Db21wYWN0aW9uU3RhdGUSJQoNVW5kZ
  WZpZWRTdGF0ZRAAGhLiPw8SDVVuZGVmaWVkU3RhdGUSHQoJRXhlY3V0aW5nEAEaDuI/CxIJRXhlY3V0aW5nEh0KCUNvbXBsZXRlZ
  BACGg7iPwsSCUNvbXBsZXRlZCqjAQoQQ29uc2lzdGVuY3lMZXZlbBIXCgZTdHJvbmcQABoL4j8IEgZTdHJvbmcSGQoHU2Vzc2lvb
  hABGgziPwkSB1Nlc3Npb24SGQoHQm91bmRlZBACGgziPwkSB0JvdW5kZWQSHwoKRXZlbnR1YWxseRADGg/iPwwSCkV2ZW50dWFsb
  HkSHwoKQ3VzdG9taXplZBAEGg/iPwwSCkN1c3RvbWl6ZWQqtgIKC0ltcG9ydFN0YXRlEiUKDUltcG9ydFBlbmRpbmcQABoS4j8PE
  g1JbXBvcnRQZW5kaW5nEiMKDEltcG9ydEZhaWxlZBABGhHiPw4SDEltcG9ydEZhaWxlZBIlCg1JbXBvcnRTdGFydGVkEAIaEuI/D
  xINSW1wb3J0U3RhcnRlZBIpCg9JbXBvcnRQZXJzaXN0ZWQQBRoU4j8REg9JbXBvcnRQZXJzaXN0ZWQSJQoNSW1wb3J0Rmx1c2hlZ
  BAIGhLiPw8SDUltcG9ydEZsdXNoZWQSKQoPSW1wb3J0Q29tcGxldGVkEAYaFOI/ERIPSW1wb3J0Q29tcGxldGVkEjcKFkltcG9yd
  EZhaWxlZEFuZENsZWFuZWQQBxob4j8YEhZJbXBvcnRGYWlsZWRBbmRDbGVhbmVkKlsKCk9iamVjdFR5cGUSHwoKQ29sbGVjdGlvb
  hAAGg/iPwwSCkNvbGxlY3Rpb24SFwoGR2xvYmFsEAEaC+I/CBIGR2xvYmFsEhMKBFVzZXIQAhoJ4j8GEgRVc2VyKrYiCg9PYmplY
  3RQcml2aWxlZ2USIwoMUHJpdmlsZWdlQWxsEAAaEeI/DhIMUHJpdmlsZWdlQWxsEj0KGVByaXZpbGVnZUNyZWF0ZUNvbGxlY3Rpb
  24QARoe4j8bEhlQcml2aWxlZ2VDcmVhdGVDb2xsZWN0aW9uEjkKF1ByaXZpbGVnZURyb3BDb2xsZWN0aW9uEAIaHOI/GRIXUHJpd
  mlsZWdlRHJvcENvbGxlY3Rpb24SQQobUHJpdmlsZWdlRGVzY3JpYmVDb2xsZWN0aW9uEAMaIOI/HRIbUHJpdmlsZWdlRGVzY3JpY
  mVDb2xsZWN0aW9uEjsKGFByaXZpbGVnZVNob3dDb2xsZWN0aW9ucxAEGh3iPxoSGFByaXZpbGVnZVNob3dDb2xsZWN0aW9ucxIlC
  g1Qcml2aWxlZ2VMb2FkEAUaEuI/DxINUHJpdmlsZWdlTG9hZBIrChBQcml2aWxlZ2VSZWxlYXNlEAYaFeI/EhIQUHJpdmlsZWdlU
  mVsZWFzZRIxChNQcml2aWxlZ2VDb21wYWN0aW9uEAcaGOI/FRITUHJpdmlsZWdlQ29tcGFjdGlvbhIpCg9Qcml2aWxlZ2VJbnNlc
  nQQCBoU4j8REg9Qcml2aWxlZ2VJbnNlcnQSKQoPUHJpdmlsZWdlRGVsZXRlEAkaFOI/ERIPUHJpdmlsZWdlRGVsZXRlEjcKFlBya
  XZpbGVnZUdldFN0YXRpc3RpY3MQChob4j8YEhZQcml2aWxlZ2VHZXRTdGF0aXN0aWNzEjMKFFByaXZpbGVnZUNyZWF0ZUluZGV4E
  AsaGeI/FhIUUHJpdmlsZWdlQ3JlYXRlSW5kZXgSMwoUUHJpdmlsZWdlSW5kZXhEZXRhaWwQDBoZ4j8WEhRQcml2aWxlZ2VJbmRle
  ERldGFpbBIvChJQcml2aWxlZ2VEcm9wSW5kZXgQDRoX4j8UEhJQcml2aWxlZ2VEcm9wSW5kZXgSKQoPUHJpdmlsZWdlU2VhcmNoE
  A4aFOI/ERIPUHJpdmlsZWdlU2VhcmNoEicKDlByaXZpbGVnZUZsdXNoEA8aE+I/EBIOUHJpdmlsZWdlRmx1c2gSJwoOUHJpdmlsZ
  WdlUXVlcnkQEBoT4j8QEg5Qcml2aWxlZ2VRdWVyeRIzChRQcml2aWxlZ2VMb2FkQmFsYW5jZRARGhniPxYSFFByaXZpbGVnZUxvY
  WRCYWxhbmNlEikKD1ByaXZpbGVnZUltcG9ydBASGhTiPxESD1ByaXZpbGVnZUltcG9ydBI7ChhQcml2aWxlZ2VDcmVhdGVPd25lc
  nNoaXAQExod4j8aEhhQcml2aWxlZ2VDcmVhdGVPd25lcnNoaXASMQoTUHJpdmlsZWdlVXBkYXRlVXNlchAUGhjiPxUSE1ByaXZpb
  GVnZVVwZGF0ZVVzZXISNwoWUHJpdmlsZWdlRHJvcE93bmVyc2hpcBAVGhviPxgSFlByaXZpbGVnZURyb3BPd25lcnNoaXASOwoYU
  HJpdmlsZWdlU2VsZWN0T3duZXJzaGlwEBYaHeI/GhIYUHJpdmlsZWdlU2VsZWN0T3duZXJzaGlwEjsKGFByaXZpbGVnZU1hbmFnZ
  U93bmVyc2hpcBAXGh3iPxoSGFByaXZpbGVnZU1hbmFnZU93bmVyc2hpcBIxChNQcml2aWxlZ2VTZWxlY3RVc2VyEBgaGOI/FRITU
  HJpdmlsZWdlU2VsZWN0VXNlchIpCg9Qcml2aWxlZ2VVcHNlcnQQGRoU4j8REg9Qcml2aWxlZ2VVcHNlcnQSQwocUHJpdmlsZWdlQ
  3JlYXRlUmVzb3VyY2VHcm91cBAaGiHiPx4SHFByaXZpbGVnZUNyZWF0ZVJlc291cmNlR3JvdXASPwoaUHJpdmlsZWdlRHJvcFJlc
  291cmNlR3JvdXAQGxof4j8cEhpQcml2aWxlZ2VEcm9wUmVzb3VyY2VHcm91cBJHCh5Qcml2aWxlZ2VEZXNjcmliZVJlc291cmNlR
  3JvdXAQHBoj4j8gEh5Qcml2aWxlZ2VEZXNjcmliZVJlc291cmNlR3JvdXASQQobUHJpdmlsZWdlTGlzdFJlc291cmNlR3JvdXBzE
  B0aIOI/HRIbUHJpdmlsZWdlTGlzdFJlc291cmNlR3JvdXBzEjUKFVByaXZpbGVnZVRyYW5zZmVyTm9kZRAeGhriPxcSFVByaXZpb
  GVnZVRyYW5zZmVyTm9kZRI7ChhQcml2aWxlZ2VUcmFuc2ZlclJlcGxpY2EQHxod4j8aEhhQcml2aWxlZ2VUcmFuc2ZlclJlcGxpY
  2ESQQobUHJpdmlsZWdlR2V0TG9hZGluZ1Byb2dyZXNzECAaIOI/HRIbUHJpdmlsZWdlR2V0TG9hZGluZ1Byb2dyZXNzEjUKFVBya
  XZpbGVnZUdldExvYWRTdGF0ZRAhGhriPxcSFVByaXZpbGVnZUdldExvYWRTdGF0ZRI9ChlQcml2aWxlZ2VSZW5hbWVDb2xsZWN0a
  W9uECIaHuI/GxIZUHJpdmlsZWdlUmVuYW1lQ29sbGVjdGlvbhI5ChdQcml2aWxlZ2VDcmVhdGVEYXRhYmFzZRAjGhziPxkSF1Bya
  XZpbGVnZUNyZWF0ZURhdGFiYXNlEjUKFVByaXZpbGVnZURyb3BEYXRhYmFzZRAkGhriPxcSFVByaXZpbGVnZURyb3BEYXRhYmFzZ
  RI3ChZQcml2aWxlZ2VMaXN0RGF0YWJhc2VzECUaG+I/GBIWUHJpdmlsZWdlTGlzdERhdGFiYXNlcxItChFQcml2aWxlZ2VGbHVza
  EFsbBAmGhbiPxMSEVByaXZpbGVnZUZsdXNoQWxsEjsKGFByaXZpbGVnZUNyZWF0ZVBhcnRpdGlvbhAnGh3iPxoSGFByaXZpbGVnZ
  UNyZWF0ZVBhcnRpdGlvbhI3ChZQcml2aWxlZ2VEcm9wUGFydGl0aW9uECgaG+I/GBIWUHJpdmlsZWdlRHJvcFBhcnRpdGlvbhI5C
  hdQcml2aWxlZ2VTaG93UGFydGl0aW9ucxApGhziPxkSF1ByaXZpbGVnZVNob3dQYXJ0aXRpb25zEjUKFVByaXZpbGVnZUhhc1Bhc
  nRpdGlvbhAqGhriPxcSFVByaXZpbGVnZUhhc1BhcnRpdGlvbhI3ChZQcml2aWxlZ2VHZXRGbHVzaFN0YXRlECsaG+I/GBIWUHJpd
  mlsZWdlR2V0Rmx1c2hTdGF0ZRIzChRQcml2aWxlZ2VDcmVhdGVBbGlhcxAsGhniPxYSFFByaXZpbGVnZUNyZWF0ZUFsaWFzEi8KE
  lByaXZpbGVnZURyb3BBbGlhcxAtGhfiPxQSElByaXZpbGVnZURyb3BBbGlhcxI3ChZQcml2aWxlZ2VEZXNjcmliZUFsaWFzEC4aG
  +I/GBIWUHJpdmlsZWdlRGVzY3JpYmVBbGlhcxIzChRQcml2aWxlZ2VMaXN0QWxpYXNlcxAvGhniPxYSFFByaXZpbGVnZUxpc3RBb
  Glhc2VzEkUKHVByaXZpbGVnZVVwZGF0ZVJlc291cmNlR3JvdXBzEDAaIuI/HxIdUHJpdmlsZWdlVXBkYXRlUmVzb3VyY2VHcm91c
  HMSNwoWUHJpdmlsZWdlQWx0ZXJEYXRhYmFzZRAxGhviPxgSFlByaXZpbGVnZUFsdGVyRGF0YWJhc2USPQoZUHJpdmlsZWdlRGVzY
  3JpYmVEYXRhYmFzZRAyGh7iPxsSGVByaXZpbGVnZURlc2NyaWJlRGF0YWJhc2USMQoTUHJpdmlsZWdlQmFja3VwUkJBQxAzGhjiP
  xUSE1ByaXZpbGVnZUJhY2t1cFJCQUMSMwoUUHJpdmlsZWdlUmVzdG9yZVJCQUMQNBoZ4j8WEhRQcml2aWxlZ2VSZXN0b3JlUkJBQ
  xI3ChZQcml2aWxlZ2VHcm91cFJlYWRPbmx5EDUaG+I/GBIWUHJpdmlsZWdlR3JvdXBSZWFkT25seRI5ChdQcml2aWxlZ2VHcm91c
  FJlYWRXcml0ZRA2GhziPxkSF1ByaXZpbGVnZUdyb3VwUmVhZFdyaXRlEjEKE1ByaXZpbGVnZUdyb3VwQWRtaW4QNxoY4j8VEhNQc
  ml2aWxlZ2VHcm91cEFkbWluEkUKHVByaXZpbGVnZUNyZWF0ZVByaXZpbGVnZUdyb3VwEDgaIuI/HxIdUHJpdmlsZWdlQ3JlYXRlU
  HJpdmlsZWdlR3JvdXASQQobUHJpdmlsZWdlRHJvcFByaXZpbGVnZUdyb3VwEDkaIOI/HRIbUHJpdmlsZWdlRHJvcFByaXZpbGVnZ
  Udyb3VwEkMKHFByaXZpbGVnZUxpc3RQcml2aWxlZ2VHcm91cHMQOhoh4j8eEhxQcml2aWxlZ2VMaXN0UHJpdmlsZWdlR3JvdXBzE
  kcKHlByaXZpbGVnZU9wZXJhdGVQcml2aWxlZ2VHcm91cBA7GiPiPyASHlByaXZpbGVnZU9wZXJhdGVQcml2aWxlZ2VHcm91cBJFC
  h1Qcml2aWxlZ2VHcm91cENsdXN0ZXJSZWFkT25seRA8GiLiPx8SHVByaXZpbGVnZUdyb3VwQ2x1c3RlclJlYWRPbmx5EkcKHlBya
  XZpbGVnZUdyb3VwQ2x1c3RlclJlYWRXcml0ZRA9GiPiPyASHlByaXZpbGVnZUdyb3VwQ2x1c3RlclJlYWRXcml0ZRI/ChpQcml2a
  WxlZ2VHcm91cENsdXN0ZXJBZG1pbhA+Gh/iPxwSGlByaXZpbGVnZUdyb3VwQ2x1c3RlckFkbWluEkcKHlByaXZpbGVnZUdyb3VwR
  GF0YWJhc2VSZWFkT25seRA/GiPiPyASHlByaXZpbGVnZUdyb3VwRGF0YWJhc2VSZWFkT25seRJJCh9Qcml2aWxlZ2VHcm91cERhd
  GFiYXNlUmVhZFdyaXRlEEAaJOI/IRIfUHJpdmlsZWdlR3JvdXBEYXRhYmFzZVJlYWRXcml0ZRJBChtQcml2aWxlZ2VHcm91cERhd
  GFiYXNlQWRtaW4QQRog4j8dEhtQcml2aWxlZ2VHcm91cERhdGFiYXNlQWRtaW4SSwogUHJpdmlsZWdlR3JvdXBDb2xsZWN0aW9uU
  mVhZE9ubHkQQhol4j8iEiBQcml2aWxlZ2VHcm91cENvbGxlY3Rpb25SZWFkT25seRJNCiFQcml2aWxlZ2VHcm91cENvbGxlY3Rpb
  25SZWFkV3JpdGUQQxom4j8jEiFQcml2aWxlZ2VHcm91cENvbGxlY3Rpb25SZWFkV3JpdGUSRQodUHJpdmlsZWdlR3JvdXBDb2xsZ
  WN0aW9uQWRtaW4QRBoi4j8fEh1Qcml2aWxlZ2VHcm91cENvbGxlY3Rpb25BZG1pbhI/ChpQcml2aWxlZ2VHZXRJbXBvcnRQcm9nc
  mVzcxBFGh/iPxwSGlByaXZpbGVnZUdldEltcG9ydFByb2dyZXNzEjEKE1ByaXZpbGVnZUxpc3RJbXBvcnQQRhoY4j8VEhNQcml2a
  WxlZ2VMaXN0SW1wb3J0EkEKG1ByaXZpbGVnZUFkZENvbGxlY3Rpb25GaWVsZBBHGiDiPx0SG1ByaXZpbGVnZUFkZENvbGxlY3Rpb
  25GaWVsZBI7ChhQcml2aWxlZ2VBZGRGaWxlUmVzb3VyY2UQSBod4j8aEhhQcml2aWxlZ2VBZGRGaWxlUmVzb3VyY2USQQobUHJpd
  mlsZWdlUmVtb3ZlRmlsZVJlc291cmNlEEkaIOI/HRIbUHJpdmlsZWdlUmVtb3ZlRmlsZVJlc291cmNlEj8KGlByaXZpbGVnZUxpc
  3RGaWxlUmVzb3VyY2VzEEoaH+I/HBIaUHJpdmlsZWdlTGlzdEZpbGVSZXNvdXJjZXMqoAEKCVN0YXRlQ29kZRIjCgxJbml0aWFsa
  XppbmcQABoR4j8OEgxJbml0aWFsaXppbmcSGQoHSGVhbHRoeRABGgziPwkSB0hlYWx0aHkSGwoIQWJub3JtYWwQAhoN4j8KEghBY
  m5vcm1hbBIZCgdTdGFuZEJ5EAMaDOI/CRIHU3RhbmRCeRIbCghTdG9wcGluZxAEGg3iPwoSCFN0b3BwaW5nKr8BCglMb2FkU3Rhd
  GUSLQoRTG9hZFN0YXRlTm90RXhpc3QQABoW4j8TEhFMb2FkU3RhdGVOb3RFeGlzdBIrChBMb2FkU3RhdGVOb3RMb2FkEAEaFeI/E
  hIQTG9hZFN0YXRlTm90TG9hZBIrChBMb2FkU3RhdGVMb2FkaW5nEAIaFeI/EhIQTG9hZFN0YXRlTG9hZGluZxIpCg9Mb2FkU3Rhd
  GVMb2FkZWQQAxoU4j8REg9Mb2FkU3RhdGVMb2FkZWQqNgoMTG9hZFByaW9yaXR5EhMKBEhJR0gQABoJ4j8GEgRISUdIEhEKA0xPV
  xABGgjiPwUSA0xPVypFChBGaWxlUmVzb3VyY2VUeXBlEjEKE0FOQUxZWkVSX0RJQ1RJT05BUlkQABoY4j8VEhNBTkFMWVpFUl9ES
  UNUSU9OQVJZOm8KEXByaXZpbGVnZV9leHRfb2JqEh8uZ29vZ2xlLnByb3RvYnVmLk1lc3NhZ2VPcHRpb25zGOkHIAEoCzIhLm1pb
  HZ1cy5wcm90by5jb21tb24uUHJpdmlsZWdlRXh0Ug9wcml2aWxlZ2VFeHRPYmpCbQoOaW8ubWlsdnVzLmdycGNCC0NvbW1vblByb
  3RvUAFaNGdpdGh1Yi5jb20vbWlsdnVzLWlvL21pbHZ1cy1wcm90by9nby1hcGkvdjIvY29tbW9ucGKgAQGqAhJNaWx2dXMuQ2xpZ
  W50LkdycGNiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.descriptor.DescriptorProtoCompanion.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
  val privilegeExtObj: _root_.scalapb.GeneratedExtension[com.google.protobuf.descriptor.MessageOptions, _root_.scala.Option[io.milvus.grpc.common.PrivilegeExt]] =
    _root_.scalapb.GeneratedExtension.forOptionalUnknownMessageField(1001, _root_.scalapb.UnknownFieldSet.Field.lengthDelimitedLens)({__valueIn => _root_.scalapb.GeneratedExtension.readMessageFromByteString(io.milvus.grpc.common.PrivilegeExt)(__valueIn)}, {(__valueIn: io.milvus.grpc.common.PrivilegeExt) => __valueIn.toByteString})
}