// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

sealed abstract class StateCode(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.common.StateCode
  type RecognizedType = io.milvus.grpc.common.StateCode.Recognized
  def isInitializing: _root_.scala.Boolean = false
  def isHealthy: _root_.scala.Boolean = false
  def isAbnormal: _root_.scala.Boolean = false
  def isStandBy: _root_.scala.Boolean = false
  def isStopping: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[StateCode] = io.milvus.grpc.common.StateCode
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.common.StateCode.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.common.StateCode.Recognized])
}

object StateCode extends _root_.scalapb.GeneratedEnumCompanion[StateCode] {
  sealed trait Recognized extends StateCode
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[StateCode] = this
  
  @SerialVersionUID(0L)
  case object Initializing extends StateCode(0) with StateCode.Recognized {
    val index = 0
    val name = "Initializing"
    override def isInitializing: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Healthy extends StateCode(1) with StateCode.Recognized {
    val index = 1
    val name = "Healthy"
    override def isHealthy: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Abnormal extends StateCode(2) with StateCode.Recognized {
    val index = 2
    val name = "Abnormal"
    override def isAbnormal: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object StandBy extends StateCode(3) with StateCode.Recognized {
    val index = 3
    val name = "StandBy"
    override def isStandBy: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Stopping extends StateCode(4) with StateCode.Recognized {
    val index = 4
    val name = "Stopping"
    override def isStopping: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends StateCode(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(Initializing, Healthy, Abnormal, StandBy, Stopping)
  def fromValue(__value: _root_.scala.Int): StateCode = __value match {
    case 0 => Initializing
    case 1 => Healthy
    case 2 => Abnormal
    case 3 => StandBy
    case 4 => Stopping
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getEnumTypes().get(12)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.enums(12)
}