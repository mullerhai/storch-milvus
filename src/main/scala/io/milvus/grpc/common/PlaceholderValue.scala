// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

/** @param values
  *   values is a 2d-array of nq rows, every row contains a query vector.
  *   for dense vector, all rows are of the same length; for sparse vector,
  *   the length of each row may vary depending on their number of non-zeros.
  */
@SerialVersionUID(0L)
final case class PlaceholderValue(
    tag: _root_.scala.Predef.String = "",
    `type`: io.milvus.grpc.common.PlaceholderType = io.milvus.grpc.common.PlaceholderType.None,
    values: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PlaceholderValue] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = tag
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = `type`.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value)
        }
      };
      values.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(3, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = tag
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = `type`.value
        if (__v != 0) {
          _output__.writeEnum(2, __v)
        }
      };
      values.foreach { __v =>
        val __m = __v
        _output__.writeBytes(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withTag(__v: _root_.scala.Predef.String): PlaceholderValue = copy(tag = __v)
    def withType(__v: io.milvus.grpc.common.PlaceholderType): PlaceholderValue = copy(`type` = __v)
    def clearValues = copy(values = _root_.scala.Seq.empty)
    def addValues(__vs: _root_.com.google.protobuf.ByteString *): PlaceholderValue = addAllValues(__vs)
    def addAllValues(__vs: Iterable[_root_.com.google.protobuf.ByteString]): PlaceholderValue = copy(values = values ++ __vs)
    def withValues(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): PlaceholderValue = copy(values = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = tag
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3 => values
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(tag)
        case 2 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
        case 3 => _root_.scalapb.descriptors.PRepeated(values.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.common.PlaceholderValue.type = io.milvus.grpc.common.PlaceholderValue
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.common.PlaceholderValue])
}

object PlaceholderValue extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.PlaceholderValue] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.PlaceholderValue] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.common.PlaceholderValue = {
    var __tag: _root_.scala.Predef.String = ""
    var __type: io.milvus.grpc.common.PlaceholderType = io.milvus.grpc.common.PlaceholderType.None
    val __values: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __tag = _input__.readStringRequireUtf8()
        case 16 =>
          __type = io.milvus.grpc.common.PlaceholderType.fromValue(_input__.readEnum())
        case 26 =>
          __values += _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.common.PlaceholderValue(
        tag = __tag,
        `type` = __type,
        values = __values.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.common.PlaceholderValue] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.common.PlaceholderValue(
        tag = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        `type` = io.milvus.grpc.common.PlaceholderType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.PlaceholderType.None.scalaValueDescriptor).number),
        values = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => io.milvus.grpc.common.PlaceholderType
    }
  }
  lazy val defaultInstance = io.milvus.grpc.common.PlaceholderValue(
    tag = "",
    `type` = io.milvus.grpc.common.PlaceholderType.None,
    values = _root_.scala.Seq.empty
  )
  implicit class PlaceholderValueLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.PlaceholderValue]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.common.PlaceholderValue](_l) {
    def tag: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tag)((c_, f_) => c_.copy(tag = f_))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.PlaceholderType] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
    def values: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.values)((c_, f_) => c_.copy(values = f_))
  }
  final val TAG_FIELD_NUMBER = 1
  final val TYPE_FIELD_NUMBER = 2
  final val VALUES_FIELD_NUMBER = 3
  def of(
    tag: _root_.scala.Predef.String,
    `type`: io.milvus.grpc.common.PlaceholderType,
    values: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]
  ): _root_.io.milvus.grpc.common.PlaceholderValue = _root_.io.milvus.grpc.common.PlaceholderValue(
    tag,
    `type`,
    values
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.common.PlaceholderValue])
}
