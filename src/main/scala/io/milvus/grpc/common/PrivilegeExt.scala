// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.common

@SerialVersionUID(0L)
final case class PrivilegeExt(
    objectType: io.milvus.grpc.common.ObjectType = io.milvus.grpc.common.ObjectType.Collection,
    objectPrivilege: io.milvus.grpc.common.ObjectPrivilege = io.milvus.grpc.common.ObjectPrivilege.PrivilegeAll,
    objectNameIndex: _root_.scala.Int = 0,
    objectNameIndexs: _root_.scala.Int = 0,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PrivilegeExt] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = objectType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      
      {
        val __value = objectPrivilege.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value)
        }
      };
      
      {
        val __value = objectNameIndex
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
        }
      };
      
      {
        val __value = objectNameIndexs
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = objectType.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      {
        val __v = objectPrivilege.value
        if (__v != 0) {
          _output__.writeEnum(2, __v)
        }
      };
      {
        val __v = objectNameIndex
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
      {
        val __v = objectNameIndexs
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withObjectType(__v: io.milvus.grpc.common.ObjectType): PrivilegeExt = copy(objectType = __v)
    def withObjectPrivilege(__v: io.milvus.grpc.common.ObjectPrivilege): PrivilegeExt = copy(objectPrivilege = __v)
    def withObjectNameIndex(__v: _root_.scala.Int): PrivilegeExt = copy(objectNameIndex = __v)
    def withObjectNameIndexs(__v: _root_.scala.Int): PrivilegeExt = copy(objectNameIndexs = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = objectType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = objectPrivilege.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3 => {
          val __t = objectNameIndex
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = objectNameIndexs
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(objectType.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PEnum(objectPrivilege.scalaValueDescriptor)
        case 3 => _root_.scalapb.descriptors.PInt(objectNameIndex)
        case 4 => _root_.scalapb.descriptors.PInt(objectNameIndexs)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.common.PrivilegeExt.type = io.milvus.grpc.common.PrivilegeExt
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.common.PrivilegeExt])
}

object PrivilegeExt extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.PrivilegeExt] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.common.PrivilegeExt] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.common.PrivilegeExt = {
    var __objectType: io.milvus.grpc.common.ObjectType = io.milvus.grpc.common.ObjectType.Collection
    var __objectPrivilege: io.milvus.grpc.common.ObjectPrivilege = io.milvus.grpc.common.ObjectPrivilege.PrivilegeAll
    var __objectNameIndex: _root_.scala.Int = 0
    var __objectNameIndexs: _root_.scala.Int = 0
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __objectType = io.milvus.grpc.common.ObjectType.fromValue(_input__.readEnum())
        case 16 =>
          __objectPrivilege = io.milvus.grpc.common.ObjectPrivilege.fromValue(_input__.readEnum())
        case 24 =>
          __objectNameIndex = _input__.readInt32()
        case 32 =>
          __objectNameIndexs = _input__.readInt32()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.common.PrivilegeExt(
        objectType = __objectType,
        objectPrivilege = __objectPrivilege,
        objectNameIndex = __objectNameIndex,
        objectNameIndexs = __objectNameIndexs,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.common.PrivilegeExt] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.common.PrivilegeExt(
        objectType = io.milvus.grpc.common.ObjectType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.ObjectType.Collection.scalaValueDescriptor).number),
        objectPrivilege = io.milvus.grpc.common.ObjectPrivilege.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.ObjectPrivilege.PrivilegeAll.scalaValueDescriptor).number),
        objectNameIndex = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        objectNameIndexs = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.common.CommonProto.javaDescriptor.getMessageTypes().get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.common.CommonProto.scalaDescriptor.messages(11)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => io.milvus.grpc.common.ObjectType
      case 2 => io.milvus.grpc.common.ObjectPrivilege
    }
  }
  lazy val defaultInstance = io.milvus.grpc.common.PrivilegeExt(
    objectType = io.milvus.grpc.common.ObjectType.Collection,
    objectPrivilege = io.milvus.grpc.common.ObjectPrivilege.PrivilegeAll,
    objectNameIndex = 0,
    objectNameIndexs = 0
  )
  implicit class PrivilegeExtLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.PrivilegeExt]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.common.PrivilegeExt](_l) {
    def objectType: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.ObjectType] = field(_.objectType)((c_, f_) => c_.copy(objectType = f_))
    def objectPrivilege: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.ObjectPrivilege] = field(_.objectPrivilege)((c_, f_) => c_.copy(objectPrivilege = f_))
    def objectNameIndex: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.objectNameIndex)((c_, f_) => c_.copy(objectNameIndex = f_))
    def objectNameIndexs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.objectNameIndexs)((c_, f_) => c_.copy(objectNameIndexs = f_))
  }
  final val OBJECT_TYPE_FIELD_NUMBER = 1
  final val OBJECT_PRIVILEGE_FIELD_NUMBER = 2
  final val OBJECT_NAME_INDEX_FIELD_NUMBER = 3
  final val OBJECT_NAME_INDEXS_FIELD_NUMBER = 4
  def of(
    objectType: io.milvus.grpc.common.ObjectType,
    objectPrivilege: io.milvus.grpc.common.ObjectPrivilege,
    objectNameIndex: _root_.scala.Int,
    objectNameIndexs: _root_.scala.Int
  ): _root_.io.milvus.grpc.common.PrivilegeExt = _root_.io.milvus.grpc.common.PrivilegeExt(
    objectType,
    objectPrivilege,
    objectNameIndex,
    objectNameIndexs
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.common.PrivilegeExt])
}
