// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.schema

/** *
  * &#64;brief Field schema
  *
  * @param state
  *   To keep compatible with older version, the default
  * @param elementType
  *   state is `Created`.
  *   For array type, the element type is stored here
  * @param defaultValue
  *   default_value only support scalars except array and json for now
  * @param isDynamic
  *   mark whether this field is the dynamic field
  * @param isPartitionKey
  *   enable logic partitions
  * @param nullable
  *   enable set null as field value
  */
@SerialVersionUID(0L)
final case class FieldSchema(
    fieldID: _root_.scala.Long = 0L,
    name: _root_.scala.Predef.String = "",
    isPrimaryKey: _root_.scala.Boolean = false,
    description: _root_.scala.Predef.String = "",
    dataType: io.milvus.grpc.schema.DataType = io.milvus.grpc.schema.DataType.None,
    typeParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair] = _root_.scala.Seq.empty,
    indexParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair] = _root_.scala.Seq.empty,
    autoID: _root_.scala.Boolean = false,
    state: io.milvus.grpc.schema.FieldState = io.milvus.grpc.schema.FieldState.FieldCreated,
    elementType: io.milvus.grpc.schema.DataType = io.milvus.grpc.schema.DataType.None,
    defaultValue: _root_.scala.Option[io.milvus.grpc.schema.ValueField] = _root_.scala.None,
    isDynamic: _root_.scala.Boolean = false,
    isPartitionKey: _root_.scala.Boolean = false,
    isClusteringKey: _root_.scala.Boolean = false,
    nullable: _root_.scala.Boolean = false,
    isFunctionOutput: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FieldSchema] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = fieldID
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = isPrimaryKey
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = dataType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      typeParams.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      indexParams.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = autoID
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(8, __value)
        }
      };
      
      {
        val __value = state.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(9, __value)
        }
      };
      
      {
        val __value = elementType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(10, __value)
        }
      };
      if (defaultValue.isDefined) {
        val __value = defaultValue.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = isDynamic
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(12, __value)
        }
      };
      
      {
        val __value = isPartitionKey
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(13, __value)
        }
      };
      
      {
        val __value = isClusteringKey
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(14, __value)
        }
      };
      
      {
        val __value = nullable
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(15, __value)
        }
      };
      
      {
        val __value = isFunctionOutput
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(16, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = fieldID
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = isPrimaryKey
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = dataType.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      typeParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      indexParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = autoID
        if (__v != false) {
          _output__.writeBool(8, __v)
        }
      };
      {
        val __v = state.value
        if (__v != 0) {
          _output__.writeEnum(9, __v)
        }
      };
      {
        val __v = elementType.value
        if (__v != 0) {
          _output__.writeEnum(10, __v)
        }
      };
      defaultValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = isDynamic
        if (__v != false) {
          _output__.writeBool(12, __v)
        }
      };
      {
        val __v = isPartitionKey
        if (__v != false) {
          _output__.writeBool(13, __v)
        }
      };
      {
        val __v = isClusteringKey
        if (__v != false) {
          _output__.writeBool(14, __v)
        }
      };
      {
        val __v = nullable
        if (__v != false) {
          _output__.writeBool(15, __v)
        }
      };
      {
        val __v = isFunctionOutput
        if (__v != false) {
          _output__.writeBool(16, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withFieldID(__v: _root_.scala.Long): FieldSchema = copy(fieldID = __v)
    def withName(__v: _root_.scala.Predef.String): FieldSchema = copy(name = __v)
    def withIsPrimaryKey(__v: _root_.scala.Boolean): FieldSchema = copy(isPrimaryKey = __v)
    def withDescription(__v: _root_.scala.Predef.String): FieldSchema = copy(description = __v)
    def withDataType(__v: io.milvus.grpc.schema.DataType): FieldSchema = copy(dataType = __v)
    def clearTypeParams = copy(typeParams = _root_.scala.Seq.empty)
    def addTypeParams(__vs: io.milvus.grpc.common.KeyValuePair *): FieldSchema = addAllTypeParams(__vs)
    def addAllTypeParams(__vs: Iterable[io.milvus.grpc.common.KeyValuePair]): FieldSchema = copy(typeParams = typeParams ++ __vs)
    def withTypeParams(__v: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]): FieldSchema = copy(typeParams = __v)
    def clearIndexParams = copy(indexParams = _root_.scala.Seq.empty)
    def addIndexParams(__vs: io.milvus.grpc.common.KeyValuePair *): FieldSchema = addAllIndexParams(__vs)
    def addAllIndexParams(__vs: Iterable[io.milvus.grpc.common.KeyValuePair]): FieldSchema = copy(indexParams = indexParams ++ __vs)
    def withIndexParams(__v: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]): FieldSchema = copy(indexParams = __v)
    def withAutoID(__v: _root_.scala.Boolean): FieldSchema = copy(autoID = __v)
    def withState(__v: io.milvus.grpc.schema.FieldState): FieldSchema = copy(state = __v)
    def withElementType(__v: io.milvus.grpc.schema.DataType): FieldSchema = copy(elementType = __v)
    def getDefaultValue: io.milvus.grpc.schema.ValueField = defaultValue.getOrElse(io.milvus.grpc.schema.ValueField.defaultInstance)
    def clearDefaultValue: FieldSchema = copy(defaultValue = _root_.scala.None)
    def withDefaultValue(__v: io.milvus.grpc.schema.ValueField): FieldSchema = copy(defaultValue = Option(__v))
    def withIsDynamic(__v: _root_.scala.Boolean): FieldSchema = copy(isDynamic = __v)
    def withIsPartitionKey(__v: _root_.scala.Boolean): FieldSchema = copy(isPartitionKey = __v)
    def withIsClusteringKey(__v: _root_.scala.Boolean): FieldSchema = copy(isClusteringKey = __v)
    def withNullable(__v: _root_.scala.Boolean): FieldSchema = copy(nullable = __v)
    def withIsFunctionOutput(__v: _root_.scala.Boolean): FieldSchema = copy(isFunctionOutput = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = fieldID
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = isPrimaryKey
          if (__t != false) __t else null
        }
        case 4 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = dataType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => typeParams
        case 7 => indexParams
        case 8 => {
          val __t = autoID
          if (__t != false) __t else null
        }
        case 9 => {
          val __t = state.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 10 => {
          val __t = elementType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 11 => defaultValue.orNull
        case 12 => {
          val __t = isDynamic
          if (__t != false) __t else null
        }
        case 13 => {
          val __t = isPartitionKey
          if (__t != false) __t else null
        }
        case 14 => {
          val __t = isClusteringKey
          if (__t != false) __t else null
        }
        case 15 => {
          val __t = nullable
          if (__t != false) __t else null
        }
        case 16 => {
          val __t = isFunctionOutput
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(fieldID)
        case 2 => _root_.scalapb.descriptors.PString(name)
        case 3 => _root_.scalapb.descriptors.PBoolean(isPrimaryKey)
        case 4 => _root_.scalapb.descriptors.PString(description)
        case 5 => _root_.scalapb.descriptors.PEnum(dataType.scalaValueDescriptor)
        case 6 => _root_.scalapb.descriptors.PRepeated(typeParams.iterator.map(_.toPMessage).toVector)
        case 7 => _root_.scalapb.descriptors.PRepeated(indexParams.iterator.map(_.toPMessage).toVector)
        case 8 => _root_.scalapb.descriptors.PBoolean(autoID)
        case 9 => _root_.scalapb.descriptors.PEnum(state.scalaValueDescriptor)
        case 10 => _root_.scalapb.descriptors.PEnum(elementType.scalaValueDescriptor)
        case 11 => defaultValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => _root_.scalapb.descriptors.PBoolean(isDynamic)
        case 13 => _root_.scalapb.descriptors.PBoolean(isPartitionKey)
        case 14 => _root_.scalapb.descriptors.PBoolean(isClusteringKey)
        case 15 => _root_.scalapb.descriptors.PBoolean(nullable)
        case 16 => _root_.scalapb.descriptors.PBoolean(isFunctionOutput)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.schema.FieldSchema.type = io.milvus.grpc.schema.FieldSchema
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.schema.FieldSchema])
}

object FieldSchema extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.schema.FieldSchema] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.schema.FieldSchema] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.schema.FieldSchema = {
    var __fieldID: _root_.scala.Long = 0L
    var __name: _root_.scala.Predef.String = ""
    var __isPrimaryKey: _root_.scala.Boolean = false
    var __description: _root_.scala.Predef.String = ""
    var __dataType: io.milvus.grpc.schema.DataType = io.milvus.grpc.schema.DataType.None
    val __typeParams: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair]
    val __indexParams: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair]
    var __autoID: _root_.scala.Boolean = false
    var __state: io.milvus.grpc.schema.FieldState = io.milvus.grpc.schema.FieldState.FieldCreated
    var __elementType: io.milvus.grpc.schema.DataType = io.milvus.grpc.schema.DataType.None
    var __defaultValue: _root_.scala.Option[io.milvus.grpc.schema.ValueField] = _root_.scala.None
    var __isDynamic: _root_.scala.Boolean = false
    var __isPartitionKey: _root_.scala.Boolean = false
    var __isClusteringKey: _root_.scala.Boolean = false
    var __nullable: _root_.scala.Boolean = false
    var __isFunctionOutput: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __fieldID = _input__.readInt64()
        case 18 =>
          __name = _input__.readStringRequireUtf8()
        case 24 =>
          __isPrimaryKey = _input__.readBool()
        case 34 =>
          __description = _input__.readStringRequireUtf8()
        case 40 =>
          __dataType = io.milvus.grpc.schema.DataType.fromValue(_input__.readEnum())
        case 50 =>
          __typeParams += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.KeyValuePair](_input__)
        case 58 =>
          __indexParams += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.KeyValuePair](_input__)
        case 64 =>
          __autoID = _input__.readBool()
        case 72 =>
          __state = io.milvus.grpc.schema.FieldState.fromValue(_input__.readEnum())
        case 80 =>
          __elementType = io.milvus.grpc.schema.DataType.fromValue(_input__.readEnum())
        case 90 =>
          __defaultValue = _root_.scala.Option(__defaultValue.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.schema.ValueField](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 96 =>
          __isDynamic = _input__.readBool()
        case 104 =>
          __isPartitionKey = _input__.readBool()
        case 112 =>
          __isClusteringKey = _input__.readBool()
        case 120 =>
          __nullable = _input__.readBool()
        case 128 =>
          __isFunctionOutput = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.schema.FieldSchema(
        fieldID = __fieldID,
        name = __name,
        isPrimaryKey = __isPrimaryKey,
        description = __description,
        dataType = __dataType,
        typeParams = __typeParams.result(),
        indexParams = __indexParams.result(),
        autoID = __autoID,
        state = __state,
        elementType = __elementType,
        defaultValue = __defaultValue,
        isDynamic = __isDynamic,
        isPartitionKey = __isPartitionKey,
        isClusteringKey = __isClusteringKey,
        nullable = __nullable,
        isFunctionOutput = __isFunctionOutput,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.schema.FieldSchema] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.schema.FieldSchema(
        fieldID = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        isPrimaryKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        dataType = io.milvus.grpc.schema.DataType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.schema.DataType.None.scalaValueDescriptor).number),
        typeParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]]).getOrElse(_root_.scala.Seq.empty),
        indexParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]]).getOrElse(_root_.scala.Seq.empty),
        autoID = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        state = io.milvus.grpc.schema.FieldState.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.schema.FieldState.FieldCreated.scalaValueDescriptor).number),
        elementType = io.milvus.grpc.schema.DataType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.schema.DataType.None.scalaValueDescriptor).number),
        defaultValue = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.schema.ValueField]]),
        isDynamic = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        isPartitionKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        isClusteringKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        nullable = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        isFunctionOutput = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.schema.SchemaProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.schema.SchemaProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = io.milvus.grpc.common.KeyValuePair
      case 7 => __out = io.milvus.grpc.common.KeyValuePair
      case 11 => __out = io.milvus.grpc.schema.ValueField
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => io.milvus.grpc.schema.DataType
      case 9 => io.milvus.grpc.schema.FieldState
      case 10 => io.milvus.grpc.schema.DataType
    }
  }
  lazy val defaultInstance = io.milvus.grpc.schema.FieldSchema(
    fieldID = 0L,
    name = "",
    isPrimaryKey = false,
    description = "",
    dataType = io.milvus.grpc.schema.DataType.None,
    typeParams = _root_.scala.Seq.empty,
    indexParams = _root_.scala.Seq.empty,
    autoID = false,
    state = io.milvus.grpc.schema.FieldState.FieldCreated,
    elementType = io.milvus.grpc.schema.DataType.None,
    defaultValue = _root_.scala.None,
    isDynamic = false,
    isPartitionKey = false,
    isClusteringKey = false,
    nullable = false,
    isFunctionOutput = false
  )
  implicit class FieldSchemaLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.FieldSchema]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.schema.FieldSchema](_l) {
    def fieldID: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.fieldID)((c_, f_) => c_.copy(fieldID = f_))
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def isPrimaryKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isPrimaryKey)((c_, f_) => c_.copy(isPrimaryKey = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def dataType: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.DataType] = field(_.dataType)((c_, f_) => c_.copy(dataType = f_))
    def typeParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]] = field(_.typeParams)((c_, f_) => c_.copy(typeParams = f_))
    def indexParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]] = field(_.indexParams)((c_, f_) => c_.copy(indexParams = f_))
    def autoID: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.autoID)((c_, f_) => c_.copy(autoID = f_))
    def state: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.FieldState] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def elementType: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.DataType] = field(_.elementType)((c_, f_) => c_.copy(elementType = f_))
    def defaultValue: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.ValueField] = field(_.getDefaultValue)((c_, f_) => c_.copy(defaultValue = _root_.scala.Option(f_)))
    def optionalDefaultValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.schema.ValueField]] = field(_.defaultValue)((c_, f_) => c_.copy(defaultValue = f_))
    def isDynamic: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isDynamic)((c_, f_) => c_.copy(isDynamic = f_))
    def isPartitionKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isPartitionKey)((c_, f_) => c_.copy(isPartitionKey = f_))
    def isClusteringKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isClusteringKey)((c_, f_) => c_.copy(isClusteringKey = f_))
    def nullable: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.nullable)((c_, f_) => c_.copy(nullable = f_))
    def isFunctionOutput: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isFunctionOutput)((c_, f_) => c_.copy(isFunctionOutput = f_))
  }
  final val FIELDID_FIELD_NUMBER = 1
  final val NAME_FIELD_NUMBER = 2
  final val IS_PRIMARY_KEY_FIELD_NUMBER = 3
  final val DESCRIPTION_FIELD_NUMBER = 4
  final val DATA_TYPE_FIELD_NUMBER = 5
  final val TYPE_PARAMS_FIELD_NUMBER = 6
  final val INDEX_PARAMS_FIELD_NUMBER = 7
  final val AUTOID_FIELD_NUMBER = 8
  final val STATE_FIELD_NUMBER = 9
  final val ELEMENT_TYPE_FIELD_NUMBER = 10
  final val DEFAULT_VALUE_FIELD_NUMBER = 11
  final val IS_DYNAMIC_FIELD_NUMBER = 12
  final val IS_PARTITION_KEY_FIELD_NUMBER = 13
  final val IS_CLUSTERING_KEY_FIELD_NUMBER = 14
  final val NULLABLE_FIELD_NUMBER = 15
  final val IS_FUNCTION_OUTPUT_FIELD_NUMBER = 16
  def of(
    fieldID: _root_.scala.Long,
    name: _root_.scala.Predef.String,
    isPrimaryKey: _root_.scala.Boolean,
    description: _root_.scala.Predef.String,
    dataType: io.milvus.grpc.schema.DataType,
    typeParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair],
    indexParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair],
    autoID: _root_.scala.Boolean,
    state: io.milvus.grpc.schema.FieldState,
    elementType: io.milvus.grpc.schema.DataType,
    defaultValue: _root_.scala.Option[io.milvus.grpc.schema.ValueField],
    isDynamic: _root_.scala.Boolean,
    isPartitionKey: _root_.scala.Boolean,
    isClusteringKey: _root_.scala.Boolean,
    nullable: _root_.scala.Boolean,
    isFunctionOutput: _root_.scala.Boolean
  ): _root_.io.milvus.grpc.schema.FieldSchema = _root_.io.milvus.grpc.schema.FieldSchema(
    fieldID,
    name,
    isPrimaryKey,
    description,
    dataType,
    typeParams,
    indexParams,
    autoID,
    state,
    elementType,
    defaultValue,
    isDynamic,
    isPartitionKey,
    isClusteringKey,
    nullable,
    isFunctionOutput
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.schema.FieldSchema])
}
