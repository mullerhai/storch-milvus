// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.schema

@SerialVersionUID(0L)
final case class DoubleArray(
    data: _root_.scala.Seq[_root_.scala.Double] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DoubleArray] {
    private[this] def dataSerializedSize = {
      8 * data.size
    }
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (data.nonEmpty) {
        val __localsize = dataSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      if (data.nonEmpty) {
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(dataSerializedSize)
        data.foreach(_output__.writeDoubleNoTag)
      };
      unknownFields.writeTo(_output__)
    }
    def clearData = copy(data = _root_.scala.Seq.empty)
    def addData(__vs: _root_.scala.Double *): DoubleArray = addAllData(__vs)
    def addAllData(__vs: Iterable[_root_.scala.Double]): DoubleArray = copy(data = data ++ __vs)
    def withData(__v: _root_.scala.Seq[_root_.scala.Double]): DoubleArray = copy(data = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => data
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(data.iterator.map(_root_.scalapb.descriptors.PDouble(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.schema.DoubleArray.type = io.milvus.grpc.schema.DoubleArray
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.schema.DoubleArray])
}

object DoubleArray extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.schema.DoubleArray] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.schema.DoubleArray] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.schema.DoubleArray = {
    val __data: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Double] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Double]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 9 =>
          __data += _input__.readDouble()
        case 10 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __data += _input__.readDouble()
          }
          _input__.popLimit(oldLimit)
        }
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.schema.DoubleArray(
        data = __data.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.schema.DoubleArray] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.schema.DoubleArray(
        data = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Double]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.schema.SchemaProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.schema.SchemaProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.milvus.grpc.schema.DoubleArray(
    data = _root_.scala.Seq.empty
  )
  implicit class DoubleArrayLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.DoubleArray]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.schema.DoubleArray](_l) {
    def data: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Double]] = field(_.data)((c_, f_) => c_.copy(data = f_))
  }
  final val DATA_FIELD_NUMBER = 1
  def of(
    data: _root_.scala.Seq[_root_.scala.Double]
  ): _root_.io.milvus.grpc.schema.DoubleArray = _root_.io.milvus.grpc.schema.DoubleArray(
    data
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.schema.DoubleArray])
}
