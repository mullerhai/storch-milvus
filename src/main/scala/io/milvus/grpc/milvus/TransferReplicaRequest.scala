// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

/** transfer `replicaNum` replicas in `collectionID` from `source_resource_group` to `target_resource_group`
  */
@SerialVersionUID(0L)
final case class TransferReplicaRequest(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None,
    sourceResourceGroup: _root_.scala.Predef.String = "",
    targetResourceGroup: _root_.scala.Predef.String = "",
    collectionName: _root_.scala.Predef.String = "",
    numReplica: _root_.scala.Long = 0L,
    dbName: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[TransferReplicaRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (base.isDefined) {
        val __value = base.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = sourceResourceGroup
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = targetResourceGroup
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = collectionName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = numReplica
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, __value)
        }
      };
      
      {
        val __value = dbName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      base.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = sourceResourceGroup
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = targetResourceGroup
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = collectionName
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = numReplica
        if (__v != 0L) {
          _output__.writeInt64(5, __v)
        }
      };
      {
        val __v = dbName
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getBase: io.milvus.grpc.common.MsgBase = base.getOrElse(io.milvus.grpc.common.MsgBase.defaultInstance)
    def clearBase: TransferReplicaRequest = copy(base = _root_.scala.None)
    def withBase(__v: io.milvus.grpc.common.MsgBase): TransferReplicaRequest = copy(base = Option(__v))
    def withSourceResourceGroup(__v: _root_.scala.Predef.String): TransferReplicaRequest = copy(sourceResourceGroup = __v)
    def withTargetResourceGroup(__v: _root_.scala.Predef.String): TransferReplicaRequest = copy(targetResourceGroup = __v)
    def withCollectionName(__v: _root_.scala.Predef.String): TransferReplicaRequest = copy(collectionName = __v)
    def withNumReplica(__v: _root_.scala.Long): TransferReplicaRequest = copy(numReplica = __v)
    def withDbName(__v: _root_.scala.Predef.String): TransferReplicaRequest = copy(dbName = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => base.orNull
        case 2 => {
          val __t = sourceResourceGroup
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = targetResourceGroup
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = collectionName
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = numReplica
          if (__t != 0L) __t else null
        }
        case 6 => {
          val __t = dbName
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => base.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(sourceResourceGroup)
        case 3 => _root_.scalapb.descriptors.PString(targetResourceGroup)
        case 4 => _root_.scalapb.descriptors.PString(collectionName)
        case 5 => _root_.scalapb.descriptors.PLong(numReplica)
        case 6 => _root_.scalapb.descriptors.PString(dbName)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.TransferReplicaRequest.type = io.milvus.grpc.milvus.TransferReplicaRequest
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.TransferReplicaRequest])
}

object TransferReplicaRequest extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.TransferReplicaRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.TransferReplicaRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.TransferReplicaRequest = {
    var __base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None
    var __sourceResourceGroup: _root_.scala.Predef.String = ""
    var __targetResourceGroup: _root_.scala.Predef.String = ""
    var __collectionName: _root_.scala.Predef.String = ""
    var __numReplica: _root_.scala.Long = 0L
    var __dbName: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __base = _root_.scala.Option(__base.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.MsgBase](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __sourceResourceGroup = _input__.readStringRequireUtf8()
        case 26 =>
          __targetResourceGroup = _input__.readStringRequireUtf8()
        case 34 =>
          __collectionName = _input__.readStringRequireUtf8()
        case 40 =>
          __numReplica = _input__.readInt64()
        case 50 =>
          __dbName = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.TransferReplicaRequest(
        base = __base,
        sourceResourceGroup = __sourceResourceGroup,
        targetResourceGroup = __targetResourceGroup,
        collectionName = __collectionName,
        numReplica = __numReplica,
        dbName = __dbName,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.TransferReplicaRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.TransferReplicaRequest(
        base = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.common.MsgBase]]),
        sourceResourceGroup = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        targetResourceGroup = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        collectionName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        numReplica = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        dbName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(156)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(156)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.milvus.grpc.common.MsgBase
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.milvus.grpc.milvus.TransferReplicaRequest(
    base = _root_.scala.None,
    sourceResourceGroup = "",
    targetResourceGroup = "",
    collectionName = "",
    numReplica = 0L,
    dbName = ""
  )
  implicit class TransferReplicaRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.TransferReplicaRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.TransferReplicaRequest](_l) {
    def base: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.MsgBase] = field(_.getBase)((c_, f_) => c_.copy(base = _root_.scala.Option(f_)))
    def optionalBase: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.common.MsgBase]] = field(_.base)((c_, f_) => c_.copy(base = f_))
    def sourceResourceGroup: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sourceResourceGroup)((c_, f_) => c_.copy(sourceResourceGroup = f_))
    def targetResourceGroup: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.targetResourceGroup)((c_, f_) => c_.copy(targetResourceGroup = f_))
    def collectionName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.collectionName)((c_, f_) => c_.copy(collectionName = f_))
    def numReplica: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.numReplica)((c_, f_) => c_.copy(numReplica = f_))
    def dbName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.dbName)((c_, f_) => c_.copy(dbName = f_))
  }
  final val BASE_FIELD_NUMBER = 1
  final val SOURCE_RESOURCE_GROUP_FIELD_NUMBER = 2
  final val TARGET_RESOURCE_GROUP_FIELD_NUMBER = 3
  final val COLLECTION_NAME_FIELD_NUMBER = 4
  final val NUM_REPLICA_FIELD_NUMBER = 5
  final val DB_NAME_FIELD_NUMBER = 6
  def of(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase],
    sourceResourceGroup: _root_.scala.Predef.String,
    targetResourceGroup: _root_.scala.Predef.String,
    collectionName: _root_.scala.Predef.String,
    numReplica: _root_.scala.Long,
    dbName: _root_.scala.Predef.String
  ): _root_.io.milvus.grpc.milvus.TransferReplicaRequest = _root_.io.milvus.grpc.milvus.TransferReplicaRequest(
    base,
    sourceResourceGroup,
    targetResourceGroup,
    collectionName,
    numReplica,
    dbName
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.TransferReplicaRequest])
}
