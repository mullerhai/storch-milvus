// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

@SerialVersionUID(0L)
final case class QueryCursor(
    sessionTs: _root_.scala.Long = 0L,
    cursorPk: io.milvus.grpc.milvus.QueryCursor.CursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[QueryCursor] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = sessionTs
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      if (cursorPk.strPk.isDefined) {
        val __value = cursorPk.strPk.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      };
      if (cursorPk.intPk.isDefined) {
        val __value = cursorPk.intPk.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = sessionTs
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      cursorPk.strPk.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      cursorPk.intPk.foreach { __v =>
        val __m = __v
        _output__.writeInt64(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withSessionTs(__v: _root_.scala.Long): QueryCursor = copy(sessionTs = __v)
    def getStrPk: _root_.scala.Predef.String = cursorPk.strPk.getOrElse("")
    def withStrPk(__v: _root_.scala.Predef.String): QueryCursor = copy(cursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.StrPk(__v))
    def getIntPk: _root_.scala.Long = cursorPk.intPk.getOrElse(0L)
    def withIntPk(__v: _root_.scala.Long): QueryCursor = copy(cursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.IntPk(__v))
    def clearCursorPk: QueryCursor = copy(cursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.Empty)
    def withCursorPk(__v: io.milvus.grpc.milvus.QueryCursor.CursorPk): QueryCursor = copy(cursorPk = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = sessionTs
          if (__t != 0L) __t else null
        }
        case 2 => cursorPk.strPk.orNull
        case 3 => cursorPk.intPk.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(sessionTs)
        case 2 => cursorPk.strPk.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => cursorPk.intPk.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.QueryCursor.type = io.milvus.grpc.milvus.QueryCursor
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.QueryCursor])
}

object QueryCursor extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.QueryCursor] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.QueryCursor] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.QueryCursor = {
    var __sessionTs: _root_.scala.Long = 0L
    var __cursorPk: io.milvus.grpc.milvus.QueryCursor.CursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __sessionTs = _input__.readUInt64()
        case 18 =>
          __cursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.StrPk(_input__.readStringRequireUtf8())
        case 24 =>
          __cursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.IntPk(_input__.readInt64())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.QueryCursor(
        sessionTs = __sessionTs,
        cursorPk = __cursorPk,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.QueryCursor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.QueryCursor(
        sessionTs = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        cursorPk = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(io.milvus.grpc.milvus.QueryCursor.CursorPk.StrPk(_))
            .orElse[io.milvus.grpc.milvus.QueryCursor.CursorPk](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]).map(io.milvus.grpc.milvus.QueryCursor.CursorPk.IntPk(_)))
            .getOrElse(io.milvus.grpc.milvus.QueryCursor.CursorPk.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(63)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(63)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.milvus.grpc.milvus.QueryCursor(
    sessionTs = 0L,
    cursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.Empty
  )
  sealed abstract class CursorPk extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isStrPk: _root_.scala.Boolean = false
    def isIntPk: _root_.scala.Boolean = false
    def strPk: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def intPk: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
  }
  object CursorPk {
    @SerialVersionUID(0L)
    case object Empty extends io.milvus.grpc.milvus.QueryCursor.CursorPk {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class StrPk(value: _root_.scala.Predef.String) extends io.milvus.grpc.milvus.QueryCursor.CursorPk {
      type ValueType = _root_.scala.Predef.String
      override def isStrPk: _root_.scala.Boolean = true
      override def strPk: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class IntPk(value: _root_.scala.Long) extends io.milvus.grpc.milvus.QueryCursor.CursorPk {
      type ValueType = _root_.scala.Long
      override def isIntPk: _root_.scala.Boolean = true
      override def intPk: _root_.scala.Option[_root_.scala.Long] = Some(value)
      override def number: _root_.scala.Int = 3
    }
  }
  implicit class QueryCursorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.QueryCursor]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.QueryCursor](_l) {
    def sessionTs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.sessionTs)((c_, f_) => c_.copy(sessionTs = f_))
    def strPk: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getStrPk)((c_, f_) => c_.copy(cursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.StrPk(f_)))
    def intPk: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getIntPk)((c_, f_) => c_.copy(cursorPk = io.milvus.grpc.milvus.QueryCursor.CursorPk.IntPk(f_)))
    def cursorPk: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.QueryCursor.CursorPk] = field(_.cursorPk)((c_, f_) => c_.copy(cursorPk = f_))
  }
  final val SESSION_TS_FIELD_NUMBER = 1
  final val STR_PK_FIELD_NUMBER = 2
  final val INT_PK_FIELD_NUMBER = 3
  def of(
    sessionTs: _root_.scala.Long,
    cursorPk: io.milvus.grpc.milvus.QueryCursor.CursorPk
  ): _root_.io.milvus.grpc.milvus.QueryCursor = _root_.io.milvus.grpc.milvus.QueryCursor(
    sessionTs,
    cursorPk
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.QueryCursor])
}
