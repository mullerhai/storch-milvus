// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

@SerialVersionUID(0L)
final case class FileResourceInfo(
    id: _root_.scala.Long = 0L,
    name: _root_.scala.Predef.String = "",
    path: _root_.scala.Predef.String = "",
    `type`: io.milvus.grpc.common.FileResourceType = io.milvus.grpc.common.FileResourceType.ANALYZER_DICTIONARY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FileResourceInfo] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = path
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = `type`.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = path
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = `type`.value
        if (__v != 0) {
          _output__.writeEnum(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Long): FileResourceInfo = copy(id = __v)
    def withName(__v: _root_.scala.Predef.String): FileResourceInfo = copy(name = __v)
    def withPath(__v: _root_.scala.Predef.String): FileResourceInfo = copy(path = __v)
    def withType(__v: io.milvus.grpc.common.FileResourceType): FileResourceInfo = copy(`type` = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = path
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(id)
        case 2 => _root_.scalapb.descriptors.PString(name)
        case 3 => _root_.scalapb.descriptors.PString(path)
        case 4 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.FileResourceInfo.type = io.milvus.grpc.milvus.FileResourceInfo
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.FileResourceInfo])
}

object FileResourceInfo extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.FileResourceInfo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.FileResourceInfo] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.FileResourceInfo = {
    var __id: _root_.scala.Long = 0L
    var __name: _root_.scala.Predef.String = ""
    var __path: _root_.scala.Predef.String = ""
    var __type: io.milvus.grpc.common.FileResourceType = io.milvus.grpc.common.FileResourceType.ANALYZER_DICTIONARY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __id = _input__.readInt64()
        case 18 =>
          __name = _input__.readStringRequireUtf8()
        case 26 =>
          __path = _input__.readStringRequireUtf8()
        case 32 =>
          __type = io.milvus.grpc.common.FileResourceType.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.FileResourceInfo(
        id = __id,
        name = __name,
        path = __path,
        `type` = __type,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.FileResourceInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.FileResourceInfo(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        path = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        `type` = io.milvus.grpc.common.FileResourceType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.FileResourceType.ANALYZER_DICTIONARY.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(185)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(185)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => io.milvus.grpc.common.FileResourceType
    }
  }
  lazy val defaultInstance = io.milvus.grpc.milvus.FileResourceInfo(
    id = 0L,
    name = "",
    path = "",
    `type` = io.milvus.grpc.common.FileResourceType.ANALYZER_DICTIONARY
  )
  implicit class FileResourceInfoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.FileResourceInfo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.FileResourceInfo](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def path: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.path)((c_, f_) => c_.copy(path = f_))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.FileResourceType] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val NAME_FIELD_NUMBER = 2
  final val PATH_FIELD_NUMBER = 3
  final val TYPE_FIELD_NUMBER = 4
  def of(
    id: _root_.scala.Long,
    name: _root_.scala.Predef.String,
    path: _root_.scala.Predef.String,
    `type`: io.milvus.grpc.common.FileResourceType
  ): _root_.io.milvus.grpc.milvus.FileResourceInfo = _root_.io.milvus.grpc.milvus.FileResourceInfo(
    id,
    name,
    path,
    `type`
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.FileResourceInfo])
}
