// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

@SerialVersionUID(0L)
final case class RowPolicy(
    policyName: _root_.scala.Predef.String = "",
    actions: _root_.scala.Seq[io.milvus.grpc.milvus.RowPolicyAction] = _root_.scala.Seq.empty,
    roles: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    usingExpr: _root_.scala.Predef.String = "",
    checkExpr: _root_.scala.Predef.String = "",
    description: _root_.scala.Predef.String = "",
    createdAt: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RowPolicy] {
    private[this] def actionsSerializedSize = {
      if (__actionsSerializedSizeField == 0) __actionsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        actions.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
        __s
      }
      __actionsSerializedSizeField
    }
    @transient private[this] var __actionsSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = policyName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (actions.nonEmpty) {
        val __localsize = actionsSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      roles.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      
      {
        val __value = usingExpr
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = checkExpr
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = createdAt
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = policyName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      if (actions.nonEmpty) {
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(actionsSerializedSize)
        actions.foreach((_output__.writeEnumNoTag _).compose((_: io.milvus.grpc.milvus.RowPolicyAction).value))
      };
      roles.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      {
        val __v = usingExpr
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = checkExpr
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = createdAt
        if (__v != 0L) {
          _output__.writeInt64(7, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withPolicyName(__v: _root_.scala.Predef.String): RowPolicy = copy(policyName = __v)
    def clearActions = copy(actions = _root_.scala.Seq.empty)
    def addActions(__vs: io.milvus.grpc.milvus.RowPolicyAction *): RowPolicy = addAllActions(__vs)
    def addAllActions(__vs: Iterable[io.milvus.grpc.milvus.RowPolicyAction]): RowPolicy = copy(actions = actions ++ __vs)
    def withActions(__v: _root_.scala.Seq[io.milvus.grpc.milvus.RowPolicyAction]): RowPolicy = copy(actions = __v)
    def clearRoles = copy(roles = _root_.scala.Seq.empty)
    def addRoles(__vs: _root_.scala.Predef.String *): RowPolicy = addAllRoles(__vs)
    def addAllRoles(__vs: Iterable[_root_.scala.Predef.String]): RowPolicy = copy(roles = roles ++ __vs)
    def withRoles(__v: _root_.scala.Seq[_root_.scala.Predef.String]): RowPolicy = copy(roles = __v)
    def withUsingExpr(__v: _root_.scala.Predef.String): RowPolicy = copy(usingExpr = __v)
    def withCheckExpr(__v: _root_.scala.Predef.String): RowPolicy = copy(checkExpr = __v)
    def withDescription(__v: _root_.scala.Predef.String): RowPolicy = copy(description = __v)
    def withCreatedAt(__v: _root_.scala.Long): RowPolicy = copy(createdAt = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = policyName
          if (__t != "") __t else null
        }
        case 2 => actions.iterator.map(_.javaValueDescriptor).toSeq
        case 3 => roles
        case 4 => {
          val __t = usingExpr
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = checkExpr
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = createdAt
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(policyName)
        case 2 => _root_.scalapb.descriptors.PRepeated(actions.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(roles.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 4 => _root_.scalapb.descriptors.PString(usingExpr)
        case 5 => _root_.scalapb.descriptors.PString(checkExpr)
        case 6 => _root_.scalapb.descriptors.PString(description)
        case 7 => _root_.scalapb.descriptors.PLong(createdAt)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.RowPolicy.type = io.milvus.grpc.milvus.RowPolicy
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.RowPolicy])
}

object RowPolicy extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.RowPolicy] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.RowPolicy] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.RowPolicy = {
    var __policyName: _root_.scala.Predef.String = ""
    val __actions: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.milvus.RowPolicyAction] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.milvus.RowPolicyAction]
    val __roles: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __usingExpr: _root_.scala.Predef.String = ""
    var __checkExpr: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Predef.String = ""
    var __createdAt: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __policyName = _input__.readStringRequireUtf8()
        case 16 =>
          __actions += io.milvus.grpc.milvus.RowPolicyAction.fromValue(_input__.readEnum())
        case 18 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __actions += io.milvus.grpc.milvus.RowPolicyAction.fromValue(_input__.readEnum())
          }
          _input__.popLimit(oldLimit)
        }
        case 26 =>
          __roles += _input__.readStringRequireUtf8()
        case 34 =>
          __usingExpr = _input__.readStringRequireUtf8()
        case 42 =>
          __checkExpr = _input__.readStringRequireUtf8()
        case 50 =>
          __description = _input__.readStringRequireUtf8()
        case 56 =>
          __createdAt = _input__.readInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.RowPolicy(
        policyName = __policyName,
        actions = __actions.result(),
        roles = __roles.result(),
        usingExpr = __usingExpr,
        checkExpr = __checkExpr,
        description = __description,
        createdAt = __createdAt,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.RowPolicy] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.RowPolicy(
        policyName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        actions = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => io.milvus.grpc.milvus.RowPolicyAction.fromValue(__e.number)).toSeq,
        roles = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        usingExpr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        checkExpr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        createdAt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(199)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(199)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => io.milvus.grpc.milvus.RowPolicyAction
    }
  }
  lazy val defaultInstance = io.milvus.grpc.milvus.RowPolicy(
    policyName = "",
    actions = _root_.scala.Seq.empty,
    roles = _root_.scala.Seq.empty,
    usingExpr = "",
    checkExpr = "",
    description = "",
    createdAt = 0L
  )
  implicit class RowPolicyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.RowPolicy]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.RowPolicy](_l) {
    def policyName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.policyName)((c_, f_) => c_.copy(policyName = f_))
    def actions: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.milvus.RowPolicyAction]] = field(_.actions)((c_, f_) => c_.copy(actions = f_))
    def roles: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.roles)((c_, f_) => c_.copy(roles = f_))
    def usingExpr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.usingExpr)((c_, f_) => c_.copy(usingExpr = f_))
    def checkExpr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.checkExpr)((c_, f_) => c_.copy(checkExpr = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def createdAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.createdAt)((c_, f_) => c_.copy(createdAt = f_))
  }
  final val POLICY_NAME_FIELD_NUMBER = 1
  final val ACTIONS_FIELD_NUMBER = 2
  final val ROLES_FIELD_NUMBER = 3
  final val USING_EXPR_FIELD_NUMBER = 4
  final val CHECK_EXPR_FIELD_NUMBER = 5
  final val DESCRIPTION_FIELD_NUMBER = 6
  final val CREATED_AT_FIELD_NUMBER = 7
  def of(
    policyName: _root_.scala.Predef.String,
    actions: _root_.scala.Seq[io.milvus.grpc.milvus.RowPolicyAction],
    roles: _root_.scala.Seq[_root_.scala.Predef.String],
    usingExpr: _root_.scala.Predef.String,
    checkExpr: _root_.scala.Predef.String,
    description: _root_.scala.Predef.String,
    createdAt: _root_.scala.Long
  ): _root_.io.milvus.grpc.milvus.RowPolicy = _root_.io.milvus.grpc.milvus.RowPolicy(
    policyName,
    actions,
    roles,
    usingExpr,
    checkExpr,
    description,
    createdAt
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.RowPolicy])
}
