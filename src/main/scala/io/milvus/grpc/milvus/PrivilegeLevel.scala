// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

sealed abstract class PrivilegeLevel(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.milvus.PrivilegeLevel
  type RecognizedType = io.milvus.grpc.milvus.PrivilegeLevel.Recognized
  def isCluster: _root_.scala.Boolean = false
  def isDatabase: _root_.scala.Boolean = false
  def isCollection: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[PrivilegeLevel] = io.milvus.grpc.milvus.PrivilegeLevel
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.milvus.PrivilegeLevel.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.milvus.PrivilegeLevel.Recognized])
}

object PrivilegeLevel extends _root_.scalapb.GeneratedEnumCompanion[PrivilegeLevel] {
  sealed trait Recognized extends PrivilegeLevel
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[PrivilegeLevel] = this
  
  @SerialVersionUID(0L)
  case object Cluster extends PrivilegeLevel(0) with PrivilegeLevel.Recognized {
    val index = 0
    val name = "Cluster"
    override def isCluster: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Database extends PrivilegeLevel(1) with PrivilegeLevel.Recognized {
    val index = 1
    val name = "Database"
    override def isDatabase: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object Collection extends PrivilegeLevel(2) with PrivilegeLevel.Recognized {
    val index = 2
    val name = "Collection"
    override def isCollection: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends PrivilegeLevel(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(Cluster, Database, Collection)
  def fromValue(__value: _root_.scala.Int): PrivilegeLevel = __value match {
    case 0 => Cluster
    case 1 => Database
    case 2 => Collection
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getEnumTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.enums(3)
}