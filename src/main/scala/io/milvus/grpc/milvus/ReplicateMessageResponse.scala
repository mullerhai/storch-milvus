// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

@SerialVersionUID(0L)
final case class ReplicateMessageResponse(
    status: _root_.scala.Option[io.milvus.grpc.common.Status] = _root_.scala.None,
    position: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ReplicateMessageResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (status.isDefined) {
        val __value = status.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = position
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      status.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = position
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getStatus: io.milvus.grpc.common.Status = status.getOrElse(io.milvus.grpc.common.Status.defaultInstance)
    def clearStatus: ReplicateMessageResponse = copy(status = _root_.scala.None)
    def withStatus(__v: io.milvus.grpc.common.Status): ReplicateMessageResponse = copy(status = Option(__v))
    def withPosition(__v: _root_.scala.Predef.String): ReplicateMessageResponse = copy(position = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => status.orNull
        case 2 => {
          val __t = position
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => status.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(position)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.ReplicateMessageResponse.type = io.milvus.grpc.milvus.ReplicateMessageResponse
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.ReplicateMessageResponse])
}

object ReplicateMessageResponse extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.ReplicateMessageResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.ReplicateMessageResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.ReplicateMessageResponse = {
    var __status: _root_.scala.Option[io.milvus.grpc.common.Status] = _root_.scala.None
    var __position: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __status = _root_.scala.Option(__status.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.Status](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __position = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.ReplicateMessageResponse(
        status = __status,
        position = __position,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.ReplicateMessageResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.ReplicateMessageResponse(
        status = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.common.Status]]),
        position = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(177)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(177)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.milvus.grpc.common.Status
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.milvus.grpc.milvus.ReplicateMessageResponse(
    status = _root_.scala.None,
    position = ""
  )
  implicit class ReplicateMessageResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.ReplicateMessageResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.ReplicateMessageResponse](_l) {
    def status: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.Status] = field(_.getStatus)((c_, f_) => c_.copy(status = _root_.scala.Option(f_)))
    def optionalStatus: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.common.Status]] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def position: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.position)((c_, f_) => c_.copy(position = f_))
  }
  final val STATUS_FIELD_NUMBER = 1
  final val POSITION_FIELD_NUMBER = 2
  def of(
    status: _root_.scala.Option[io.milvus.grpc.common.Status],
    position: _root_.scala.Predef.String
  ): _root_.io.milvus.grpc.milvus.ReplicateMessageResponse = _root_.io.milvus.grpc.milvus.ReplicateMessageResponse(
    status,
    position
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.ReplicateMessageResponse])
}
