// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

/** @param base
  *   must
  * @param collectionName
  *   must
  * @param partitionNames
  *   must
  * @param dsl
  *   must
  * @param placeholderGroup
  *   serialized `PlaceholderGroup`
  *   must
  * @param dslType
  *   must
  * @param searchParams
  *   must
  * @param guaranteeTimestamp
  *   guarantee_timestamp
  */
@SerialVersionUID(0L)
final case class SearchRequest(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None,
    dbName: _root_.scala.Predef.String = "",
    collectionName: _root_.scala.Predef.String = "",
    partitionNames: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    dsl: _root_.scala.Predef.String = "",
    placeholderGroup: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    dslType: io.milvus.grpc.common.DslType = io.milvus.grpc.common.DslType.Dsl,
    outputFields: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    searchParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair] = _root_.scala.Seq.empty,
    travelTimestamp: _root_.scala.Long = 0L,
    guaranteeTimestamp: _root_.scala.Long = 0L,
    nq: _root_.scala.Long = 0L,
    notReturnAllMeta: _root_.scala.Boolean = false,
    consistencyLevel: io.milvus.grpc.common.ConsistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong,
    useDefaultConsistency: _root_.scala.Boolean = false,
    searchByPrimaryKeys: _root_.scala.Boolean = false,
    subReqs: _root_.scala.Seq[io.milvus.grpc.milvus.SubSearchRequest] = _root_.scala.Seq.empty,
    exprTemplateValues: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue] = _root_.scala.collection.immutable.Map.empty,
    functionScore: _root_.scala.Option[io.milvus.grpc.schema.FunctionScore] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SearchRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (base.isDefined) {
        val __value = base.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = dbName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = collectionName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      partitionNames.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      }
      
      {
        val __value = dsl
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = placeholderGroup
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(6, __value)
        }
      };
      
      {
        val __value = dslType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(7, __value)
        }
      };
      outputFields.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
      }
      searchParams.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = travelTimestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(10, __value)
        }
      };
      
      {
        val __value = guaranteeTimestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(11, __value)
        }
      };
      
      {
        val __value = nq
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(12, __value)
        }
      };
      
      {
        val __value = notReturnAllMeta
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(13, __value)
        }
      };
      
      {
        val __value = consistencyLevel.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(14, __value)
        }
      };
      
      {
        val __value = useDefaultConsistency
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(15, __value)
        }
      };
      
      {
        val __value = searchByPrimaryKeys
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(16, __value)
        }
      };
      subReqs.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      exprTemplateValues.foreach { __item =>
        val __value = io.milvus.grpc.milvus.SearchRequest._typemapper_exprTemplateValues.toBase(__item)
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (functionScore.isDefined) {
        val __value = functionScore.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      base.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = dbName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = collectionName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      partitionNames.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      {
        val __v = dsl
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = placeholderGroup
        if (!__v.isEmpty) {
          _output__.writeBytes(6, __v)
        }
      };
      {
        val __v = dslType.value
        if (__v != 0) {
          _output__.writeEnum(7, __v)
        }
      };
      outputFields.foreach { __v =>
        val __m = __v
        _output__.writeString(8, __m)
      };
      searchParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = travelTimestamp
        if (__v != 0L) {
          _output__.writeUInt64(10, __v)
        }
      };
      {
        val __v = guaranteeTimestamp
        if (__v != 0L) {
          _output__.writeUInt64(11, __v)
        }
      };
      {
        val __v = nq
        if (__v != 0L) {
          _output__.writeInt64(12, __v)
        }
      };
      {
        val __v = notReturnAllMeta
        if (__v != false) {
          _output__.writeBool(13, __v)
        }
      };
      {
        val __v = consistencyLevel.value
        if (__v != 0) {
          _output__.writeEnum(14, __v)
        }
      };
      {
        val __v = useDefaultConsistency
        if (__v != false) {
          _output__.writeBool(15, __v)
        }
      };
      {
        val __v = searchByPrimaryKeys
        if (__v != false) {
          _output__.writeBool(16, __v)
        }
      };
      subReqs.foreach { __v =>
        val __m = __v
        _output__.writeTag(17, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprTemplateValues.foreach { __v =>
        val __m = io.milvus.grpc.milvus.SearchRequest._typemapper_exprTemplateValues.toBase(__v)
        _output__.writeTag(18, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      functionScore.foreach { __v =>
        val __m = __v
        _output__.writeTag(19, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getBase: io.milvus.grpc.common.MsgBase = base.getOrElse(io.milvus.grpc.common.MsgBase.defaultInstance)
    def clearBase: SearchRequest = copy(base = _root_.scala.None)
    def withBase(__v: io.milvus.grpc.common.MsgBase): SearchRequest = copy(base = Option(__v))
    def withDbName(__v: _root_.scala.Predef.String): SearchRequest = copy(dbName = __v)
    def withCollectionName(__v: _root_.scala.Predef.String): SearchRequest = copy(collectionName = __v)
    def clearPartitionNames = copy(partitionNames = _root_.scala.Seq.empty)
    def addPartitionNames(__vs: _root_.scala.Predef.String *): SearchRequest = addAllPartitionNames(__vs)
    def addAllPartitionNames(__vs: Iterable[_root_.scala.Predef.String]): SearchRequest = copy(partitionNames = partitionNames ++ __vs)
    def withPartitionNames(__v: _root_.scala.Seq[_root_.scala.Predef.String]): SearchRequest = copy(partitionNames = __v)
    def withDsl(__v: _root_.scala.Predef.String): SearchRequest = copy(dsl = __v)
    def withPlaceholderGroup(__v: _root_.com.google.protobuf.ByteString): SearchRequest = copy(placeholderGroup = __v)
    def withDslType(__v: io.milvus.grpc.common.DslType): SearchRequest = copy(dslType = __v)
    def clearOutputFields = copy(outputFields = _root_.scala.Seq.empty)
    def addOutputFields(__vs: _root_.scala.Predef.String *): SearchRequest = addAllOutputFields(__vs)
    def addAllOutputFields(__vs: Iterable[_root_.scala.Predef.String]): SearchRequest = copy(outputFields = outputFields ++ __vs)
    def withOutputFields(__v: _root_.scala.Seq[_root_.scala.Predef.String]): SearchRequest = copy(outputFields = __v)
    def clearSearchParams = copy(searchParams = _root_.scala.Seq.empty)
    def addSearchParams(__vs: io.milvus.grpc.common.KeyValuePair *): SearchRequest = addAllSearchParams(__vs)
    def addAllSearchParams(__vs: Iterable[io.milvus.grpc.common.KeyValuePair]): SearchRequest = copy(searchParams = searchParams ++ __vs)
    def withSearchParams(__v: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]): SearchRequest = copy(searchParams = __v)
    def withTravelTimestamp(__v: _root_.scala.Long): SearchRequest = copy(travelTimestamp = __v)
    def withGuaranteeTimestamp(__v: _root_.scala.Long): SearchRequest = copy(guaranteeTimestamp = __v)
    def withNq(__v: _root_.scala.Long): SearchRequest = copy(nq = __v)
    def withNotReturnAllMeta(__v: _root_.scala.Boolean): SearchRequest = copy(notReturnAllMeta = __v)
    def withConsistencyLevel(__v: io.milvus.grpc.common.ConsistencyLevel): SearchRequest = copy(consistencyLevel = __v)
    def withUseDefaultConsistency(__v: _root_.scala.Boolean): SearchRequest = copy(useDefaultConsistency = __v)
    def withSearchByPrimaryKeys(__v: _root_.scala.Boolean): SearchRequest = copy(searchByPrimaryKeys = __v)
    def clearSubReqs = copy(subReqs = _root_.scala.Seq.empty)
    def addSubReqs(__vs: io.milvus.grpc.milvus.SubSearchRequest *): SearchRequest = addAllSubReqs(__vs)
    def addAllSubReqs(__vs: Iterable[io.milvus.grpc.milvus.SubSearchRequest]): SearchRequest = copy(subReqs = subReqs ++ __vs)
    def withSubReqs(__v: _root_.scala.Seq[io.milvus.grpc.milvus.SubSearchRequest]): SearchRequest = copy(subReqs = __v)
    def clearExprTemplateValues = copy(exprTemplateValues = _root_.scala.collection.immutable.Map.empty)
    def addExprTemplateValues(__vs: (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue) *): SearchRequest = addAllExprTemplateValues(__vs)
    def addAllExprTemplateValues(__vs: Iterable[(_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)]): SearchRequest = copy(exprTemplateValues = exprTemplateValues ++ __vs)
    def withExprTemplateValues(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]): SearchRequest = copy(exprTemplateValues = __v)
    def getFunctionScore: io.milvus.grpc.schema.FunctionScore = functionScore.getOrElse(io.milvus.grpc.schema.FunctionScore.defaultInstance)
    def clearFunctionScore: SearchRequest = copy(functionScore = _root_.scala.None)
    def withFunctionScore(__v: io.milvus.grpc.schema.FunctionScore): SearchRequest = copy(functionScore = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => base.orNull
        case 2 => {
          val __t = dbName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = collectionName
          if (__t != "") __t else null
        }
        case 4 => partitionNames
        case 5 => {
          val __t = dsl
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = placeholderGroup
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 7 => {
          val __t = dslType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 8 => outputFields
        case 9 => searchParams
        case 10 => {
          val __t = travelTimestamp
          if (__t != 0L) __t else null
        }
        case 11 => {
          val __t = guaranteeTimestamp
          if (__t != 0L) __t else null
        }
        case 12 => {
          val __t = nq
          if (__t != 0L) __t else null
        }
        case 13 => {
          val __t = notReturnAllMeta
          if (__t != false) __t else null
        }
        case 14 => {
          val __t = consistencyLevel.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 15 => {
          val __t = useDefaultConsistency
          if (__t != false) __t else null
        }
        case 16 => {
          val __t = searchByPrimaryKeys
          if (__t != false) __t else null
        }
        case 17 => subReqs
        case 18 => exprTemplateValues.iterator.map(io.milvus.grpc.milvus.SearchRequest._typemapper_exprTemplateValues.toBase(_)).toSeq
        case 19 => functionScore.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => base.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(dbName)
        case 3 => _root_.scalapb.descriptors.PString(collectionName)
        case 4 => _root_.scalapb.descriptors.PRepeated(partitionNames.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 5 => _root_.scalapb.descriptors.PString(dsl)
        case 6 => _root_.scalapb.descriptors.PByteString(placeholderGroup)
        case 7 => _root_.scalapb.descriptors.PEnum(dslType.scalaValueDescriptor)
        case 8 => _root_.scalapb.descriptors.PRepeated(outputFields.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 9 => _root_.scalapb.descriptors.PRepeated(searchParams.iterator.map(_.toPMessage).toVector)
        case 10 => _root_.scalapb.descriptors.PLong(travelTimestamp)
        case 11 => _root_.scalapb.descriptors.PLong(guaranteeTimestamp)
        case 12 => _root_.scalapb.descriptors.PLong(nq)
        case 13 => _root_.scalapb.descriptors.PBoolean(notReturnAllMeta)
        case 14 => _root_.scalapb.descriptors.PEnum(consistencyLevel.scalaValueDescriptor)
        case 15 => _root_.scalapb.descriptors.PBoolean(useDefaultConsistency)
        case 16 => _root_.scalapb.descriptors.PBoolean(searchByPrimaryKeys)
        case 17 => _root_.scalapb.descriptors.PRepeated(subReqs.iterator.map(_.toPMessage).toVector)
        case 18 => _root_.scalapb.descriptors.PRepeated(exprTemplateValues.iterator.map(io.milvus.grpc.milvus.SearchRequest._typemapper_exprTemplateValues.toBase(_).toPMessage).toVector)
        case 19 => functionScore.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.SearchRequest.type = io.milvus.grpc.milvus.SearchRequest
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.SearchRequest])
}

object SearchRequest extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.SearchRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.SearchRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.SearchRequest = {
    var __base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None
    var __dbName: _root_.scala.Predef.String = ""
    var __collectionName: _root_.scala.Predef.String = ""
    val __partitionNames: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __dsl: _root_.scala.Predef.String = ""
    var __placeholderGroup: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __dslType: io.milvus.grpc.common.DslType = io.milvus.grpc.common.DslType.Dsl
    val __outputFields: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __searchParams: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair]
    var __travelTimestamp: _root_.scala.Long = 0L
    var __guaranteeTimestamp: _root_.scala.Long = 0L
    var __nq: _root_.scala.Long = 0L
    var __notReturnAllMeta: _root_.scala.Boolean = false
    var __consistencyLevel: io.milvus.grpc.common.ConsistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong
    var __useDefaultConsistency: _root_.scala.Boolean = false
    var __searchByPrimaryKeys: _root_.scala.Boolean = false
    val __subReqs: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.milvus.SubSearchRequest] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.milvus.SubSearchRequest]
    val __exprTemplateValues: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]
    var __functionScore: _root_.scala.Option[io.milvus.grpc.schema.FunctionScore] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __base = _root_.scala.Option(__base.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.MsgBase](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __dbName = _input__.readStringRequireUtf8()
        case 26 =>
          __collectionName = _input__.readStringRequireUtf8()
        case 34 =>
          __partitionNames += _input__.readStringRequireUtf8()
        case 42 =>
          __dsl = _input__.readStringRequireUtf8()
        case 50 =>
          __placeholderGroup = _input__.readBytes()
        case 56 =>
          __dslType = io.milvus.grpc.common.DslType.fromValue(_input__.readEnum())
        case 66 =>
          __outputFields += _input__.readStringRequireUtf8()
        case 74 =>
          __searchParams += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.KeyValuePair](_input__)
        case 80 =>
          __travelTimestamp = _input__.readUInt64()
        case 88 =>
          __guaranteeTimestamp = _input__.readUInt64()
        case 96 =>
          __nq = _input__.readInt64()
        case 104 =>
          __notReturnAllMeta = _input__.readBool()
        case 112 =>
          __consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.fromValue(_input__.readEnum())
        case 120 =>
          __useDefaultConsistency = _input__.readBool()
        case 128 =>
          __searchByPrimaryKeys = _input__.readBool()
        case 138 =>
          __subReqs += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.milvus.SubSearchRequest](_input__)
        case 146 =>
          __exprTemplateValues += io.milvus.grpc.milvus.SearchRequest._typemapper_exprTemplateValues.toCustom(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry](_input__))
        case 154 =>
          __functionScore = _root_.scala.Option(__functionScore.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.schema.FunctionScore](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.SearchRequest(
        base = __base,
        dbName = __dbName,
        collectionName = __collectionName,
        partitionNames = __partitionNames.result(),
        dsl = __dsl,
        placeholderGroup = __placeholderGroup,
        dslType = __dslType,
        outputFields = __outputFields.result(),
        searchParams = __searchParams.result(),
        travelTimestamp = __travelTimestamp,
        guaranteeTimestamp = __guaranteeTimestamp,
        nq = __nq,
        notReturnAllMeta = __notReturnAllMeta,
        consistencyLevel = __consistencyLevel,
        useDefaultConsistency = __useDefaultConsistency,
        searchByPrimaryKeys = __searchByPrimaryKeys,
        subReqs = __subReqs.result(),
        exprTemplateValues = __exprTemplateValues.result(),
        functionScore = __functionScore,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.SearchRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.SearchRequest(
        base = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.common.MsgBase]]),
        dbName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        collectionName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        partitionNames = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        dsl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        placeholderGroup = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        dslType = io.milvus.grpc.common.DslType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.DslType.Dsl.scalaValueDescriptor).number),
        outputFields = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        searchParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]]).getOrElse(_root_.scala.Seq.empty),
        travelTimestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        guaranteeTimestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        nq = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        notReturnAllMeta = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.ConsistencyLevel.Strong.scalaValueDescriptor).number),
        useDefaultConsistency = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        searchByPrimaryKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        subReqs = __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.milvus.SubSearchRequest]]).getOrElse(_root_.scala.Seq.empty),
        exprTemplateValues = __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(io.milvus.grpc.milvus.SearchRequest._typemapper_exprTemplateValues.toCustom(_)).toMap,
        functionScore = __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.schema.FunctionScore]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(55)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(55)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.milvus.grpc.common.MsgBase
      case 9 => __out = io.milvus.grpc.common.KeyValuePair
      case 17 => __out = io.milvus.grpc.milvus.SubSearchRequest
      case 18 => __out = io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry
      case 19 => __out = io.milvus.grpc.schema.FunctionScore
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      _root_.io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 7 => io.milvus.grpc.common.DslType
      case 14 => io.milvus.grpc.common.ConsistencyLevel
    }
  }
  lazy val defaultInstance = io.milvus.grpc.milvus.SearchRequest(
    base = _root_.scala.None,
    dbName = "",
    collectionName = "",
    partitionNames = _root_.scala.Seq.empty,
    dsl = "",
    placeholderGroup = _root_.com.google.protobuf.ByteString.EMPTY,
    dslType = io.milvus.grpc.common.DslType.Dsl,
    outputFields = _root_.scala.Seq.empty,
    searchParams = _root_.scala.Seq.empty,
    travelTimestamp = 0L,
    guaranteeTimestamp = 0L,
    nq = 0L,
    notReturnAllMeta = false,
    consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong,
    useDefaultConsistency = false,
    searchByPrimaryKeys = false,
    subReqs = _root_.scala.Seq.empty,
    exprTemplateValues = _root_.scala.collection.immutable.Map.empty,
    functionScore = _root_.scala.None
  )
  @SerialVersionUID(0L)
  final case class ExprTemplateValuesEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ExprTemplateValuesEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): ExprTemplateValuesEntry = copy(key = __v)
      def getValue: io.milvus.grpc.schema.TemplateValue = value.getOrElse(io.milvus.grpc.schema.TemplateValue.defaultInstance)
      def clearValue: ExprTemplateValuesEntry = copy(value = _root_.scala.None)
      def withValue(__v: io.milvus.grpc.schema.TemplateValue): ExprTemplateValuesEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry.type = io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry
      // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.SearchRequest.ExprTemplateValuesEntry])
  }
  
  object ExprTemplateValuesEntry extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.schema.TemplateValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.schema.TemplateValue]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.SearchRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.SearchRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = io.milvus.grpc.schema.TemplateValue
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class ExprTemplateValuesEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.TemplateValue] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.schema.TemplateValue]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)] =
      _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)](__m => (__m.key, __m.getValue))(__p => io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue]
    ): _root_.io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry = _root_.io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.SearchRequest.ExprTemplateValuesEntry])
  }
  
  implicit class SearchRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.SearchRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.SearchRequest](_l) {
    def base: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.MsgBase] = field(_.getBase)((c_, f_) => c_.copy(base = _root_.scala.Option(f_)))
    def optionalBase: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.common.MsgBase]] = field(_.base)((c_, f_) => c_.copy(base = f_))
    def dbName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.dbName)((c_, f_) => c_.copy(dbName = f_))
    def collectionName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.collectionName)((c_, f_) => c_.copy(collectionName = f_))
    def partitionNames: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.partitionNames)((c_, f_) => c_.copy(partitionNames = f_))
    def dsl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.dsl)((c_, f_) => c_.copy(dsl = f_))
    def placeholderGroup: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.placeholderGroup)((c_, f_) => c_.copy(placeholderGroup = f_))
    def dslType: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.DslType] = field(_.dslType)((c_, f_) => c_.copy(dslType = f_))
    def outputFields: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.outputFields)((c_, f_) => c_.copy(outputFields = f_))
    def searchParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]] = field(_.searchParams)((c_, f_) => c_.copy(searchParams = f_))
    def travelTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.travelTimestamp)((c_, f_) => c_.copy(travelTimestamp = f_))
    def guaranteeTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.guaranteeTimestamp)((c_, f_) => c_.copy(guaranteeTimestamp = f_))
    def nq: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.nq)((c_, f_) => c_.copy(nq = f_))
    def notReturnAllMeta: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.notReturnAllMeta)((c_, f_) => c_.copy(notReturnAllMeta = f_))
    def consistencyLevel: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.ConsistencyLevel] = field(_.consistencyLevel)((c_, f_) => c_.copy(consistencyLevel = f_))
    def useDefaultConsistency: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.useDefaultConsistency)((c_, f_) => c_.copy(useDefaultConsistency = f_))
    def searchByPrimaryKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.searchByPrimaryKeys)((c_, f_) => c_.copy(searchByPrimaryKeys = f_))
    def subReqs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.milvus.SubSearchRequest]] = field(_.subReqs)((c_, f_) => c_.copy(subReqs = f_))
    def exprTemplateValues: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]] = field(_.exprTemplateValues)((c_, f_) => c_.copy(exprTemplateValues = f_))
    def functionScore: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.FunctionScore] = field(_.getFunctionScore)((c_, f_) => c_.copy(functionScore = _root_.scala.Option(f_)))
    def optionalFunctionScore: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.schema.FunctionScore]] = field(_.functionScore)((c_, f_) => c_.copy(functionScore = f_))
  }
  final val BASE_FIELD_NUMBER = 1
  final val DB_NAME_FIELD_NUMBER = 2
  final val COLLECTION_NAME_FIELD_NUMBER = 3
  final val PARTITION_NAMES_FIELD_NUMBER = 4
  final val DSL_FIELD_NUMBER = 5
  final val PLACEHOLDER_GROUP_FIELD_NUMBER = 6
  final val DSL_TYPE_FIELD_NUMBER = 7
  final val OUTPUT_FIELDS_FIELD_NUMBER = 8
  final val SEARCH_PARAMS_FIELD_NUMBER = 9
  final val TRAVEL_TIMESTAMP_FIELD_NUMBER = 10
  final val GUARANTEE_TIMESTAMP_FIELD_NUMBER = 11
  final val NQ_FIELD_NUMBER = 12
  final val NOT_RETURN_ALL_META_FIELD_NUMBER = 13
  final val CONSISTENCY_LEVEL_FIELD_NUMBER = 14
  final val USE_DEFAULT_CONSISTENCY_FIELD_NUMBER = 15
  final val SEARCH_BY_PRIMARY_KEYS_FIELD_NUMBER = 16
  final val SUB_REQS_FIELD_NUMBER = 17
  final val EXPR_TEMPLATE_VALUES_FIELD_NUMBER = 18
  final val FUNCTION_SCORE_FIELD_NUMBER = 19
  @transient
  private[milvus] val _typemapper_exprTemplateValues: _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)] = implicitly[_root_.scalapb.TypeMapper[io.milvus.grpc.milvus.SearchRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)]]
  def of(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase],
    dbName: _root_.scala.Predef.String,
    collectionName: _root_.scala.Predef.String,
    partitionNames: _root_.scala.Seq[_root_.scala.Predef.String],
    dsl: _root_.scala.Predef.String,
    placeholderGroup: _root_.com.google.protobuf.ByteString,
    dslType: io.milvus.grpc.common.DslType,
    outputFields: _root_.scala.Seq[_root_.scala.Predef.String],
    searchParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair],
    travelTimestamp: _root_.scala.Long,
    guaranteeTimestamp: _root_.scala.Long,
    nq: _root_.scala.Long,
    notReturnAllMeta: _root_.scala.Boolean,
    consistencyLevel: io.milvus.grpc.common.ConsistencyLevel,
    useDefaultConsistency: _root_.scala.Boolean,
    searchByPrimaryKeys: _root_.scala.Boolean,
    subReqs: _root_.scala.Seq[io.milvus.grpc.milvus.SubSearchRequest],
    exprTemplateValues: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue],
    functionScore: _root_.scala.Option[io.milvus.grpc.schema.FunctionScore]
  ): _root_.io.milvus.grpc.milvus.SearchRequest = _root_.io.milvus.grpc.milvus.SearchRequest(
    base,
    dbName,
    collectionName,
    partitionNames,
    dsl,
    placeholderGroup,
    dslType,
    outputFields,
    searchParams,
    travelTimestamp,
    guaranteeTimestamp,
    nq,
    notReturnAllMeta,
    consistencyLevel,
    useDefaultConsistency,
    searchByPrimaryKeys,
    subReqs,
    exprTemplateValues,
    functionScore
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.SearchRequest])
}
