// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

/** @param base
  *   must
  * @param collectionName
  *   must
  * @param partitionNames
  *   must
  * @param rankParams
  *   must
  * @param guaranteeTimestamp
  *   guarantee_timestamp
  */
@SerialVersionUID(0L)
final case class HybridSearchRequest(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None,
    dbName: _root_.scala.Predef.String = "",
    collectionName: _root_.scala.Predef.String = "",
    partitionNames: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    requests: _root_.scala.Seq[io.milvus.grpc.milvus.SearchRequest] = _root_.scala.Seq.empty,
    rankParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair] = _root_.scala.Seq.empty,
    travelTimestamp: _root_.scala.Long = 0L,
    guaranteeTimestamp: _root_.scala.Long = 0L,
    notReturnAllMeta: _root_.scala.Boolean = false,
    outputFields: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    consistencyLevel: io.milvus.grpc.common.ConsistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong,
    useDefaultConsistency: _root_.scala.Boolean = false,
    functionScore: _root_.scala.Option[io.milvus.grpc.schema.FunctionScore] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[HybridSearchRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (base.isDefined) {
        val __value = base.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = dbName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = collectionName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      partitionNames.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      }
      requests.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      rankParams.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = travelTimestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(7, __value)
        }
      };
      
      {
        val __value = guaranteeTimestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(8, __value)
        }
      };
      
      {
        val __value = notReturnAllMeta
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(9, __value)
        }
      };
      outputFields.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
      }
      
      {
        val __value = consistencyLevel.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(11, __value)
        }
      };
      
      {
        val __value = useDefaultConsistency
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(12, __value)
        }
      };
      if (functionScore.isDefined) {
        val __value = functionScore.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      base.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = dbName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = collectionName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      partitionNames.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      requests.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      rankParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = travelTimestamp
        if (__v != 0L) {
          _output__.writeUInt64(7, __v)
        }
      };
      {
        val __v = guaranteeTimestamp
        if (__v != 0L) {
          _output__.writeUInt64(8, __v)
        }
      };
      {
        val __v = notReturnAllMeta
        if (__v != false) {
          _output__.writeBool(9, __v)
        }
      };
      outputFields.foreach { __v =>
        val __m = __v
        _output__.writeString(10, __m)
      };
      {
        val __v = consistencyLevel.value
        if (__v != 0) {
          _output__.writeEnum(11, __v)
        }
      };
      {
        val __v = useDefaultConsistency
        if (__v != false) {
          _output__.writeBool(12, __v)
        }
      };
      functionScore.foreach { __v =>
        val __m = __v
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getBase: io.milvus.grpc.common.MsgBase = base.getOrElse(io.milvus.grpc.common.MsgBase.defaultInstance)
    def clearBase: HybridSearchRequest = copy(base = _root_.scala.None)
    def withBase(__v: io.milvus.grpc.common.MsgBase): HybridSearchRequest = copy(base = Option(__v))
    def withDbName(__v: _root_.scala.Predef.String): HybridSearchRequest = copy(dbName = __v)
    def withCollectionName(__v: _root_.scala.Predef.String): HybridSearchRequest = copy(collectionName = __v)
    def clearPartitionNames = copy(partitionNames = _root_.scala.Seq.empty)
    def addPartitionNames(__vs: _root_.scala.Predef.String *): HybridSearchRequest = addAllPartitionNames(__vs)
    def addAllPartitionNames(__vs: Iterable[_root_.scala.Predef.String]): HybridSearchRequest = copy(partitionNames = partitionNames ++ __vs)
    def withPartitionNames(__v: _root_.scala.Seq[_root_.scala.Predef.String]): HybridSearchRequest = copy(partitionNames = __v)
    def clearRequests = copy(requests = _root_.scala.Seq.empty)
    def addRequests(__vs: io.milvus.grpc.milvus.SearchRequest *): HybridSearchRequest = addAllRequests(__vs)
    def addAllRequests(__vs: Iterable[io.milvus.grpc.milvus.SearchRequest]): HybridSearchRequest = copy(requests = requests ++ __vs)
    def withRequests(__v: _root_.scala.Seq[io.milvus.grpc.milvus.SearchRequest]): HybridSearchRequest = copy(requests = __v)
    def clearRankParams = copy(rankParams = _root_.scala.Seq.empty)
    def addRankParams(__vs: io.milvus.grpc.common.KeyValuePair *): HybridSearchRequest = addAllRankParams(__vs)
    def addAllRankParams(__vs: Iterable[io.milvus.grpc.common.KeyValuePair]): HybridSearchRequest = copy(rankParams = rankParams ++ __vs)
    def withRankParams(__v: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]): HybridSearchRequest = copy(rankParams = __v)
    def withTravelTimestamp(__v: _root_.scala.Long): HybridSearchRequest = copy(travelTimestamp = __v)
    def withGuaranteeTimestamp(__v: _root_.scala.Long): HybridSearchRequest = copy(guaranteeTimestamp = __v)
    def withNotReturnAllMeta(__v: _root_.scala.Boolean): HybridSearchRequest = copy(notReturnAllMeta = __v)
    def clearOutputFields = copy(outputFields = _root_.scala.Seq.empty)
    def addOutputFields(__vs: _root_.scala.Predef.String *): HybridSearchRequest = addAllOutputFields(__vs)
    def addAllOutputFields(__vs: Iterable[_root_.scala.Predef.String]): HybridSearchRequest = copy(outputFields = outputFields ++ __vs)
    def withOutputFields(__v: _root_.scala.Seq[_root_.scala.Predef.String]): HybridSearchRequest = copy(outputFields = __v)
    def withConsistencyLevel(__v: io.milvus.grpc.common.ConsistencyLevel): HybridSearchRequest = copy(consistencyLevel = __v)
    def withUseDefaultConsistency(__v: _root_.scala.Boolean): HybridSearchRequest = copy(useDefaultConsistency = __v)
    def getFunctionScore: io.milvus.grpc.schema.FunctionScore = functionScore.getOrElse(io.milvus.grpc.schema.FunctionScore.defaultInstance)
    def clearFunctionScore: HybridSearchRequest = copy(functionScore = _root_.scala.None)
    def withFunctionScore(__v: io.milvus.grpc.schema.FunctionScore): HybridSearchRequest = copy(functionScore = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => base.orNull
        case 2 => {
          val __t = dbName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = collectionName
          if (__t != "") __t else null
        }
        case 4 => partitionNames
        case 5 => requests
        case 6 => rankParams
        case 7 => {
          val __t = travelTimestamp
          if (__t != 0L) __t else null
        }
        case 8 => {
          val __t = guaranteeTimestamp
          if (__t != 0L) __t else null
        }
        case 9 => {
          val __t = notReturnAllMeta
          if (__t != false) __t else null
        }
        case 10 => outputFields
        case 11 => {
          val __t = consistencyLevel.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 12 => {
          val __t = useDefaultConsistency
          if (__t != false) __t else null
        }
        case 13 => functionScore.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => base.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(dbName)
        case 3 => _root_.scalapb.descriptors.PString(collectionName)
        case 4 => _root_.scalapb.descriptors.PRepeated(partitionNames.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 5 => _root_.scalapb.descriptors.PRepeated(requests.iterator.map(_.toPMessage).toVector)
        case 6 => _root_.scalapb.descriptors.PRepeated(rankParams.iterator.map(_.toPMessage).toVector)
        case 7 => _root_.scalapb.descriptors.PLong(travelTimestamp)
        case 8 => _root_.scalapb.descriptors.PLong(guaranteeTimestamp)
        case 9 => _root_.scalapb.descriptors.PBoolean(notReturnAllMeta)
        case 10 => _root_.scalapb.descriptors.PRepeated(outputFields.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 11 => _root_.scalapb.descriptors.PEnum(consistencyLevel.scalaValueDescriptor)
        case 12 => _root_.scalapb.descriptors.PBoolean(useDefaultConsistency)
        case 13 => functionScore.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.HybridSearchRequest.type = io.milvus.grpc.milvus.HybridSearchRequest
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.HybridSearchRequest])
}

object HybridSearchRequest extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.HybridSearchRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.HybridSearchRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.HybridSearchRequest = {
    var __base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None
    var __dbName: _root_.scala.Predef.String = ""
    var __collectionName: _root_.scala.Predef.String = ""
    val __partitionNames: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __requests: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.milvus.SearchRequest] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.milvus.SearchRequest]
    val __rankParams: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair]
    var __travelTimestamp: _root_.scala.Long = 0L
    var __guaranteeTimestamp: _root_.scala.Long = 0L
    var __notReturnAllMeta: _root_.scala.Boolean = false
    val __outputFields: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __consistencyLevel: io.milvus.grpc.common.ConsistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong
    var __useDefaultConsistency: _root_.scala.Boolean = false
    var __functionScore: _root_.scala.Option[io.milvus.grpc.schema.FunctionScore] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __base = _root_.scala.Option(__base.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.MsgBase](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __dbName = _input__.readStringRequireUtf8()
        case 26 =>
          __collectionName = _input__.readStringRequireUtf8()
        case 34 =>
          __partitionNames += _input__.readStringRequireUtf8()
        case 42 =>
          __requests += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.milvus.SearchRequest](_input__)
        case 50 =>
          __rankParams += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.KeyValuePair](_input__)
        case 56 =>
          __travelTimestamp = _input__.readUInt64()
        case 64 =>
          __guaranteeTimestamp = _input__.readUInt64()
        case 72 =>
          __notReturnAllMeta = _input__.readBool()
        case 82 =>
          __outputFields += _input__.readStringRequireUtf8()
        case 88 =>
          __consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.fromValue(_input__.readEnum())
        case 96 =>
          __useDefaultConsistency = _input__.readBool()
        case 106 =>
          __functionScore = _root_.scala.Option(__functionScore.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.schema.FunctionScore](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.HybridSearchRequest(
        base = __base,
        dbName = __dbName,
        collectionName = __collectionName,
        partitionNames = __partitionNames.result(),
        requests = __requests.result(),
        rankParams = __rankParams.result(),
        travelTimestamp = __travelTimestamp,
        guaranteeTimestamp = __guaranteeTimestamp,
        notReturnAllMeta = __notReturnAllMeta,
        outputFields = __outputFields.result(),
        consistencyLevel = __consistencyLevel,
        useDefaultConsistency = __useDefaultConsistency,
        functionScore = __functionScore,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.HybridSearchRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.HybridSearchRequest(
        base = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.common.MsgBase]]),
        dbName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        collectionName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        partitionNames = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        requests = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.milvus.SearchRequest]]).getOrElse(_root_.scala.Seq.empty),
        rankParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]]).getOrElse(_root_.scala.Seq.empty),
        travelTimestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        guaranteeTimestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        notReturnAllMeta = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        outputFields = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.ConsistencyLevel.Strong.scalaValueDescriptor).number),
        useDefaultConsistency = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        functionScore = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.schema.FunctionScore]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(58)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(58)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.milvus.grpc.common.MsgBase
      case 5 => __out = io.milvus.grpc.milvus.SearchRequest
      case 6 => __out = io.milvus.grpc.common.KeyValuePair
      case 13 => __out = io.milvus.grpc.schema.FunctionScore
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 11 => io.milvus.grpc.common.ConsistencyLevel
    }
  }
  lazy val defaultInstance = io.milvus.grpc.milvus.HybridSearchRequest(
    base = _root_.scala.None,
    dbName = "",
    collectionName = "",
    partitionNames = _root_.scala.Seq.empty,
    requests = _root_.scala.Seq.empty,
    rankParams = _root_.scala.Seq.empty,
    travelTimestamp = 0L,
    guaranteeTimestamp = 0L,
    notReturnAllMeta = false,
    outputFields = _root_.scala.Seq.empty,
    consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong,
    useDefaultConsistency = false,
    functionScore = _root_.scala.None
  )
  implicit class HybridSearchRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.HybridSearchRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.HybridSearchRequest](_l) {
    def base: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.MsgBase] = field(_.getBase)((c_, f_) => c_.copy(base = _root_.scala.Option(f_)))
    def optionalBase: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.common.MsgBase]] = field(_.base)((c_, f_) => c_.copy(base = f_))
    def dbName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.dbName)((c_, f_) => c_.copy(dbName = f_))
    def collectionName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.collectionName)((c_, f_) => c_.copy(collectionName = f_))
    def partitionNames: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.partitionNames)((c_, f_) => c_.copy(partitionNames = f_))
    def requests: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.milvus.SearchRequest]] = field(_.requests)((c_, f_) => c_.copy(requests = f_))
    def rankParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]] = field(_.rankParams)((c_, f_) => c_.copy(rankParams = f_))
    def travelTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.travelTimestamp)((c_, f_) => c_.copy(travelTimestamp = f_))
    def guaranteeTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.guaranteeTimestamp)((c_, f_) => c_.copy(guaranteeTimestamp = f_))
    def notReturnAllMeta: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.notReturnAllMeta)((c_, f_) => c_.copy(notReturnAllMeta = f_))
    def outputFields: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.outputFields)((c_, f_) => c_.copy(outputFields = f_))
    def consistencyLevel: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.ConsistencyLevel] = field(_.consistencyLevel)((c_, f_) => c_.copy(consistencyLevel = f_))
    def useDefaultConsistency: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.useDefaultConsistency)((c_, f_) => c_.copy(useDefaultConsistency = f_))
    def functionScore: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.FunctionScore] = field(_.getFunctionScore)((c_, f_) => c_.copy(functionScore = _root_.scala.Option(f_)))
    def optionalFunctionScore: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.schema.FunctionScore]] = field(_.functionScore)((c_, f_) => c_.copy(functionScore = f_))
  }
  final val BASE_FIELD_NUMBER = 1
  final val DB_NAME_FIELD_NUMBER = 2
  final val COLLECTION_NAME_FIELD_NUMBER = 3
  final val PARTITION_NAMES_FIELD_NUMBER = 4
  final val REQUESTS_FIELD_NUMBER = 5
  final val RANK_PARAMS_FIELD_NUMBER = 6
  final val TRAVEL_TIMESTAMP_FIELD_NUMBER = 7
  final val GUARANTEE_TIMESTAMP_FIELD_NUMBER = 8
  final val NOT_RETURN_ALL_META_FIELD_NUMBER = 9
  final val OUTPUT_FIELDS_FIELD_NUMBER = 10
  final val CONSISTENCY_LEVEL_FIELD_NUMBER = 11
  final val USE_DEFAULT_CONSISTENCY_FIELD_NUMBER = 12
  final val FUNCTION_SCORE_FIELD_NUMBER = 13
  def of(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase],
    dbName: _root_.scala.Predef.String,
    collectionName: _root_.scala.Predef.String,
    partitionNames: _root_.scala.Seq[_root_.scala.Predef.String],
    requests: _root_.scala.Seq[io.milvus.grpc.milvus.SearchRequest],
    rankParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair],
    travelTimestamp: _root_.scala.Long,
    guaranteeTimestamp: _root_.scala.Long,
    notReturnAllMeta: _root_.scala.Boolean,
    outputFields: _root_.scala.Seq[_root_.scala.Predef.String],
    consistencyLevel: io.milvus.grpc.common.ConsistencyLevel,
    useDefaultConsistency: _root_.scala.Boolean,
    functionScore: _root_.scala.Option[io.milvus.grpc.schema.FunctionScore]
  ): _root_.io.milvus.grpc.milvus.HybridSearchRequest = _root_.io.milvus.grpc.milvus.HybridSearchRequest(
    base,
    dbName,
    collectionName,
    partitionNames,
    requests,
    rankParams,
    travelTimestamp,
    guaranteeTimestamp,
    notReturnAllMeta,
    outputFields,
    consistencyLevel,
    useDefaultConsistency,
    functionScore
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.HybridSearchRequest])
}
