// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

@SerialVersionUID(0L)
final case class PersistentSegmentInfo(
    segmentID: _root_.scala.Long = 0L,
    collectionID: _root_.scala.Long = 0L,
    partitionID: _root_.scala.Long = 0L,
    numRows: _root_.scala.Long = 0L,
    state: io.milvus.grpc.common.SegmentState = io.milvus.grpc.common.SegmentState.SegmentStateNone,
    level: io.milvus.grpc.common.SegmentLevel = io.milvus.grpc.common.SegmentLevel.Legacy,
    isSorted: _root_.scala.Boolean = false,
    storageVersion: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PersistentSegmentInfo] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = segmentID
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = collectionID
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      
      {
        val __value = partitionID
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = numRows
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      
      {
        val __value = state.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      
      {
        val __value = level.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
        }
      };
      
      {
        val __value = isSorted
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, __value)
        }
      };
      
      {
        val __value = storageVersion
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = segmentID
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = collectionID
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      {
        val __v = partitionID
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = numRows
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      {
        val __v = state.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      {
        val __v = level.value
        if (__v != 0) {
          _output__.writeEnum(6, __v)
        }
      };
      {
        val __v = isSorted
        if (__v != false) {
          _output__.writeBool(7, __v)
        }
      };
      {
        val __v = storageVersion
        if (__v != 0L) {
          _output__.writeInt64(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withSegmentID(__v: _root_.scala.Long): PersistentSegmentInfo = copy(segmentID = __v)
    def withCollectionID(__v: _root_.scala.Long): PersistentSegmentInfo = copy(collectionID = __v)
    def withPartitionID(__v: _root_.scala.Long): PersistentSegmentInfo = copy(partitionID = __v)
    def withNumRows(__v: _root_.scala.Long): PersistentSegmentInfo = copy(numRows = __v)
    def withState(__v: io.milvus.grpc.common.SegmentState): PersistentSegmentInfo = copy(state = __v)
    def withLevel(__v: io.milvus.grpc.common.SegmentLevel): PersistentSegmentInfo = copy(level = __v)
    def withIsSorted(__v: _root_.scala.Boolean): PersistentSegmentInfo = copy(isSorted = __v)
    def withStorageVersion(__v: _root_.scala.Long): PersistentSegmentInfo = copy(storageVersion = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = segmentID
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = collectionID
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = partitionID
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = numRows
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = state.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => {
          val __t = level.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 7 => {
          val __t = isSorted
          if (__t != false) __t else null
        }
        case 8 => {
          val __t = storageVersion
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(segmentID)
        case 2 => _root_.scalapb.descriptors.PLong(collectionID)
        case 3 => _root_.scalapb.descriptors.PLong(partitionID)
        case 4 => _root_.scalapb.descriptors.PLong(numRows)
        case 5 => _root_.scalapb.descriptors.PEnum(state.scalaValueDescriptor)
        case 6 => _root_.scalapb.descriptors.PEnum(level.scalaValueDescriptor)
        case 7 => _root_.scalapb.descriptors.PBoolean(isSorted)
        case 8 => _root_.scalapb.descriptors.PLong(storageVersion)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.PersistentSegmentInfo.type = io.milvus.grpc.milvus.PersistentSegmentInfo
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.PersistentSegmentInfo])
}

object PersistentSegmentInfo extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.PersistentSegmentInfo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.PersistentSegmentInfo] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.PersistentSegmentInfo = {
    var __segmentID: _root_.scala.Long = 0L
    var __collectionID: _root_.scala.Long = 0L
    var __partitionID: _root_.scala.Long = 0L
    var __numRows: _root_.scala.Long = 0L
    var __state: io.milvus.grpc.common.SegmentState = io.milvus.grpc.common.SegmentState.SegmentStateNone
    var __level: io.milvus.grpc.common.SegmentLevel = io.milvus.grpc.common.SegmentLevel.Legacy
    var __isSorted: _root_.scala.Boolean = false
    var __storageVersion: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __segmentID = _input__.readInt64()
        case 16 =>
          __collectionID = _input__.readInt64()
        case 24 =>
          __partitionID = _input__.readInt64()
        case 32 =>
          __numRows = _input__.readInt64()
        case 40 =>
          __state = io.milvus.grpc.common.SegmentState.fromValue(_input__.readEnum())
        case 48 =>
          __level = io.milvus.grpc.common.SegmentLevel.fromValue(_input__.readEnum())
        case 56 =>
          __isSorted = _input__.readBool()
        case 64 =>
          __storageVersion = _input__.readInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.PersistentSegmentInfo(
        segmentID = __segmentID,
        collectionID = __collectionID,
        partitionID = __partitionID,
        numRows = __numRows,
        state = __state,
        level = __level,
        isSorted = __isSorted,
        storageVersion = __storageVersion,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.PersistentSegmentInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.PersistentSegmentInfo(
        segmentID = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        collectionID = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        partitionID = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        numRows = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        state = io.milvus.grpc.common.SegmentState.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.SegmentState.SegmentStateNone.scalaValueDescriptor).number),
        level = io.milvus.grpc.common.SegmentLevel.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.SegmentLevel.Legacy.scalaValueDescriptor).number),
        isSorted = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        storageVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(70)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(70)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => io.milvus.grpc.common.SegmentState
      case 6 => io.milvus.grpc.common.SegmentLevel
    }
  }
  lazy val defaultInstance = io.milvus.grpc.milvus.PersistentSegmentInfo(
    segmentID = 0L,
    collectionID = 0L,
    partitionID = 0L,
    numRows = 0L,
    state = io.milvus.grpc.common.SegmentState.SegmentStateNone,
    level = io.milvus.grpc.common.SegmentLevel.Legacy,
    isSorted = false,
    storageVersion = 0L
  )
  implicit class PersistentSegmentInfoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.PersistentSegmentInfo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.PersistentSegmentInfo](_l) {
    def segmentID: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.segmentID)((c_, f_) => c_.copy(segmentID = f_))
    def collectionID: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.collectionID)((c_, f_) => c_.copy(collectionID = f_))
    def partitionID: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.partitionID)((c_, f_) => c_.copy(partitionID = f_))
    def numRows: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.numRows)((c_, f_) => c_.copy(numRows = f_))
    def state: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.SegmentState] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def level: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.SegmentLevel] = field(_.level)((c_, f_) => c_.copy(level = f_))
    def isSorted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isSorted)((c_, f_) => c_.copy(isSorted = f_))
    def storageVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.storageVersion)((c_, f_) => c_.copy(storageVersion = f_))
  }
  final val SEGMENTID_FIELD_NUMBER = 1
  final val COLLECTIONID_FIELD_NUMBER = 2
  final val PARTITIONID_FIELD_NUMBER = 3
  final val NUM_ROWS_FIELD_NUMBER = 4
  final val STATE_FIELD_NUMBER = 5
  final val LEVEL_FIELD_NUMBER = 6
  final val IS_SORTED_FIELD_NUMBER = 7
  final val STORAGE_VERSION_FIELD_NUMBER = 8
  def of(
    segmentID: _root_.scala.Long,
    collectionID: _root_.scala.Long,
    partitionID: _root_.scala.Long,
    numRows: _root_.scala.Long,
    state: io.milvus.grpc.common.SegmentState,
    level: io.milvus.grpc.common.SegmentLevel,
    isSorted: _root_.scala.Boolean,
    storageVersion: _root_.scala.Long
  ): _root_.io.milvus.grpc.milvus.PersistentSegmentInfo = _root_.io.milvus.grpc.milvus.PersistentSegmentInfo(
    segmentID,
    collectionID,
    partitionID,
    numRows,
    state,
    level,
    isSorted,
    storageVersion
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.PersistentSegmentInfo])
}
