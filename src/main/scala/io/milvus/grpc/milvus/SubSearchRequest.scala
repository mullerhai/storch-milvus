// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

/** @param dsl
  *   must
  * @param placeholderGroup
  *   serialized `PlaceholderGroup`
  *   must
  * @param dslType
  *   must
  * @param searchParams
  *   must
  */
@SerialVersionUID(0L)
final case class SubSearchRequest(
    dsl: _root_.scala.Predef.String = "",
    placeholderGroup: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    dslType: io.milvus.grpc.common.DslType = io.milvus.grpc.common.DslType.Dsl,
    searchParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair] = _root_.scala.Seq.empty,
    nq: _root_.scala.Long = 0L,
    exprTemplateValues: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue] = _root_.scala.collection.immutable.Map.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SubSearchRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = dsl
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = placeholderGroup
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      
      {
        val __value = dslType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      searchParams.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = nq
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, __value)
        }
      };
      exprTemplateValues.foreach { __item =>
        val __value = io.milvus.grpc.milvus.SubSearchRequest._typemapper_exprTemplateValues.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = dsl
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = placeholderGroup
        if (!__v.isEmpty) {
          _output__.writeBytes(2, __v)
        }
      };
      {
        val __v = dslType.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      searchParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = nq
        if (__v != 0L) {
          _output__.writeInt64(5, __v)
        }
      };
      exprTemplateValues.foreach { __v =>
        val __m = io.milvus.grpc.milvus.SubSearchRequest._typemapper_exprTemplateValues.toBase(__v)
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withDsl(__v: _root_.scala.Predef.String): SubSearchRequest = copy(dsl = __v)
    def withPlaceholderGroup(__v: _root_.com.google.protobuf.ByteString): SubSearchRequest = copy(placeholderGroup = __v)
    def withDslType(__v: io.milvus.grpc.common.DslType): SubSearchRequest = copy(dslType = __v)
    def clearSearchParams = copy(searchParams = _root_.scala.Seq.empty)
    def addSearchParams(__vs: io.milvus.grpc.common.KeyValuePair *): SubSearchRequest = addAllSearchParams(__vs)
    def addAllSearchParams(__vs: Iterable[io.milvus.grpc.common.KeyValuePair]): SubSearchRequest = copy(searchParams = searchParams ++ __vs)
    def withSearchParams(__v: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]): SubSearchRequest = copy(searchParams = __v)
    def withNq(__v: _root_.scala.Long): SubSearchRequest = copy(nq = __v)
    def clearExprTemplateValues = copy(exprTemplateValues = _root_.scala.collection.immutable.Map.empty)
    def addExprTemplateValues(__vs: (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue) *): SubSearchRequest = addAllExprTemplateValues(__vs)
    def addAllExprTemplateValues(__vs: Iterable[(_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)]): SubSearchRequest = copy(exprTemplateValues = exprTemplateValues ++ __vs)
    def withExprTemplateValues(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]): SubSearchRequest = copy(exprTemplateValues = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = dsl
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = placeholderGroup
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => {
          val __t = dslType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 4 => searchParams
        case 5 => {
          val __t = nq
          if (__t != 0L) __t else null
        }
        case 6 => exprTemplateValues.iterator.map(io.milvus.grpc.milvus.SubSearchRequest._typemapper_exprTemplateValues.toBase(_)).toSeq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(dsl)
        case 2 => _root_.scalapb.descriptors.PByteString(placeholderGroup)
        case 3 => _root_.scalapb.descriptors.PEnum(dslType.scalaValueDescriptor)
        case 4 => _root_.scalapb.descriptors.PRepeated(searchParams.iterator.map(_.toPMessage).toVector)
        case 5 => _root_.scalapb.descriptors.PLong(nq)
        case 6 => _root_.scalapb.descriptors.PRepeated(exprTemplateValues.iterator.map(io.milvus.grpc.milvus.SubSearchRequest._typemapper_exprTemplateValues.toBase(_).toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.SubSearchRequest.type = io.milvus.grpc.milvus.SubSearchRequest
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.SubSearchRequest])
}

object SubSearchRequest extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.SubSearchRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.SubSearchRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.SubSearchRequest = {
    var __dsl: _root_.scala.Predef.String = ""
    var __placeholderGroup: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __dslType: io.milvus.grpc.common.DslType = io.milvus.grpc.common.DslType.Dsl
    val __searchParams: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair]
    var __nq: _root_.scala.Long = 0L
    val __exprTemplateValues: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __dsl = _input__.readStringRequireUtf8()
        case 18 =>
          __placeholderGroup = _input__.readBytes()
        case 24 =>
          __dslType = io.milvus.grpc.common.DslType.fromValue(_input__.readEnum())
        case 34 =>
          __searchParams += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.KeyValuePair](_input__)
        case 40 =>
          __nq = _input__.readInt64()
        case 50 =>
          __exprTemplateValues += io.milvus.grpc.milvus.SubSearchRequest._typemapper_exprTemplateValues.toCustom(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry](_input__))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.SubSearchRequest(
        dsl = __dsl,
        placeholderGroup = __placeholderGroup,
        dslType = __dslType,
        searchParams = __searchParams.result(),
        nq = __nq,
        exprTemplateValues = __exprTemplateValues.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.SubSearchRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.SubSearchRequest(
        dsl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        placeholderGroup = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        dslType = io.milvus.grpc.common.DslType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.DslType.Dsl.scalaValueDescriptor).number),
        searchParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]]).getOrElse(_root_.scala.Seq.empty),
        nq = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        exprTemplateValues = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(io.milvus.grpc.milvus.SubSearchRequest._typemapper_exprTemplateValues.toCustom(_)).toMap
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(54)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(54)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = io.milvus.grpc.common.KeyValuePair
      case 6 => __out = io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      _root_.io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => io.milvus.grpc.common.DslType
    }
  }
  lazy val defaultInstance = io.milvus.grpc.milvus.SubSearchRequest(
    dsl = "",
    placeholderGroup = _root_.com.google.protobuf.ByteString.EMPTY,
    dslType = io.milvus.grpc.common.DslType.Dsl,
    searchParams = _root_.scala.Seq.empty,
    nq = 0L,
    exprTemplateValues = _root_.scala.collection.immutable.Map.empty
  )
  @SerialVersionUID(0L)
  final case class ExprTemplateValuesEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ExprTemplateValuesEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): ExprTemplateValuesEntry = copy(key = __v)
      def getValue: io.milvus.grpc.schema.TemplateValue = value.getOrElse(io.milvus.grpc.schema.TemplateValue.defaultInstance)
      def clearValue: ExprTemplateValuesEntry = copy(value = _root_.scala.None)
      def withValue(__v: io.milvus.grpc.schema.TemplateValue): ExprTemplateValuesEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry.type = io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry
      // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.SubSearchRequest.ExprTemplateValuesEntry])
  }
  
  object ExprTemplateValuesEntry extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.schema.TemplateValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.schema.TemplateValue]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.SubSearchRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.SubSearchRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = io.milvus.grpc.schema.TemplateValue
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class ExprTemplateValuesEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.TemplateValue] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.schema.TemplateValue]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)] =
      _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)](__m => (__m.key, __m.getValue))(__p => io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue]
    ): _root_.io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry = _root_.io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.SubSearchRequest.ExprTemplateValuesEntry])
  }
  
  implicit class SubSearchRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.SubSearchRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.SubSearchRequest](_l) {
    def dsl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.dsl)((c_, f_) => c_.copy(dsl = f_))
    def placeholderGroup: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.placeholderGroup)((c_, f_) => c_.copy(placeholderGroup = f_))
    def dslType: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.DslType] = field(_.dslType)((c_, f_) => c_.copy(dslType = f_))
    def searchParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]] = field(_.searchParams)((c_, f_) => c_.copy(searchParams = f_))
    def nq: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.nq)((c_, f_) => c_.copy(nq = f_))
    def exprTemplateValues: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]] = field(_.exprTemplateValues)((c_, f_) => c_.copy(exprTemplateValues = f_))
  }
  final val DSL_FIELD_NUMBER = 1
  final val PLACEHOLDER_GROUP_FIELD_NUMBER = 2
  final val DSL_TYPE_FIELD_NUMBER = 3
  final val SEARCH_PARAMS_FIELD_NUMBER = 4
  final val NQ_FIELD_NUMBER = 5
  final val EXPR_TEMPLATE_VALUES_FIELD_NUMBER = 6
  @transient
  private[milvus] val _typemapper_exprTemplateValues: _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)] = implicitly[_root_.scalapb.TypeMapper[io.milvus.grpc.milvus.SubSearchRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)]]
  def of(
    dsl: _root_.scala.Predef.String,
    placeholderGroup: _root_.com.google.protobuf.ByteString,
    dslType: io.milvus.grpc.common.DslType,
    searchParams: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair],
    nq: _root_.scala.Long,
    exprTemplateValues: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]
  ): _root_.io.milvus.grpc.milvus.SubSearchRequest = _root_.io.milvus.grpc.milvus.SubSearchRequest(
    dsl,
    placeholderGroup,
    dslType,
    searchParams,
    nq,
    exprTemplateValues
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.SubSearchRequest])
}
