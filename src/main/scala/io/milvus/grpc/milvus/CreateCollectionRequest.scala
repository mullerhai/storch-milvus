// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

/** *
  * Create collection in milvus
  *
  * @param base
  *   Not useful for now
  * @param collectionName
  *   The unique collection name in milvus.(Required)
  * @param schema
  *   The serialized `schema.CollectionSchema`(Required)
  * @param shardsNum
  *   Once set, no modification is allowed (Optional)
  *   https://github.com/milvus-io/milvus/issues/6690
  * @param consistencyLevel
  *   The consistency level that the collection used, modification is not supported now.
  * @param numPartitions
  *   num of default physical partitions, only used in partition key mode and changes are not supported
  */
@SerialVersionUID(0L)
final case class CreateCollectionRequest(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None,
    dbName: _root_.scala.Predef.String = "",
    collectionName: _root_.scala.Predef.String = "",
    schema: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    shardsNum: _root_.scala.Int = 0,
    consistencyLevel: io.milvus.grpc.common.ConsistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong,
    properties: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair] = _root_.scala.Seq.empty,
    numPartitions: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CreateCollectionRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (base.isDefined) {
        val __value = base.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = dbName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = collectionName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = schema
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, __value)
        }
      };
      
      {
        val __value = shardsNum
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(5, __value)
        }
      };
      
      {
        val __value = consistencyLevel.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
        }
      };
      properties.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = numPartitions
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      base.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = dbName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = collectionName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = schema
        if (!__v.isEmpty) {
          _output__.writeBytes(4, __v)
        }
      };
      {
        val __v = shardsNum
        if (__v != 0) {
          _output__.writeInt32(5, __v)
        }
      };
      {
        val __v = consistencyLevel.value
        if (__v != 0) {
          _output__.writeEnum(6, __v)
        }
      };
      properties.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = numPartitions
        if (__v != 0L) {
          _output__.writeInt64(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getBase: io.milvus.grpc.common.MsgBase = base.getOrElse(io.milvus.grpc.common.MsgBase.defaultInstance)
    def clearBase: CreateCollectionRequest = copy(base = _root_.scala.None)
    def withBase(__v: io.milvus.grpc.common.MsgBase): CreateCollectionRequest = copy(base = Option(__v))
    def withDbName(__v: _root_.scala.Predef.String): CreateCollectionRequest = copy(dbName = __v)
    def withCollectionName(__v: _root_.scala.Predef.String): CreateCollectionRequest = copy(collectionName = __v)
    def withSchema(__v: _root_.com.google.protobuf.ByteString): CreateCollectionRequest = copy(schema = __v)
    def withShardsNum(__v: _root_.scala.Int): CreateCollectionRequest = copy(shardsNum = __v)
    def withConsistencyLevel(__v: io.milvus.grpc.common.ConsistencyLevel): CreateCollectionRequest = copy(consistencyLevel = __v)
    def clearProperties = copy(properties = _root_.scala.Seq.empty)
    def addProperties(__vs: io.milvus.grpc.common.KeyValuePair *): CreateCollectionRequest = addAllProperties(__vs)
    def addAllProperties(__vs: Iterable[io.milvus.grpc.common.KeyValuePair]): CreateCollectionRequest = copy(properties = properties ++ __vs)
    def withProperties(__v: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]): CreateCollectionRequest = copy(properties = __v)
    def withNumPartitions(__v: _root_.scala.Long): CreateCollectionRequest = copy(numPartitions = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => base.orNull
        case 2 => {
          val __t = dbName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = collectionName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = schema
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 5 => {
          val __t = shardsNum
          if (__t != 0) __t else null
        }
        case 6 => {
          val __t = consistencyLevel.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 7 => properties
        case 8 => {
          val __t = numPartitions
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => base.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(dbName)
        case 3 => _root_.scalapb.descriptors.PString(collectionName)
        case 4 => _root_.scalapb.descriptors.PByteString(schema)
        case 5 => _root_.scalapb.descriptors.PInt(shardsNum)
        case 6 => _root_.scalapb.descriptors.PEnum(consistencyLevel.scalaValueDescriptor)
        case 7 => _root_.scalapb.descriptors.PRepeated(properties.iterator.map(_.toPMessage).toVector)
        case 8 => _root_.scalapb.descriptors.PLong(numPartitions)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.CreateCollectionRequest.type = io.milvus.grpc.milvus.CreateCollectionRequest
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.CreateCollectionRequest])
}

object CreateCollectionRequest extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.CreateCollectionRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.CreateCollectionRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.CreateCollectionRequest = {
    var __base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None
    var __dbName: _root_.scala.Predef.String = ""
    var __collectionName: _root_.scala.Predef.String = ""
    var __schema: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __shardsNum: _root_.scala.Int = 0
    var __consistencyLevel: io.milvus.grpc.common.ConsistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong
    val __properties: _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair] = new _root_.scala.collection.immutable.VectorBuilder[io.milvus.grpc.common.KeyValuePair]
    var __numPartitions: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __base = _root_.scala.Option(__base.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.MsgBase](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __dbName = _input__.readStringRequireUtf8()
        case 26 =>
          __collectionName = _input__.readStringRequireUtf8()
        case 34 =>
          __schema = _input__.readBytes()
        case 40 =>
          __shardsNum = _input__.readInt32()
        case 48 =>
          __consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.fromValue(_input__.readEnum())
        case 58 =>
          __properties += _root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.KeyValuePair](_input__)
        case 64 =>
          __numPartitions = _input__.readInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.CreateCollectionRequest(
        base = __base,
        dbName = __dbName,
        collectionName = __collectionName,
        schema = __schema,
        shardsNum = __shardsNum,
        consistencyLevel = __consistencyLevel,
        properties = __properties.result(),
        numPartitions = __numPartitions,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.CreateCollectionRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.CreateCollectionRequest(
        base = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.common.MsgBase]]),
        dbName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        collectionName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        schema = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        shardsNum = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.ConsistencyLevel.Strong.scalaValueDescriptor).number),
        properties = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]]).getOrElse(_root_.scala.Seq.empty),
        numPartitions = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.milvus.grpc.common.MsgBase
      case 7 => __out = io.milvus.grpc.common.KeyValuePair
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => io.milvus.grpc.common.ConsistencyLevel
    }
  }
  lazy val defaultInstance = io.milvus.grpc.milvus.CreateCollectionRequest(
    base = _root_.scala.None,
    dbName = "",
    collectionName = "",
    schema = _root_.com.google.protobuf.ByteString.EMPTY,
    shardsNum = 0,
    consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong,
    properties = _root_.scala.Seq.empty,
    numPartitions = 0L
  )
  implicit class CreateCollectionRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.CreateCollectionRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.CreateCollectionRequest](_l) {
    def base: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.MsgBase] = field(_.getBase)((c_, f_) => c_.copy(base = _root_.scala.Option(f_)))
    def optionalBase: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.common.MsgBase]] = field(_.base)((c_, f_) => c_.copy(base = f_))
    def dbName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.dbName)((c_, f_) => c_.copy(dbName = f_))
    def collectionName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.collectionName)((c_, f_) => c_.copy(collectionName = f_))
    def schema: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.schema)((c_, f_) => c_.copy(schema = f_))
    def shardsNum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.shardsNum)((c_, f_) => c_.copy(shardsNum = f_))
    def consistencyLevel: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.ConsistencyLevel] = field(_.consistencyLevel)((c_, f_) => c_.copy(consistencyLevel = f_))
    def properties: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair]] = field(_.properties)((c_, f_) => c_.copy(properties = f_))
    def numPartitions: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.numPartitions)((c_, f_) => c_.copy(numPartitions = f_))
  }
  final val BASE_FIELD_NUMBER = 1
  final val DB_NAME_FIELD_NUMBER = 2
  final val COLLECTION_NAME_FIELD_NUMBER = 3
  final val SCHEMA_FIELD_NUMBER = 4
  final val SHARDS_NUM_FIELD_NUMBER = 5
  final val CONSISTENCY_LEVEL_FIELD_NUMBER = 6
  final val PROPERTIES_FIELD_NUMBER = 7
  final val NUM_PARTITIONS_FIELD_NUMBER = 8
  def of(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase],
    dbName: _root_.scala.Predef.String,
    collectionName: _root_.scala.Predef.String,
    schema: _root_.com.google.protobuf.ByteString,
    shardsNum: _root_.scala.Int,
    consistencyLevel: io.milvus.grpc.common.ConsistencyLevel,
    properties: _root_.scala.Seq[io.milvus.grpc.common.KeyValuePair],
    numPartitions: _root_.scala.Long
  ): _root_.io.milvus.grpc.milvus.CreateCollectionRequest = _root_.io.milvus.grpc.milvus.CreateCollectionRequest(
    base,
    dbName,
    collectionName,
    schema,
    shardsNum,
    consistencyLevel,
    properties,
    numPartitions
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.CreateCollectionRequest])
}
