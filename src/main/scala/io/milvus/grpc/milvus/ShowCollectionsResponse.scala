// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

/**
  * Return basic collection infos.
  *
  * @param status
  *   Contain error_code and reason
  * @param collectionNames
  *   Collection name array
  * @param collectionIds
  *   Collection Id array
  * @param createdTimestamps
  *   Hybrid timestamps in milvus
  * @param createdUtcTimestamps
  *   The utc timestamp calculated by created_timestamp
  * @param inMemoryPercentages
  *   Load percentage on querynode when type is InMemory
  *   Deprecated: use GetLoadingProgress rpc instead
  * @param queryServiceAvailable
  *   Indicate whether query service is available
  */
@SerialVersionUID(0L)
final case class ShowCollectionsResponse(
    status: _root_.scala.Option[io.milvus.grpc.common.Status] = _root_.scala.None,
    collectionNames: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    collectionIds: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    createdTimestamps: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    createdUtcTimestamps: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    @scala.deprecated(message="Marked as deprecated in proto file", "") inMemoryPercentages: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    queryServiceAvailable: _root_.scala.Seq[_root_.scala.Boolean] = _root_.scala.Seq.empty,
    shardsNum: _root_.scala.Seq[_root_.scala.Int] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ShowCollectionsResponse] {
    private[this] def collectionIdsSerializedSize = {
      if (__collectionIdsSerializedSizeField == 0) __collectionIdsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        collectionIds.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
        __s
      }
      __collectionIdsSerializedSizeField
    }
    @transient private[this] var __collectionIdsSerializedSizeField: _root_.scala.Int = 0
    private[this] def createdTimestampsSerializedSize = {
      if (__createdTimestampsSerializedSizeField == 0) __createdTimestampsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        createdTimestamps.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeUInt64SizeNoTag(__i))
        __s
      }
      __createdTimestampsSerializedSizeField
    }
    @transient private[this] var __createdTimestampsSerializedSizeField: _root_.scala.Int = 0
    private[this] def createdUtcTimestampsSerializedSize = {
      if (__createdUtcTimestampsSerializedSizeField == 0) __createdUtcTimestampsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        createdUtcTimestamps.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeUInt64SizeNoTag(__i))
        __s
      }
      __createdUtcTimestampsSerializedSizeField
    }
    @transient private[this] var __createdUtcTimestampsSerializedSizeField: _root_.scala.Int = 0
    private[this] def inMemoryPercentagesSerializedSize = {
      if (__inMemoryPercentagesSerializedSizeField == 0) __inMemoryPercentagesSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        inMemoryPercentages.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
        __s
      }
      __inMemoryPercentagesSerializedSizeField
    }
    @transient private[this] var __inMemoryPercentagesSerializedSizeField: _root_.scala.Int = 0
    private[this] def queryServiceAvailableSerializedSize = {
      1 * queryServiceAvailable.size
    }
    private[this] def shardsNumSerializedSize = {
      if (__shardsNumSerializedSizeField == 0) __shardsNumSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        shardsNum.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
        __s
      }
      __shardsNumSerializedSizeField
    }
    @transient private[this] var __shardsNumSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (status.isDefined) {
        val __value = status.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      collectionNames.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      if (collectionIds.nonEmpty) {
        val __localsize = collectionIdsSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (createdTimestamps.nonEmpty) {
        val __localsize = createdTimestampsSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (createdUtcTimestamps.nonEmpty) {
        val __localsize = createdUtcTimestampsSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (inMemoryPercentages.nonEmpty) {
        val __localsize = inMemoryPercentagesSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (queryServiceAvailable.nonEmpty) {
        val __localsize = queryServiceAvailableSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (shardsNum.nonEmpty) {
        val __localsize = shardsNumSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      status.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      collectionNames.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      if (collectionIds.nonEmpty) {
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(collectionIdsSerializedSize)
        collectionIds.foreach(_output__.writeInt64NoTag)
      };
      if (createdTimestamps.nonEmpty) {
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(createdTimestampsSerializedSize)
        createdTimestamps.foreach(_output__.writeUInt64NoTag)
      };
      if (createdUtcTimestamps.nonEmpty) {
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(createdUtcTimestampsSerializedSize)
        createdUtcTimestamps.foreach(_output__.writeUInt64NoTag)
      };
      if (inMemoryPercentages.nonEmpty) {
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(inMemoryPercentagesSerializedSize)
        inMemoryPercentages.foreach(_output__.writeInt64NoTag)
      };
      if (queryServiceAvailable.nonEmpty) {
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(queryServiceAvailableSerializedSize)
        queryServiceAvailable.foreach(_output__.writeBoolNoTag)
      };
      if (shardsNum.nonEmpty) {
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(shardsNumSerializedSize)
        shardsNum.foreach(_output__.writeInt32NoTag)
      };
      unknownFields.writeTo(_output__)
    }
    def getStatus: io.milvus.grpc.common.Status = status.getOrElse(io.milvus.grpc.common.Status.defaultInstance)
    def clearStatus: ShowCollectionsResponse = copy(status = _root_.scala.None)
    def withStatus(__v: io.milvus.grpc.common.Status): ShowCollectionsResponse = copy(status = Option(__v))
    def clearCollectionNames = copy(collectionNames = _root_.scala.Seq.empty)
    def addCollectionNames(__vs: _root_.scala.Predef.String *): ShowCollectionsResponse = addAllCollectionNames(__vs)
    def addAllCollectionNames(__vs: Iterable[_root_.scala.Predef.String]): ShowCollectionsResponse = copy(collectionNames = collectionNames ++ __vs)
    def withCollectionNames(__v: _root_.scala.Seq[_root_.scala.Predef.String]): ShowCollectionsResponse = copy(collectionNames = __v)
    def clearCollectionIds = copy(collectionIds = _root_.scala.Seq.empty)
    def addCollectionIds(__vs: _root_.scala.Long *): ShowCollectionsResponse = addAllCollectionIds(__vs)
    def addAllCollectionIds(__vs: Iterable[_root_.scala.Long]): ShowCollectionsResponse = copy(collectionIds = collectionIds ++ __vs)
    def withCollectionIds(__v: _root_.scala.Seq[_root_.scala.Long]): ShowCollectionsResponse = copy(collectionIds = __v)
    def clearCreatedTimestamps = copy(createdTimestamps = _root_.scala.Seq.empty)
    def addCreatedTimestamps(__vs: _root_.scala.Long *): ShowCollectionsResponse = addAllCreatedTimestamps(__vs)
    def addAllCreatedTimestamps(__vs: Iterable[_root_.scala.Long]): ShowCollectionsResponse = copy(createdTimestamps = createdTimestamps ++ __vs)
    def withCreatedTimestamps(__v: _root_.scala.Seq[_root_.scala.Long]): ShowCollectionsResponse = copy(createdTimestamps = __v)
    def clearCreatedUtcTimestamps = copy(createdUtcTimestamps = _root_.scala.Seq.empty)
    def addCreatedUtcTimestamps(__vs: _root_.scala.Long *): ShowCollectionsResponse = addAllCreatedUtcTimestamps(__vs)
    def addAllCreatedUtcTimestamps(__vs: Iterable[_root_.scala.Long]): ShowCollectionsResponse = copy(createdUtcTimestamps = createdUtcTimestamps ++ __vs)
    def withCreatedUtcTimestamps(__v: _root_.scala.Seq[_root_.scala.Long]): ShowCollectionsResponse = copy(createdUtcTimestamps = __v)
    def clearInMemoryPercentages = copy(inMemoryPercentages = _root_.scala.Seq.empty)
    def addInMemoryPercentages(__vs: _root_.scala.Long *): ShowCollectionsResponse = addAllInMemoryPercentages(__vs)
    def addAllInMemoryPercentages(__vs: Iterable[_root_.scala.Long]): ShowCollectionsResponse = copy(inMemoryPercentages = inMemoryPercentages ++ __vs)
    def withInMemoryPercentages(__v: _root_.scala.Seq[_root_.scala.Long]): ShowCollectionsResponse = copy(inMemoryPercentages = __v)
    def clearQueryServiceAvailable = copy(queryServiceAvailable = _root_.scala.Seq.empty)
    def addQueryServiceAvailable(__vs: _root_.scala.Boolean *): ShowCollectionsResponse = addAllQueryServiceAvailable(__vs)
    def addAllQueryServiceAvailable(__vs: Iterable[_root_.scala.Boolean]): ShowCollectionsResponse = copy(queryServiceAvailable = queryServiceAvailable ++ __vs)
    def withQueryServiceAvailable(__v: _root_.scala.Seq[_root_.scala.Boolean]): ShowCollectionsResponse = copy(queryServiceAvailable = __v)
    def clearShardsNum = copy(shardsNum = _root_.scala.Seq.empty)
    def addShardsNum(__vs: _root_.scala.Int *): ShowCollectionsResponse = addAllShardsNum(__vs)
    def addAllShardsNum(__vs: Iterable[_root_.scala.Int]): ShowCollectionsResponse = copy(shardsNum = shardsNum ++ __vs)
    def withShardsNum(__v: _root_.scala.Seq[_root_.scala.Int]): ShowCollectionsResponse = copy(shardsNum = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => status.orNull
        case 2 => collectionNames
        case 3 => collectionIds
        case 4 => createdTimestamps
        case 5 => createdUtcTimestamps
        case 6 => inMemoryPercentages
        case 7 => queryServiceAvailable
        case 8 => shardsNum
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => status.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PRepeated(collectionNames.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(collectionIds.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
        case 4 => _root_.scalapb.descriptors.PRepeated(createdTimestamps.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
        case 5 => _root_.scalapb.descriptors.PRepeated(createdUtcTimestamps.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
        case 6 => _root_.scalapb.descriptors.PRepeated(inMemoryPercentages.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
        case 7 => _root_.scalapb.descriptors.PRepeated(queryServiceAvailable.iterator.map(_root_.scalapb.descriptors.PBoolean(_)).toVector)
        case 8 => _root_.scalapb.descriptors.PRepeated(shardsNum.iterator.map(_root_.scalapb.descriptors.PInt(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.ShowCollectionsResponse.type = io.milvus.grpc.milvus.ShowCollectionsResponse
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.ShowCollectionsResponse])
}

object ShowCollectionsResponse extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.ShowCollectionsResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.ShowCollectionsResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.ShowCollectionsResponse = {
    var __status: _root_.scala.Option[io.milvus.grpc.common.Status] = _root_.scala.None
    val __collectionNames: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __collectionIds: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    val __createdTimestamps: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    val __createdUtcTimestamps: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    val __inMemoryPercentages: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    val __queryServiceAvailable: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Boolean] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Boolean]
    val __shardsNum: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Int] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Int]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __status = _root_.scala.Option(__status.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.Status](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __collectionNames += _input__.readStringRequireUtf8()
        case 24 =>
          __collectionIds += _input__.readInt64()
        case 26 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __collectionIds += _input__.readInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case 32 =>
          __createdTimestamps += _input__.readUInt64()
        case 34 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __createdTimestamps += _input__.readUInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case 40 =>
          __createdUtcTimestamps += _input__.readUInt64()
        case 42 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __createdUtcTimestamps += _input__.readUInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case 48 =>
          __inMemoryPercentages += _input__.readInt64()
        case 50 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __inMemoryPercentages += _input__.readInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case 56 =>
          __queryServiceAvailable += _input__.readBool()
        case 58 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __queryServiceAvailable += _input__.readBool()
          }
          _input__.popLimit(oldLimit)
        }
        case 64 =>
          __shardsNum += _input__.readInt32()
        case 66 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __shardsNum += _input__.readInt32()
          }
          _input__.popLimit(oldLimit)
        }
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.ShowCollectionsResponse(
        status = __status,
        collectionNames = __collectionNames.result(),
        collectionIds = __collectionIds.result(),
        createdTimestamps = __createdTimestamps.result(),
        createdUtcTimestamps = __createdUtcTimestamps.result(),
        inMemoryPercentages = __inMemoryPercentages.result(),
        queryServiceAvailable = __queryServiceAvailable.result(),
        shardsNum = __shardsNum.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.ShowCollectionsResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.ShowCollectionsResponse(
        status = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.common.Status]]),
        collectionNames = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        collectionIds = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty),
        createdTimestamps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty),
        createdUtcTimestamps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty),
        inMemoryPercentages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty),
        queryServiceAvailable = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[_root_.scala.Boolean]]).getOrElse(_root_.scala.Seq.empty),
        shardsNum = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[_root_.scala.Int]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(25)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(25)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.milvus.grpc.common.Status
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.milvus.grpc.milvus.ShowCollectionsResponse(
    status = _root_.scala.None,
    collectionNames = _root_.scala.Seq.empty,
    collectionIds = _root_.scala.Seq.empty,
    createdTimestamps = _root_.scala.Seq.empty,
    createdUtcTimestamps = _root_.scala.Seq.empty,
    inMemoryPercentages = _root_.scala.Seq.empty,
    queryServiceAvailable = _root_.scala.Seq.empty,
    shardsNum = _root_.scala.Seq.empty
  )
  implicit class ShowCollectionsResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.ShowCollectionsResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.ShowCollectionsResponse](_l) {
    def status: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.Status] = field(_.getStatus)((c_, f_) => c_.copy(status = _root_.scala.Option(f_)))
    def optionalStatus: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.common.Status]] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def collectionNames: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.collectionNames)((c_, f_) => c_.copy(collectionNames = f_))
    def collectionIds: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.collectionIds)((c_, f_) => c_.copy(collectionIds = f_))
    def createdTimestamps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.createdTimestamps)((c_, f_) => c_.copy(createdTimestamps = f_))
    def createdUtcTimestamps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.createdUtcTimestamps)((c_, f_) => c_.copy(createdUtcTimestamps = f_))
    def inMemoryPercentages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.inMemoryPercentages)((c_, f_) => c_.copy(inMemoryPercentages = f_))
    def queryServiceAvailable: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Boolean]] = field(_.queryServiceAvailable)((c_, f_) => c_.copy(queryServiceAvailable = f_))
    def shardsNum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Int]] = field(_.shardsNum)((c_, f_) => c_.copy(shardsNum = f_))
  }
  final val STATUS_FIELD_NUMBER = 1
  final val COLLECTION_NAMES_FIELD_NUMBER = 2
  final val COLLECTION_IDS_FIELD_NUMBER = 3
  final val CREATED_TIMESTAMPS_FIELD_NUMBER = 4
  final val CREATED_UTC_TIMESTAMPS_FIELD_NUMBER = 5
  final val INMEMORY_PERCENTAGES_FIELD_NUMBER = 6
  final val QUERY_SERVICE_AVAILABLE_FIELD_NUMBER = 7
  final val SHARDS_NUM_FIELD_NUMBER = 8
  def of(
    status: _root_.scala.Option[io.milvus.grpc.common.Status],
    collectionNames: _root_.scala.Seq[_root_.scala.Predef.String],
    collectionIds: _root_.scala.Seq[_root_.scala.Long],
    createdTimestamps: _root_.scala.Seq[_root_.scala.Long],
    createdUtcTimestamps: _root_.scala.Seq[_root_.scala.Long],
    inMemoryPercentages: _root_.scala.Seq[_root_.scala.Long],
    queryServiceAvailable: _root_.scala.Seq[_root_.scala.Boolean],
    shardsNum: _root_.scala.Seq[_root_.scala.Int]
  ): _root_.io.milvus.grpc.milvus.ShowCollectionsResponse = _root_.io.milvus.grpc.milvus.ShowCollectionsResponse(
    status,
    collectionNames,
    collectionIds,
    createdTimestamps,
    createdUtcTimestamps,
    inMemoryPercentages,
    queryServiceAvailable,
    shardsNum
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.ShowCollectionsResponse])
}
