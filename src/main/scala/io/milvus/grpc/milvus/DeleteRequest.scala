// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

@SerialVersionUID(0L)
final case class DeleteRequest(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None,
    dbName: _root_.scala.Predef.String = "",
    collectionName: _root_.scala.Predef.String = "",
    partitionName: _root_.scala.Predef.String = "",
    expr: _root_.scala.Predef.String = "",
    hashKeys: _root_.scala.Seq[_root_.scala.Int] = _root_.scala.Seq.empty,
    consistencyLevel: io.milvus.grpc.common.ConsistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong,
    exprTemplateValues: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue] = _root_.scala.collection.immutable.Map.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DeleteRequest] {
    private[this] def hashKeysSerializedSize = {
      if (__hashKeysSerializedSizeField == 0) __hashKeysSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        hashKeys.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__i))
        __s
      }
      __hashKeysSerializedSizeField
    }
    @transient private[this] var __hashKeysSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (base.isDefined) {
        val __value = base.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = dbName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = collectionName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = partitionName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = expr
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      if (hashKeys.nonEmpty) {
        val __localsize = hashKeysSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      
      {
        val __value = consistencyLevel.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(7, __value)
        }
      };
      exprTemplateValues.foreach { __item =>
        val __value = io.milvus.grpc.milvus.DeleteRequest._typemapper_exprTemplateValues.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      base.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = dbName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = collectionName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = partitionName
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = expr
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      if (hashKeys.nonEmpty) {
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(hashKeysSerializedSize)
        hashKeys.foreach(_output__.writeUInt32NoTag)
      };
      {
        val __v = consistencyLevel.value
        if (__v != 0) {
          _output__.writeEnum(7, __v)
        }
      };
      exprTemplateValues.foreach { __v =>
        val __m = io.milvus.grpc.milvus.DeleteRequest._typemapper_exprTemplateValues.toBase(__v)
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getBase: io.milvus.grpc.common.MsgBase = base.getOrElse(io.milvus.grpc.common.MsgBase.defaultInstance)
    def clearBase: DeleteRequest = copy(base = _root_.scala.None)
    def withBase(__v: io.milvus.grpc.common.MsgBase): DeleteRequest = copy(base = Option(__v))
    def withDbName(__v: _root_.scala.Predef.String): DeleteRequest = copy(dbName = __v)
    def withCollectionName(__v: _root_.scala.Predef.String): DeleteRequest = copy(collectionName = __v)
    def withPartitionName(__v: _root_.scala.Predef.String): DeleteRequest = copy(partitionName = __v)
    def withExpr(__v: _root_.scala.Predef.String): DeleteRequest = copy(expr = __v)
    def clearHashKeys = copy(hashKeys = _root_.scala.Seq.empty)
    def addHashKeys(__vs: _root_.scala.Int *): DeleteRequest = addAllHashKeys(__vs)
    def addAllHashKeys(__vs: Iterable[_root_.scala.Int]): DeleteRequest = copy(hashKeys = hashKeys ++ __vs)
    def withHashKeys(__v: _root_.scala.Seq[_root_.scala.Int]): DeleteRequest = copy(hashKeys = __v)
    def withConsistencyLevel(__v: io.milvus.grpc.common.ConsistencyLevel): DeleteRequest = copy(consistencyLevel = __v)
    def clearExprTemplateValues = copy(exprTemplateValues = _root_.scala.collection.immutable.Map.empty)
    def addExprTemplateValues(__vs: (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue) *): DeleteRequest = addAllExprTemplateValues(__vs)
    def addAllExprTemplateValues(__vs: Iterable[(_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)]): DeleteRequest = copy(exprTemplateValues = exprTemplateValues ++ __vs)
    def withExprTemplateValues(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]): DeleteRequest = copy(exprTemplateValues = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => base.orNull
        case 2 => {
          val __t = dbName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = collectionName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = partitionName
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = expr
          if (__t != "") __t else null
        }
        case 6 => hashKeys
        case 7 => {
          val __t = consistencyLevel.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 8 => exprTemplateValues.iterator.map(io.milvus.grpc.milvus.DeleteRequest._typemapper_exprTemplateValues.toBase(_)).toSeq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => base.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(dbName)
        case 3 => _root_.scalapb.descriptors.PString(collectionName)
        case 4 => _root_.scalapb.descriptors.PString(partitionName)
        case 5 => _root_.scalapb.descriptors.PString(expr)
        case 6 => _root_.scalapb.descriptors.PRepeated(hashKeys.iterator.map(_root_.scalapb.descriptors.PInt(_)).toVector)
        case 7 => _root_.scalapb.descriptors.PEnum(consistencyLevel.scalaValueDescriptor)
        case 8 => _root_.scalapb.descriptors.PRepeated(exprTemplateValues.iterator.map(io.milvus.grpc.milvus.DeleteRequest._typemapper_exprTemplateValues.toBase(_).toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.milvus.grpc.milvus.DeleteRequest.type = io.milvus.grpc.milvus.DeleteRequest
    // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.DeleteRequest])
}

object DeleteRequest extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.DeleteRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.DeleteRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.DeleteRequest = {
    var __base: _root_.scala.Option[io.milvus.grpc.common.MsgBase] = _root_.scala.None
    var __dbName: _root_.scala.Predef.String = ""
    var __collectionName: _root_.scala.Predef.String = ""
    var __partitionName: _root_.scala.Predef.String = ""
    var __expr: _root_.scala.Predef.String = ""
    val __hashKeys: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Int] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Int]
    var __consistencyLevel: io.milvus.grpc.common.ConsistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong
    val __exprTemplateValues: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __base = _root_.scala.Option(__base.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.common.MsgBase](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __dbName = _input__.readStringRequireUtf8()
        case 26 =>
          __collectionName = _input__.readStringRequireUtf8()
        case 34 =>
          __partitionName = _input__.readStringRequireUtf8()
        case 42 =>
          __expr = _input__.readStringRequireUtf8()
        case 48 =>
          __hashKeys += _input__.readUInt32()
        case 50 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __hashKeys += _input__.readUInt32()
          }
          _input__.popLimit(oldLimit)
        }
        case 56 =>
          __consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.fromValue(_input__.readEnum())
        case 66 =>
          __exprTemplateValues += io.milvus.grpc.milvus.DeleteRequest._typemapper_exprTemplateValues.toCustom(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry](_input__))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.milvus.grpc.milvus.DeleteRequest(
        base = __base,
        dbName = __dbName,
        collectionName = __collectionName,
        partitionName = __partitionName,
        expr = __expr,
        hashKeys = __hashKeys.result(),
        consistencyLevel = __consistencyLevel,
        exprTemplateValues = __exprTemplateValues.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.DeleteRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.milvus.grpc.milvus.DeleteRequest(
        base = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.common.MsgBase]]),
        dbName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        collectionName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        partitionName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        expr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        hashKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[_root_.scala.Int]]).getOrElse(_root_.scala.Seq.empty),
        consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.milvus.grpc.common.ConsistencyLevel.Strong.scalaValueDescriptor).number),
        exprTemplateValues = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(io.milvus.grpc.milvus.DeleteRequest._typemapper_exprTemplateValues.toCustom(_)).toMap
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getMessageTypes().get(53)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.messages(53)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.milvus.grpc.common.MsgBase
      case 8 => __out = io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      _root_.io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 7 => io.milvus.grpc.common.ConsistencyLevel
    }
  }
  lazy val defaultInstance = io.milvus.grpc.milvus.DeleteRequest(
    base = _root_.scala.None,
    dbName = "",
    collectionName = "",
    partitionName = "",
    expr = "",
    hashKeys = _root_.scala.Seq.empty,
    consistencyLevel = io.milvus.grpc.common.ConsistencyLevel.Strong,
    exprTemplateValues = _root_.scala.collection.immutable.Map.empty
  )
  @SerialVersionUID(0L)
  final case class ExprTemplateValuesEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ExprTemplateValuesEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): ExprTemplateValuesEntry = copy(key = __v)
      def getValue: io.milvus.grpc.schema.TemplateValue = value.getOrElse(io.milvus.grpc.schema.TemplateValue.defaultInstance)
      def clearValue: ExprTemplateValuesEntry = copy(value = _root_.scala.None)
      def withValue(__v: io.milvus.grpc.schema.TemplateValue): ExprTemplateValuesEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry.type = io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry
      // @@protoc_insertion_point(GeneratedMessage[milvus.proto.milvus.DeleteRequest.ExprTemplateValuesEntry])
  }
  
  object ExprTemplateValuesEntry extends scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[io.milvus.grpc.schema.TemplateValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[io.milvus.grpc.schema.TemplateValue]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.milvus.grpc.milvus.DeleteRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.milvus.grpc.milvus.DeleteRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = io.milvus.grpc.schema.TemplateValue
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class ExprTemplateValuesEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.schema.TemplateValue] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.schema.TemplateValue]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)] =
      _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)](__m => (__m.key, __m.getValue))(__p => io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[io.milvus.grpc.schema.TemplateValue]
    ): _root_.io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry = _root_.io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.DeleteRequest.ExprTemplateValuesEntry])
  }
  
  implicit class DeleteRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.milvus.DeleteRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.milvus.grpc.milvus.DeleteRequest](_l) {
    def base: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.MsgBase] = field(_.getBase)((c_, f_) => c_.copy(base = _root_.scala.Option(f_)))
    def optionalBase: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.milvus.grpc.common.MsgBase]] = field(_.base)((c_, f_) => c_.copy(base = f_))
    def dbName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.dbName)((c_, f_) => c_.copy(dbName = f_))
    def collectionName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.collectionName)((c_, f_) => c_.copy(collectionName = f_))
    def partitionName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.partitionName)((c_, f_) => c_.copy(partitionName = f_))
    def expr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.expr)((c_, f_) => c_.copy(expr = f_))
    def hashKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Int]] = field(_.hashKeys)((c_, f_) => c_.copy(hashKeys = f_))
    def consistencyLevel: _root_.scalapb.lenses.Lens[UpperPB, io.milvus.grpc.common.ConsistencyLevel] = field(_.consistencyLevel)((c_, f_) => c_.copy(consistencyLevel = f_))
    def exprTemplateValues: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]] = field(_.exprTemplateValues)((c_, f_) => c_.copy(exprTemplateValues = f_))
  }
  final val BASE_FIELD_NUMBER = 1
  final val DB_NAME_FIELD_NUMBER = 2
  final val COLLECTION_NAME_FIELD_NUMBER = 3
  final val PARTITION_NAME_FIELD_NUMBER = 4
  final val EXPR_FIELD_NUMBER = 5
  final val HASH_KEYS_FIELD_NUMBER = 6
  final val CONSISTENCY_LEVEL_FIELD_NUMBER = 7
  final val EXPR_TEMPLATE_VALUES_FIELD_NUMBER = 8
  @transient
  private[milvus] val _typemapper_exprTemplateValues: _root_.scalapb.TypeMapper[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)] = implicitly[_root_.scalapb.TypeMapper[io.milvus.grpc.milvus.DeleteRequest.ExprTemplateValuesEntry, (_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue)]]
  def of(
    base: _root_.scala.Option[io.milvus.grpc.common.MsgBase],
    dbName: _root_.scala.Predef.String,
    collectionName: _root_.scala.Predef.String,
    partitionName: _root_.scala.Predef.String,
    expr: _root_.scala.Predef.String,
    hashKeys: _root_.scala.Seq[_root_.scala.Int],
    consistencyLevel: io.milvus.grpc.common.ConsistencyLevel,
    exprTemplateValues: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.milvus.grpc.schema.TemplateValue]
  ): _root_.io.milvus.grpc.milvus.DeleteRequest = _root_.io.milvus.grpc.milvus.DeleteRequest(
    base,
    dbName,
    collectionName,
    partitionName,
    expr,
    hashKeys,
    consistencyLevel,
    exprTemplateValues
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[milvus.proto.milvus.DeleteRequest])
}
