// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.milvus.grpc.milvus

@scala.deprecated(message="Marked as deprecated in proto file", "")
/** Deprecated: use GetLoadingProgress rpc instead
  */
@scala.deprecated(message="Marked as deprecated in proto file", "")
sealed abstract class ShowType(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = io.milvus.grpc.milvus.ShowType
  type RecognizedType = io.milvus.grpc.milvus.ShowType.Recognized
  def isAll: _root_.scala.Boolean = false
  def isInMemory: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[ShowType] = io.milvus.grpc.milvus.ShowType
  final def asRecognized: _root_.scala.Option[io.milvus.grpc.milvus.ShowType.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.milvus.grpc.milvus.ShowType.Recognized])
}

@scala.deprecated(message="Marked as deprecated in proto file", "")
object ShowType extends _root_.scalapb.GeneratedEnumCompanion[ShowType] {
  @scala.deprecated(message="Marked as deprecated in proto file", "")
  sealed trait Recognized extends ShowType
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ShowType] = this
  
  /** Will return all collections
    */
  @SerialVersionUID(0L)
  case object All extends ShowType(0) with ShowType.Recognized {
    val index = 0
    val name = "All"
    override def isAll: _root_.scala.Boolean = true
  }
  
  /** Will return loaded collections with their inMemory_percentages
    */
  @SerialVersionUID(0L)
  case object InMemory extends ShowType(1) with ShowType.Recognized {
    val index = 1
    val name = "InMemory"
    override def isInMemory: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  @scala.deprecated(message="Marked as deprecated in proto file", "")
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends ShowType(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(All, InMemory)
  def fromValue(__value: _root_.scala.Int): ShowType = __value match {
    case 0 => All
    case 1 => InMemory
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.milvus.grpc.milvus.MilvusProto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.milvus.grpc.milvus.MilvusProto.scalaDescriptor.enums(0)
}